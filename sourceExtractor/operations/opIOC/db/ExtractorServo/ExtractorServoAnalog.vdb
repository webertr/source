#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Sends MC Below PLOW to system log
record(stringout, "$(Group):PREAD:LTOE:PLOW:String") {
  field(VAL, "$(Group)  Below PLOW")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# ead PSMC Current from PSMC acromag via asyn
# Asyn polls device and creates I/O interrupt
# whenever value changes
record(ai, "$(Group):Servo:GetRead") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask($(ReadPort), $(Offset), -16, 1000)MODBUS_DATA")
  field(FLNK, "$(Group):Servo:ConvRead")
}

# Convert Raw data to reading in Amps
record(calcout, "$(Group):Servo:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A/200")
  field(INPA, "$(Group):Servo:GetRead.VAL")
  field(OUT, "$(Group):Servo:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "A")
  field(PREC, "1")
}

# PSMC Current PREAD
record(ai, "$(Group):Servo:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "%")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
}

# Checks to see if PREAD is greater than or equal to PHIGH.  If so,
# an interlock is set in MCCondition.vdb
record(calcout, "$(Group):Servo:PREAD:GTOE:PHIGH:Calc") {
  field(CALC, "(A>B)|(A=B)")
  field(INPA, "$(Group):Servo:Read.VAL")
  field(INPB, "$(Group):Servo:PHIGH")
  field(OUT, "$(Group):Servo:PREAD:GTOE:PHIGH:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(Group):Servo:PREAD:LTOE:PLOW:Calc")
}

# Sends MC Above PHIGH to system log
record(stringout, "$(Group):Servo:PREAD:GTOE:PHIGH:String") {
  field(VAL, "$(Group) Above PHIGH")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if PREAD is less than or equal to PLOW.  If so,
# an interlock is set in MCCondition.vdb
record(calcout, "$(Group):Servo:PREAD:LTOE:PLOW:Calc") {
  field(CALC, "(A<B)|(A=B)")
  field(INPA, "$(Group):Servo:Read.VAL")
  field(INPB, "$(Group):Servo:PLOW")
  field(OUT, "$(Group):PREAD:LTOE:PLOW:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(Group):Servo:PSETChanged:Calc")
}

# Checks to see if the absolute difference between PREAD and PSET is outside PDIFF.  If so,
# an interlock is set in MCCondition.vdb
record(calcout, "$(Group):Servo:PREADPSET:PDIFF:Calc") {
  field(CALC, "((ABS(A-B))>C)&(D<2)")
  field(INPA, "$(Group):Servo:Read.VAL")
  field(INPB, "$(Group):Servo:Set")
  field(INPC, "$(Group):Servo:PDIFF.VAL")
  field(OUT, "$(Group):Servo:PREADPSET:PDIFF:String.PROC NPP")
  field(FLNK, "$(Group):Servo:PREADPSET:PDIFF:Calc2")
  field(OOPT, "Transition To Non-zero")
  field(INPD, "$(Group):Servo:PSETChanged:Calc")
}

# Sends MC Readback Difference to system log
record(stringout, "$(Group):Servo:PREADPSET:PDIFF:String") {
  field(VAL, "$(Group) Readback Difference")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if the absolute difference between PREAD and PSET is close to being outside PDIFF.
# This is only used to change the PSET and PREAD values yellow on the operator interfaces
# indicating that PREAD-PSET is alomost outside PDIFF.
record(calcout, "$(Group):Servo:PREADPSET:PDIFF:Calc2") {
  field(CALC, "(ABS(A-B))>(.5*C)")
  field(INPA, "$(Group):Servo:Read.VAL")
  field(INPB, "$(Group):Servo:Set")
  field(INPC, "$(Group):Servo:PDIFF.VAL")
  field(FLNK, "$(Group):ReadNotInBounds:Calc")
}

# Receives new PSET from ParamSet.vdb whenever
# PSET changes
record(ai, "$(Group):Servo:SetDevice") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):Servo:SetDeviceCalc")
  field(PREC, "2")
}

# Multiplies PSET by scale factor to convert from Amps
# to raw data scale used by acromag in controlling PSMC Current
record(calc, "$(Group):Servo:SetDeviceCalc") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):Servo:SendSet")
  field(CALC, "A*200")
  field(INPA, "$(Group):Servo:SetDevice.VAL")
  field(PREC, "2")
}

# Send PSET out via asyn to MC acromag
record(ao, "$(Group):Servo:SendSet") {
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(OUT, "@asynMask($(WritePort), 0, 16, 1000)MODBUS_DATA")
  field(PREC, "2")
  field(DOL, "$(Group):Servo:SetDeviceCalc.VAL")
  field(OMSL, "closed_loop")
  field(OIF, "Full")
  field(DRVH, "19600")
  field(DRVL, "7000")
}

record(calcout, "$(Group):Servo:PSETChanged:Calc") {
  field(FLNK, "$(Group):Servo:PREADPSET:PDIFF:Calc")
  field(CALC, "A#B?3:ABS(C-1)")
  field(INPA, "$(Group):Servo:Set")
  field(INPB, "$(Group):Servo:PSETChanged:Calc.LA")
  field(INPC, "$(Group):Servo:PSETChanged:Calc")
}

record(bi, "$(Group):ReadNotInBounds:Status") {
  field(FLNK, "$(Group):Device:Interlock:Status")
  field(INP, "$(Group):ReadNotInBounds:Calc.VAL")
}

record(calcout, "$(Group):ReadNotInBounds:Calc") {
  field(FLNK, "$(Group):ReadNotInBounds:Status")
  field(CALC, "(A>B)|(A<C)")
  field(INPA, "$(Group):Servo:Read")
  field(OUT, "$(Group):ReadNotInBounds:Interlock:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(INPB, "$(Group):Servo:Set.DRVH")
  field(INPC, "$(Group):Servo:Set.DRVL")
}

record(stringout, "$(Group):ReadNotInBounds:Interlock:String") {
  field(VAL, "$(Group) Read out of Tolerance")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(calc, "$(Group):Device:Interlock:Status") {
  field(SCAN, "1 second")
  field(CALC, "A|B")
  field(INPB, "ExtrServo:CommError:Status")
  field(INPA, "$(Group):ReadNotInBounds:Status")
  field(FLNK, "$(Group):Device:Interlock:TurnOff")
}

record(calcout, "$(Group):Device:Interlock:TurnOff") {
  field(SCAN, "1 second")
  field(CALC, "A&B")
  field(INPA, "$(Group):Device:Interlock:Status")
  field(INPB, "$(Group):On:Status")
  field(OUT, "$(Group):OffRequest.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(Group):ParticleBeam:Interlock:Status")
}

#! Further lines contain data used by VisualDCT
#! View(4386,2980,1.3)
#! Record("$(Group):PREAD:LTOE:PLOW:String",1640,1836,0,1,"$(Group):PREAD:LTOE:PLOW:String")
#! Field("$(Group):PREAD:LTOE:PLOW:String.OUT",16777215,1,"$(Group):PREAD:LTOE:PLOW:String.OUT")
#! Field("$(Group):PREAD:LTOE:PLOW:String.PROC",16777215,0,"$(Group):PREAD:LTOE:PLOW:String.PROC")
#! Record("$(Group):Servo:GetRead",2120,748,0,1,"$(Group):Servo:GetRead")
#! Field("$(Group):Servo:GetRead.FLNK",16777215,1,"$(Group):Servo:GetRead.FLNK")
#! Link("$(Group):Servo:GetRead.FLNK","$(Group):Servo:ConvRead")
#! Field("$(Group):Servo:GetRead.VAL",16777215,1,"$(Group):Servo:GetRead.VAL")
#! Record("$(Group):Servo:ConvRead",2480,713,0,0,"$(Group):Servo:ConvRead")
#! Field("$(Group):Servo:ConvRead.INPA",16777215,0,"$(Group):Servo:ConvRead.INPA")
#! Link("$(Group):Servo:ConvRead.INPA","$(Group):Servo:GetRead.VAL")
#! Field("$(Group):Servo:ConvRead.OUT",16777215,1,"$(Group):Servo:ConvRead.OUT")
#! Link("$(Group):Servo:ConvRead.OUT","$(Group):Servo:Read.VAL")
#! Record("$(Group):Servo:Read",2880,753,0,1,"$(Group):Servo:Read")
#! Field("$(Group):Servo:Read.VAL",16777215,0,"$(Group):Servo:Read.VAL")
#! Record("$(Group):Servo:PREAD:GTOE:PHIGH:Calc",900,1620,0,1,"$(Group):Servo:PREAD:GTOE:PHIGH:Calc")
#! Field("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.INPA",16777215,1,"$(Group):Servo:PREAD:GTOE:PHIGH:Calc.INPA")
#! Link("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.INPA","$(Group):Servo:Read.VAL")
#! Field("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.OUT",16777215,0,"$(Group):Servo:PREAD:GTOE:PHIGH:Calc.OUT")
#! Link("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.OUT","$(Group):Servo:PREAD:GTOE:PHIGH:String.PROC")
#! Field("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.INPB",16777215,1,"$(Group):Servo:PREAD:GTOE:PHIGH:Calc.INPB")
#! Field("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.FLNK",16777215,1,"$(Group):Servo:PREAD:GTOE:PHIGH:Calc.FLNK")
#! Link("$(Group):Servo:PREAD:GTOE:PHIGH:Calc.FLNK","$(Group):Servo:PREAD:LTOE:PLOW:Calc")
#! Record("$(Group):Servo:PREAD:GTOE:PHIGH:String",540,1576,0,1,"$(Group):Servo:PREAD:GTOE:PHIGH:String")
#! Field("$(Group):Servo:PREAD:GTOE:PHIGH:String.OUT",16777215,1,"$(Group):Servo:PREAD:GTOE:PHIGH:String.OUT")
#! Field("$(Group):Servo:PREAD:GTOE:PHIGH:String.PROC",16777215,1,"$(Group):Servo:PREAD:GTOE:PHIGH:String.PROC")
#! Record("$(Group):Servo:PREAD:LTOE:PLOW:Calc",1300,1820,0,0,"$(Group):Servo:PREAD:LTOE:PLOW:Calc")
#! Field("$(Group):Servo:PREAD:LTOE:PLOW:Calc.OUT",16777215,1,"$(Group):Servo:PREAD:LTOE:PLOW:Calc.OUT")
#! Link("$(Group):Servo:PREAD:LTOE:PLOW:Calc.OUT","$(Group):PREAD:LTOE:PLOW:String.PROC")
#! Field("$(Group):Servo:PREAD:LTOE:PLOW:Calc.INPA",16777215,1,"$(Group):Servo:PREAD:LTOE:PLOW:Calc.INPA")
#! Link("$(Group):Servo:PREAD:LTOE:PLOW:Calc.INPA","$(Group):Servo:Read.VAL")
#! Field("$(Group):Servo:PREAD:LTOE:PLOW:Calc.INPB",16777215,1,"$(Group):Servo:PREAD:LTOE:PLOW:Calc.INPB")
#! Field("$(Group):Servo:PREAD:LTOE:PLOW:Calc.FLNK",16777215,1,"$(Group):Servo:PREAD:LTOE:PLOW:Calc.FLNK")
#! Link("$(Group):Servo:PREAD:LTOE:PLOW:Calc.FLNK","$(Group):Servo:PSETChanged:Calc")
#! Record("$(Group):Servo:PREADPSET:PDIFF:Calc",2140,2193,0,0,"$(Group):Servo:PREADPSET:PDIFF:Calc")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc.OUT",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc.OUT")
#! Link("$(Group):Servo:PREADPSET:PDIFF:Calc.OUT","$(Group):Servo:PREADPSET:PDIFF:String.PROC")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc.INPC",16777215,0,"$(Group):Servo:PREADPSET:PDIFF:Calc.INPC")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc.INPA",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc.INPA")
#! Link("$(Group):Servo:PREADPSET:PDIFF:Calc.INPA","$(Group):Servo:Read.VAL")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc.INPB",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc.INPB")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc.INPD",16777215,0,"$(Group):Servo:PREADPSET:PDIFF:Calc.INPD")
#! Link("$(Group):Servo:PREADPSET:PDIFF:Calc.INPD","$(Group):Servo:PSETChanged:Calc.VAL")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc.FLNK",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc.FLNK")
#! Link("$(Group):Servo:PREADPSET:PDIFF:Calc.FLNK","$(Group):Servo:PREADPSET:PDIFF:Calc2")
#! Record("$(Group):Servo:PREADPSET:PDIFF:String",2460,2036,0,1,"$(Group):Servo:PREADPSET:PDIFF:String")
#! Field("$(Group):Servo:PREADPSET:PDIFF:String.OUT",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:String.OUT")
#! Field("$(Group):Servo:PREADPSET:PDIFF:String.PROC",16777215,0,"$(Group):Servo:PREADPSET:PDIFF:String.PROC")
#! Record("$(Group):Servo:PREADPSET:PDIFF:Calc2",2460,2434,0,0,"$(Group):Servo:PREADPSET:PDIFF:Calc2")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc2.INPA",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc2.INPA")
#! Link("$(Group):Servo:PREADPSET:PDIFF:Calc2.INPA","$(Group):Servo:Read.VAL")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc2.INPB",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc2.INPB")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc2.INPC",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc2.INPC")
#! Field("$(Group):Servo:PREADPSET:PDIFF:Calc2.FLNK",16777215,1,"$(Group):Servo:PREADPSET:PDIFF:Calc2.FLNK")
#! Link("$(Group):Servo:PREADPSET:PDIFF:Calc2.FLNK","$(Group):ReadNotInBounds:Calc")
#! Record("$(Group):Servo:SetDevice",20,22,0,1,"$(Group):Servo:SetDevice")
#! Field("$(Group):Servo:SetDevice.FLNK",16777215,1,"$(Group):Servo:SetDevice.FLNK")
#! Link("$(Group):Servo:SetDevice.FLNK","$(Group):Servo:SetDeviceCalc")
#! Field("$(Group):Servo:SetDevice.VAL",16777215,1,"$(Group):Servo:SetDevice.VAL")
#! Record("$(Group):Servo:SetDeviceCalc",420,54,0,0,"$(Group):Servo:SetDeviceCalc")
#! Field("$(Group):Servo:SetDeviceCalc.INPA",16777215,0,"$(Group):Servo:SetDeviceCalc.INPA")
#! Link("$(Group):Servo:SetDeviceCalc.INPA","$(Group):Servo:SetDevice.VAL")
#! Field("$(Group):Servo:SetDeviceCalc.FLNK",16777215,1,"$(Group):Servo:SetDeviceCalc.FLNK")
#! Link("$(Group):Servo:SetDeviceCalc.FLNK","$(Group):Servo:SendSet")
#! Field("$(Group):Servo:SetDeviceCalc.VAL",16777215,1,"$(Group):Servo:SetDeviceCalc.VAL")
#! Record("$(Group):Servo:SendSet",740,39,0,0,"$(Group):Servo:SendSet")
#! Field("$(Group):Servo:SendSet.DOL",16777215,0,"$(Group):Servo:SendSet.DOL")
#! Link("$(Group):Servo:SendSet.DOL","$(Group):Servo:SetDeviceCalc.VAL")
#! Record("$(Group):Servo:PSETChanged:Calc",1820,2114,0,0,"$(Group):Servo:PSETChanged:Calc")
#! Field("$(Group):Servo:PSETChanged:Calc.INPA",16777215,1,"$(Group):Servo:PSETChanged:Calc.INPA")
#! Field("$(Group):Servo:PSETChanged:Calc.LA",16777215,0,"$(Group):Servo:PSETChanged:Calc.LA")
#! Field("$(Group):Servo:PSETChanged:Calc.INPB",16777215,0,"$(Group):Servo:PSETChanged:Calc.INPB")
#! Link("$(Group):Servo:PSETChanged:Calc.INPB","$(Group):Servo:PSETChanged:Calc.LA")
#! Field("$(Group):Servo:PSETChanged:Calc.INPC",16777215,0,"$(Group):Servo:PSETChanged:Calc.INPC")
#! Link("$(Group):Servo:PSETChanged:Calc.INPC","$(Group):Servo:PSETChanged:Calc.VAL")
#! Field("$(Group):Servo:PSETChanged:Calc.FLNK",16777215,1,"$(Group):Servo:PSETChanged:Calc.FLNK")
#! Link("$(Group):Servo:PSETChanged:Calc.FLNK","$(Group):Servo:PREADPSET:PDIFF:Calc")
#! Field("$(Group):Servo:PSETChanged:Calc.VAL",16777215,1,"$(Group):Servo:PSETChanged:Calc.VAL")
#! Record("$(Group):ReadNotInBounds:Status",3320,2456,0,0,"$(Group):ReadNotInBounds:Status")
#! Field("$(Group):ReadNotInBounds:Status.FLNK",16777215,1,"$(Group):ReadNotInBounds:Status.FLNK")
#! Link("$(Group):ReadNotInBounds:Status.FLNK","$(Group):Device:Interlock:Status")
#! Field("$(Group):ReadNotInBounds:Status.INP",16777215,0,"$(Group):ReadNotInBounds:Status.INP")
#! Link("$(Group):ReadNotInBounds:Status.INP","$(Group):ReadNotInBounds:Calc.VAL")
#! Field("$(Group):ReadNotInBounds:Status.VAL",16777215,1,"$(Group):ReadNotInBounds:Status.VAL")
#! Record("$(Group):ReadNotInBounds:Calc",2940,2327,0,0,"$(Group):ReadNotInBounds:Calc")
#! Field("$(Group):ReadNotInBounds:Calc.FLNK",16777215,1,"$(Group):ReadNotInBounds:Calc.FLNK")
#! Link("$(Group):ReadNotInBounds:Calc.FLNK","$(Group):ReadNotInBounds:Status")
#! Field("$(Group):ReadNotInBounds:Calc.INPA",16777215,0,"$(Group):ReadNotInBounds:Calc.INPA")
#! Link("$(Group):ReadNotInBounds:Calc.INPA","$(Group):Servo:Read.VAL")
#! Field("$(Group):ReadNotInBounds:Calc.INPB",16777215,1,"$(Group):ReadNotInBounds:Calc.INPB")
#! Field("$(Group):ReadNotInBounds:Calc.INPC",16777215,1,"$(Group):ReadNotInBounds:Calc.INPC")
#! Field("$(Group):ReadNotInBounds:Calc.VAL",16777215,1,"$(Group):ReadNotInBounds:Calc.VAL")
#! Field("$(Group):ReadNotInBounds:Calc.OUT",16777215,1,"$(Group):ReadNotInBounds:Calc.OUT")
#! Link("$(Group):ReadNotInBounds:Calc.OUT","$(Group):ReadNotInBounds:Interlock:String.PROC")
#! Record("$(Group):ReadNotInBounds:Interlock:String",3300,2716,0,1,"$(Group):ReadNotInBounds:Interlock:String")
#! Field("$(Group):ReadNotInBounds:Interlock:String.OUT",16777215,1,"$(Group):ReadNotInBounds:Interlock:String.OUT")
#! Field("$(Group):ReadNotInBounds:Interlock:String.PROC",16777215,0,"$(Group):ReadNotInBounds:Interlock:String.PROC")
#! Record("$(Group):Device:Interlock:Status",3800,2574,0,0,"$(Group):Device:Interlock:Status")
#! Field("$(Group):Device:Interlock:Status.INPB",16777215,1,"$(Group):Device:Interlock:Status.INPB")
#! Field("$(Group):Device:Interlock:Status.INPA",16777215,0,"$(Group):Device:Interlock:Status.INPA")
#! Link("$(Group):Device:Interlock:Status.INPA","$(Group):ReadNotInBounds:Status.VAL")
#! Field("$(Group):Device:Interlock:Status.FLNK",16777215,1,"$(Group):Device:Interlock:Status.FLNK")
#! Link("$(Group):Device:Interlock:Status.FLNK","$(Group):Device:Interlock:TurnOff")
#! Field("$(Group):Device:Interlock:Status.VAL",16777215,1,"$(Group):Device:Interlock:Status.VAL")
#! Record("$(Group):Device:Interlock:TurnOff",4420,2647,0,0,"$(Group):Device:Interlock:TurnOff")
#! Field("$(Group):Device:Interlock:TurnOff.INPA",16777215,0,"$(Group):Device:Interlock:TurnOff.INPA")
#! Link("$(Group):Device:Interlock:TurnOff.INPA","$(Group):Device:Interlock:Status.VAL")
#! Field("$(Group):Device:Interlock:TurnOff.INPB",16777215,1,"$(Group):Device:Interlock:TurnOff.INPB")
#! Field("$(Group):Device:Interlock:TurnOff.OUT",16777215,1,"$(Group):Device:Interlock:TurnOff.OUT")
#! Field("$(Group):Device:Interlock:TurnOff.FLNK",16777215,1,"$(Group):Device:Interlock:TurnOff.FLNK")
#! TextBox(TB0,140,420,400,340,0,"Dialog",28,1,13369344,"Send PSET to Acromag",null)
#! TextBox(TB2,1820,800,2080,720,0,"Dialog",14,1,13369344,"Loop that Reads PSMC Current, checks for acromag faults and comm errors, and generates heartbeat to send to modicon",null)
