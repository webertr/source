#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("/users/rhaegal/random/bar.dbd")
#! DBDEND


# Link 1 starts initialization process in ExtractorServoInitialize.vdb
# This must be begun before Interlocks are checked, because Initialize
# for the servo drives includes reseting one of the device interlocks
# Three seconds later, Link 2 is processed which links to a record to
# see if all Device Interlocks have been cleared.
record(seq, "$(Group):On:Initialize") {
  field(SELM, "All")
  field(LNK1, "$(SubSys):Init:String.PROC")
  field(DLY2, "1.5")
  field(LNK2, "$(Group):On:InterlockCk.PROC")
}

# Writes " On Requested" to system log
record(stringout, "$(Group):OnRequest:SO") {
  field(FLNK, "$(Group):AlreadyOnCk")
  field(VAL, "$(Group) On requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if the device is On
record(calc, "$(Group):AlreadyOnCk") {
  field(FLNK, "$(Group):AlreadyOnCk:Seq")
  field(CALC, "!A+1")
  field(INPA, "$(Group):On:Status")
}

# Continues with one of three processes:
# LNK 1 if device is already on
# LNK 2 if not on
record(seq, "$(Group):AlreadyOnCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(Group):AlreadyOnCk.VAL")
  field(LNK1, "$(Group):AlreadyOnCk:SO.PROC")
  field(LNK2, "$(Group):On:Initialize.PROC")
}

# Write "Already On" to system
# log and link to process
# chain that aborts On sequence
record(stringout, "$(Group):AlreadyOnCk:SO") {
  field(VAL, "$(Group) Already On")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Check to see if all device interlocks
# are clear
record(calc, "$(Group):On:InterlockCk") {
  field(SCAN, "Passive")
  field(FLNK, "$(Group):On:Seq")
  field(CALC, "(!A)+1")
  field(INPA, "$(Group):Device:Interlock:Status")
}

# Set Modicon PSMC On bit to 1 to turn on device
record(calcout, "$(Group):On:Pulse:High") {
  field(FLNK, "$(Group):On:Pulse:Low")
  field(OUT, "$(Group):On:Write.VAL")
  field(CALC, "1")
  field(OCAL, "0")
}

# Write "Device Interlock, Cannot turn device On" to system
# log and link to process
# chain that aborts MC On sequence
record(stringout, "$(Group):OnError:String") {
  field(VAL, "Device Intlk, Cant turn $(Group) on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(Group):On:Failed")
}

# One second after On bit has been set
# to 1 in the Modicon PLC, set the bit back to zero.
# Logic in the Modicon PLS is such that if the bit
# is not set back to zero, once the supply turns off
# it cannot be turned back on.
record(calcout, "$(Group):On:Pulse:Low") {
  field(OUT, "$(Group):On:Write.VAL")
  field(ODLY, "1")
  field(FLNK, "$(Group):On:Timeout")
  field(CALC, "0")
  field(OCAL, "0")
}

# Process the Device On Timeout check after a delay of
# DL1 which is three seconds
record(seq, "$(Group):On:Timeout") {
  field(SELM, "All")
  field(LNK2, "$(Group):On:Timeout:Calc.PROC")
  field(DLY2, "1.5")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
# when the IOC starts up
record(bo, "$(Group):Init:OnSignal2") {
  field(FLNK, "$(Group):Init:OffSignal2")
  field(VAL, "0")
  field(OUT, "$(Group):On:Write PP")
  field(OMSL, "supervisory")
  field(PINI, "YES")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
# when the IOC starts up
record(bo, "$(Group):Init:OffSignal2") {
  field(VAL, "1")
  field(OUT, "$(Group):Off:Write PP")
  field(PINI, "YES")
  field(OMSL, "supervisory")
}

# Value in this record holds the value of
# the state of the system.  It is 1 if
# On has been requested and On has not
# failed, and 0 if Off has been
# requested and off has not failed
# 
# This State is just for internal book keeping
# for the IOC and not apparant to operators
record(bo, "$(Group):Request:Status") {
}

# Start of the device Off chain.  This is
# processed first when trying to turn
# off the main coil.
record(bo, "$(Group):OffRequest") {
  field(FLNK, "$(Group):OffRequest:SO")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

# Writes "Off Requested" to system log
record(stringout, "$(Group):OffRequest:SO") {
  field(FLNK, "$(Group):AlreadyOffCk")
  field(VAL, "$(Group) Off requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if the Device is Off
record(calc, "$(Group):AlreadyOffCk") {
  field(FLNK, "$(Group):AlreadyOffCk:Seq")
  field(CALC, "A+1")
  field(INPA, "$(Group):On:Status")
}

# Continues with one of three processes:
# LNK 1 if Device is already off
# LNK 2 if not off
record(seq, "$(Group):AlreadyOffCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(Group):AlreadyOffCk.VAL")
  field(DLY1, ".5")
  field(DOL1, "1")
  field(LNK1, "$(Group):AlreadyOffCk:SO.PROC")
  field(DLY2, ".5")
  field(LNK2, "$(Group):Off:Pulse:Low.PROC")
  field(DOL2, "1")
}

# Writes "Already Off" to system log
record(stringout, "$(Group):AlreadyOffCk:SO") {
  field(VAL, "$(Group) Already Off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Issue command to Modicon to Set device Off bit to zero,
# turning off device
record(calcout, "$(Group):Off:Pulse:Low") {
  field(FLNK, "$(Group):Off:Pulse:High")
  field(OUT, "$(Group):Off:Write PP")
  field(CALC, "0")
  field(OCAL, "0")
}

# Reset Off bit to 1.  Required to turn on device at later time.
record(calcout, "$(Group):Off:Pulse:High") {
  field(OUT, "$(Group):Off:Write.VAL")
  field(ODLY, "1")
  field(FLNK, "$(Group):Off:Timeout")
  field(CALC, "1")
  field(OCAL, "0")
}

# 2 second delay. A time out condition will occur if device
# does not turn off in these two seconds.
record(seq, "$(Group):Off:Timeout") {
  field(SELM, "All")
  field(LNK2, "$(Group):Off:Timeout:Calc.PROC")
  field(DLY2, "3")
}

# Produce 1 if device is off, 2 if device is not off
record(calc, "$(Group):Off:Timeout:Calc") {
  field(FLNK, "$(Group):Off:Timeout2")
  field(CALC, "A+1")
  field(INPA, "$(Group):Off:Status")
}

# Output 2 If device has turned on, Output 1
# if device has not turned on
record(calc, "$(Group):On:Timeout:Calc") {
  field(FLNK, "$(Group):On:Timeout2")
  field(CALC, "A+1")
  field(INPA, "$(Group):On:Status")
}

# Write "Turn On Timeout" to system log
# and link to process
# chain that aborts MC On sequence
record(stringout, "$(Group):On:Timeout:SO") {
  field(FLNK, "$(Group):On:Failed")
  field(VAL, "$(Group) On Timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# LNK 2 - If device has turned on, finish On sequence
# 
# LNK 1 - If device has not turned on, log Timeout
record(seq, "$(Group):On:Timeout2") {
  field(SELM, "Specified")
  field(LNK1, "$(Group):On:Timeout:SO.VAL")
  field(LNK2, "$(Group):On:String.VAL")
  field(SELL, "$(Group):On:Timeout:Calc.VAL")
}

# Write Device turned On to message log and
# start processing PSMC Initialize sequence
# in MCInitialize.vdb
record(stringout, "$(Group):On:String") {
  field(VAL, "$(Group) turned on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Link 1: Device has not turned off, indicate timeout
# 
# Link 2: Indicate device has turned off
record(seq, "$(Group):Off:Timeout2") {
  field(SELM, "Specified")
  field(LNK1, "$(Group):Off:Timeout:SO.VAL")
  field(LNK2, "$(Group):Off:String.VAL")
  field(SELL, "$(Group):Off:Timeout:Calc.VAL")
}

record(stringout, "$(Group):Off:String") {
  field(VAL, "$(Group) turned off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(stringout, "$(Group):Off:Timeout:SO") {
  field(FLNK, "$(Group):Off:Failed")
  field(VAL, "$(Group) Turn On Timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Last branching before device is turned on
# LNK 1 sends error to log messages and
# aborts On sequence if device interlocks persist
# 
# LNK 2 will send on command to Modicon to
# turn on device
record(seq, "$(Group):On:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(Group):On:InterlockCk.VAL")
  field(LNK1, "$(Group):OnError:String.PROC")
  field(LNK2, "$(Group):On:Pulse:High.PROC")
}

# Sets internal state to not Off or not Requested Off
record(bo, "$(Group):Off:Failed") {
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

# Start of the On chain.  This is
# processed first when trying to turn
# on the main coil.
record(bo, "$(Group):OnRequest") {
  field(FLNK, "$(Group):Init:OnSignal")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
record(bo, "$(Group):Init:OnSignal") {
  field(FLNK, "$(Group):Init:OffSignal")
  field(VAL, "0")
  field(OUT, "$(Group):On:Write PP")
  field(OMSL, "supervisory")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
record(bo, "$(Group):Init:OffSignal") {
  field(VAL, "1")
  field(OUT, "$(Group):Off:Write PP")
  field(OMSL, "supervisory")
  field(FLNK, "$(Group):OnRequest:SO")
}

# Sets the Status of the system to
# MC Not On and Not requested to be On
# 
# This is internal book keeping for the IOC
record(bo, "$(Group):On:Failed") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(Group):Request:Status.VAL PP")
}

#! Further lines contain data used by VisualDCT
#! View(691,728,1.0)
#! Record("$(Group):On:Initialize",2940,2088,0,1,"$(Group):On:Initialize")
#! Field("$(Group):On:Initialize.LNK2",16777215,1,"$(Group):On:Initialize.LNK2")
#! Link("$(Group):On:Initialize.LNK2","$(Group):On:InterlockCk.PROC")
#! Field("$(Group):On:Initialize.LNK1",16777215,1,"$(Group):On:Initialize.LNK1")
#! Field("$(Group):On:Initialize.PROC",16777215,0,"$(Group):On:Initialize.PROC")
#! Record("$(Group):OnRequest:SO",1620,1922,0,0,"$(Group):OnRequest:SO")
#! Field("$(Group):OnRequest:SO.OUT",16777215,1,"$(Group):OnRequest:SO.OUT")
#! Field("$(Group):OnRequest:SO.FLNK",16777215,1,"$(Group):OnRequest:SO.FLNK")
#! Link("$(Group):OnRequest:SO.FLNK","$(Group):AlreadyOnCk")
#! Record("$(Group):AlreadyOnCk",1980,1922,0,0,"$(Group):AlreadyOnCk")
#! Field("$(Group):AlreadyOnCk.FLNK",16777215,1,"$(Group):AlreadyOnCk.FLNK")
#! Link("$(Group):AlreadyOnCk.FLNK","$(Group):AlreadyOnCk:Seq")
#! Field("$(Group):AlreadyOnCk.VAL",16777215,1,"$(Group):AlreadyOnCk.VAL")
#! Field("$(Group):AlreadyOnCk.INPA",16777215,1,"$(Group):AlreadyOnCk.INPA")
#! Record("$(Group):AlreadyOnCk:Seq",2420,1928,0,0,"$(Group):AlreadyOnCk:Seq")
#! Field("$(Group):AlreadyOnCk:Seq.SELL",16777215,0,"$(Group):AlreadyOnCk:Seq.SELL")
#! Link("$(Group):AlreadyOnCk:Seq.SELL","$(Group):AlreadyOnCk.VAL")
#! Field("$(Group):AlreadyOnCk:Seq.LNK1",16777215,1,"$(Group):AlreadyOnCk:Seq.LNK1")
#! Link("$(Group):AlreadyOnCk:Seq.LNK1","$(Group):AlreadyOnCk:SO.PROC")
#! Field("$(Group):AlreadyOnCk:Seq.LNK2",16777215,1,"$(Group):AlreadyOnCk:Seq.LNK2")
#! Link("$(Group):AlreadyOnCk:Seq.LNK2","$(Group):On:Initialize.PROC")
#! Record("$(Group):AlreadyOnCk:SO",2720,1916,0,1,"$(Group):AlreadyOnCk:SO")
#! Field("$(Group):AlreadyOnCk:SO.OUT",16777215,1,"$(Group):AlreadyOnCk:SO.OUT")
#! Field("$(Group):AlreadyOnCk:SO.PROC",16777215,0,"$(Group):AlreadyOnCk:SO.PROC")
#! Record("$(Group):On:InterlockCk",3200,2068,0,1,"$(Group):On:InterlockCk")
#! Field("$(Group):On:InterlockCk.PROC",16777215,0,"$(Group):On:InterlockCk.PROC")
#! Field("$(Group):On:InterlockCk.FLNK",16777215,1,"$(Group):On:InterlockCk.FLNK")
#! Link("$(Group):On:InterlockCk.FLNK","$(Group):On:Seq")
#! Field("$(Group):On:InterlockCk.VAL",16777215,1,"$(Group):On:InterlockCk.VAL")
#! Field("$(Group):On:InterlockCk.INPA",16777215,1,"$(Group):On:InterlockCk.INPA")
#! Record("$(Group):On:Pulse:High",3740,2288,0,1,"$(Group):On:Pulse:High")
#! Field("$(Group):On:Pulse:High.OUT",16777215,1,"$(Group):On:Pulse:High.OUT")
#! Field("$(Group):On:Pulse:High.PROC",16777215,1,"$(Group):On:Pulse:High.PROC")
#! Field("$(Group):On:Pulse:High.FLNK",16777215,1,"$(Group):On:Pulse:High.FLNK")
#! Link("$(Group):On:Pulse:High.FLNK","$(Group):On:Pulse:Low")
#! Record("$(Group):OnError:String",3960,1482,0,1,"$(Group):OnError:String")
#! Field("$(Group):OnError:String.FLNK",16777215,0,"$(Group):OnError:String.FLNK")
#! Link("$(Group):OnError:String.FLNK","$(Group):On:Failed")
#! Field("$(Group):OnError:String.PROC",16777215,0,"$(Group):OnError:String.PROC")
#! Field("$(Group):OnError:String.OUT",16777215,1,"$(Group):OnError:String.OUT")
#! Record("$(Group):On:Pulse:Low",4000,2274,0,0,"$(Group):On:Pulse:Low")
#! Field("$(Group):On:Pulse:Low.OUT",16777215,1,"$(Group):On:Pulse:Low.OUT")
#! Field("$(Group):On:Pulse:Low.FLNK",16777215,1,"$(Group):On:Pulse:Low.FLNK")
#! Link("$(Group):On:Pulse:Low.FLNK","$(Group):On:Timeout")
#! Record("$(Group):On:Timeout",4260,2342,0,0,"$(Group):On:Timeout")
#! Field("$(Group):On:Timeout.LNK2",16777215,1,"$(Group):On:Timeout.LNK2")
#! Link("$(Group):On:Timeout.LNK2","$(Group):On:Timeout:Calc.PROC")
#! Record("$(Group):Init:OnSignal2",1180,1174,0,1,"$(Group):Init:OnSignal2")
#! Field("$(Group):Init:OnSignal2.FLNK",16777215,1,"$(Group):Init:OnSignal2.FLNK")
#! Link("$(Group):Init:OnSignal2.FLNK","$(Group):Init:OffSignal2")
#! Field("$(Group):Init:OnSignal2.OUT",16777215,1,"$(Group):Init:OnSignal2.OUT")
#! Record("$(Group):Init:OffSignal2",1480,1188,0,0,"$(Group):Init:OffSignal2")
#! Field("$(Group):Init:OffSignal2.OUT",16777215,1,"$(Group):Init:OffSignal2.OUT")
#! Record("$(Group):Request:Status",980,2963,0,1,"$(Group):Request:Status")
#! Field("$(Group):Request:Status.VAL",16777215,1,"$(Group):Request:Status.VAL")
#! Record("$(Group):OffRequest",460,3808,0,1,"$(Group):OffRequest")
#! Field("$(Group):OffRequest.OUT",16777215,1,"$(Group):OffRequest.OUT")
#! Link("$(Group):OffRequest.OUT","$(Group):Request:Status.VAL")
#! Field("$(Group):OffRequest.FLNK",16777215,1,"$(Group):OffRequest.FLNK")
#! Link("$(Group):OffRequest.FLNK","$(Group):OffRequest:SO")
#! Record("$(Group):OffRequest:SO",880,3942,0,0,"$(Group):OffRequest:SO")
#! Field("$(Group):OffRequest:SO.FLNK",16777215,1,"$(Group):OffRequest:SO.FLNK")
#! Link("$(Group):OffRequest:SO.FLNK","$(Group):AlreadyOffCk")
#! Field("$(Group):OffRequest:SO.OUT",16777215,1,"$(Group):OffRequest:SO.OUT")
#! Record("$(Group):AlreadyOffCk",1300,3942,0,0,"$(Group):AlreadyOffCk")
#! Field("$(Group):AlreadyOffCk.FLNK",16777215,1,"$(Group):AlreadyOffCk.FLNK")
#! Link("$(Group):AlreadyOffCk.FLNK","$(Group):AlreadyOffCk:Seq")
#! Field("$(Group):AlreadyOffCk.INPA",16777215,1,"$(Group):AlreadyOffCk.INPA")
#! Field("$(Group):AlreadyOffCk.VAL",16777215,0,"$(Group):AlreadyOffCk.VAL")
#! Record("$(Group):AlreadyOffCk:Seq",1560,3932,0,0,"$(Group):AlreadyOffCk:Seq")
#! Field("$(Group):AlreadyOffCk:Seq.SELL",16777215,0,"$(Group):AlreadyOffCk:Seq.SELL")
#! Link("$(Group):AlreadyOffCk:Seq.SELL","$(Group):AlreadyOffCk.VAL")
#! Field("$(Group):AlreadyOffCk:Seq.LNK1",16777215,1,"$(Group):AlreadyOffCk:Seq.LNK1")
#! Link("$(Group):AlreadyOffCk:Seq.LNK1","$(Group):AlreadyOffCk:SO.PROC")
#! Field("$(Group):AlreadyOffCk:Seq.LNK2",16777215,1,"$(Group):AlreadyOffCk:Seq.LNK2")
#! Link("$(Group):AlreadyOffCk:Seq.LNK2","$(Group):Off:Pulse:Low.PROC")
#! Record("$(Group):AlreadyOffCk:SO",1840,3776,0,1,"$(Group):AlreadyOffCk:SO")
#! Field("$(Group):AlreadyOffCk:SO.OUT",16777215,1,"$(Group):AlreadyOffCk:SO.OUT")
#! Field("$(Group):AlreadyOffCk:SO.PROC",16777215,0,"$(Group):AlreadyOffCk:SO.PROC")
#! Record("$(Group):Off:Pulse:Low",2080,3908,0,1,"$(Group):Off:Pulse:Low")
#! Field("$(Group):Off:Pulse:Low.PROC",16777215,0,"$(Group):Off:Pulse:Low.PROC")
#! Field("$(Group):Off:Pulse:Low.OUT",16777215,1,"$(Group):Off:Pulse:Low.OUT")
#! Field("$(Group):Off:Pulse:Low.FLNK",16777215,1,"$(Group):Off:Pulse:Low.FLNK")
#! Link("$(Group):Off:Pulse:Low.FLNK","$(Group):Off:Pulse:High")
#! Record("$(Group):Off:Pulse:High",2440,3914,0,0,"$(Group):Off:Pulse:High")
#! Field("$(Group):Off:Pulse:High.FLNK",16777215,1,"$(Group):Off:Pulse:High.FLNK")
#! Link("$(Group):Off:Pulse:High.FLNK","$(Group):Off:Timeout")
#! Field("$(Group):Off:Pulse:High.OUT",16777215,1,"$(Group):Off:Pulse:High.OUT")
#! Record("$(Group):Off:Timeout",2840,3942,0,0,"$(Group):Off:Timeout")
#! Field("$(Group):Off:Timeout.LNK2",16777215,1,"$(Group):Off:Timeout.LNK2")
#! Link("$(Group):Off:Timeout.LNK2","$(Group):Off:Timeout:Calc.PROC")
#! Record("$(Group):Off:Timeout:Calc",3240,3882,0,1,"$(Group):Off:Timeout:Calc")
#! Field("$(Group):Off:Timeout:Calc.FLNK",16777215,1,"$(Group):Off:Timeout:Calc.FLNK")
#! Link("$(Group):Off:Timeout:Calc.FLNK","$(Group):Off:Timeout2")
#! Field("$(Group):Off:Timeout:Calc.INPA",16777215,1,"$(Group):Off:Timeout:Calc.INPA")
#! Field("$(Group):Off:Timeout:Calc.VAL",16777215,1,"$(Group):Off:Timeout:Calc.VAL")
#! Field("$(Group):Off:Timeout:Calc.PROC",16777215,0,"$(Group):Off:Timeout:Calc.PROC")
#! Record("$(Group):On:Timeout:Calc",4520,2302,0,1,"$(Group):On:Timeout:Calc")
#! Field("$(Group):On:Timeout:Calc.PROC",16777215,0,"$(Group):On:Timeout:Calc.PROC")
#! Field("$(Group):On:Timeout:Calc.INPA",16777215,1,"$(Group):On:Timeout:Calc.INPA")
#! Field("$(Group):On:Timeout:Calc.FLNK",16777215,1,"$(Group):On:Timeout:Calc.FLNK")
#! Link("$(Group):On:Timeout:Calc.FLNK","$(Group):On:Timeout2")
#! Field("$(Group):On:Timeout:Calc.VAL",16777215,1,"$(Group):On:Timeout:Calc.VAL")
#! Record("$(Group):On:Timeout:SO",4440,2522,0,1,"$(Group):On:Timeout:SO")
#! Field("$(Group):On:Timeout:SO.OUT",16777215,1,"$(Group):On:Timeout:SO.OUT")
#! Field("$(Group):On:Timeout:SO.FLNK",16777215,0,"$(Group):On:Timeout:SO.FLNK")
#! Link("$(Group):On:Timeout:SO.FLNK","$(Group):On:Failed")
#! Field("$(Group):On:Timeout:SO.VAL",16777215,1,"$(Group):On:Timeout:SO.VAL")
#! Record("$(Group):On:Timeout2",4800,2368,0,0,"$(Group):On:Timeout2")
#! Field("$(Group):On:Timeout2.SELL",16777215,0,"$(Group):On:Timeout2.SELL")
#! Link("$(Group):On:Timeout2.SELL","$(Group):On:Timeout:Calc.VAL")
#! Field("$(Group):On:Timeout2.LNK1",16777215,0,"$(Group):On:Timeout2.LNK1")
#! Link("$(Group):On:Timeout2.LNK1","$(Group):On:Timeout:SO.VAL")
#! Field("$(Group):On:Timeout2.LNK2",16777215,0,"$(Group):On:Timeout2.LNK2")
#! Link("$(Group):On:Timeout2.LNK2","$(Group):On:String.VAL")
#! Record("$(Group):On:String",4760,2796,0,1,"$(Group):On:String")
#! Field("$(Group):On:String.OUT",16777215,1,"$(Group):On:String.OUT")
#! Field("$(Group):On:String.VAL",16777215,0,"$(Group):On:String.VAL")
#! Record("$(Group):Off:Timeout2",3800,3888,0,0,"$(Group):Off:Timeout2")
#! Field("$(Group):Off:Timeout2.LNK2",16777215,1,"$(Group):Off:Timeout2.LNK2")
#! Link("$(Group):Off:Timeout2.LNK2","$(Group):Off:String.VAL")
#! Field("$(Group):Off:Timeout2.SELL",16777215,0,"$(Group):Off:Timeout2.SELL")
#! Link("$(Group):Off:Timeout2.SELL","$(Group):Off:Timeout:Calc.VAL")
#! Field("$(Group):Off:Timeout2.LNK1",16777215,0,"$(Group):Off:Timeout2.LNK1")
#! Link("$(Group):Off:Timeout2.LNK1","$(Group):Off:Timeout:SO.VAL")
#! Record("$(Group):Off:String",4120,4076,0,1,"$(Group):Off:String")
#! Field("$(Group):Off:String.OUT",16777215,1,"$(Group):Off:String.OUT")
#! Field("$(Group):Off:String.VAL",16777215,0,"$(Group):Off:String.VAL")
#! Record("$(Group):Off:Timeout:SO",3520,4522,0,1,"$(Group):Off:Timeout:SO")
#! Field("$(Group):Off:Timeout:SO.FLNK",16777215,0,"$(Group):Off:Timeout:SO.FLNK")
#! Link("$(Group):Off:Timeout:SO.FLNK","$(Group):Off:Failed")
#! Field("$(Group):Off:Timeout:SO.OUT",16777215,1,"$(Group):Off:Timeout:SO.OUT")
#! Field("$(Group):Off:Timeout:SO.VAL",16777215,1,"$(Group):Off:Timeout:SO.VAL")
#! Record("$(Group):On:Seq",3480,2108,0,0,"$(Group):On:Seq")
#! Field("$(Group):On:Seq.LNK1",16777215,1,"$(Group):On:Seq.LNK1")
#! Link("$(Group):On:Seq.LNK1","$(Group):OnError:String.PROC")
#! Field("$(Group):On:Seq.LNK2",16777215,1,"$(Group):On:Seq.LNK2")
#! Link("$(Group):On:Seq.LNK2","$(Group):On:Pulse:High.PROC")
#! Field("$(Group):On:Seq.SELL",16777215,0,"$(Group):On:Seq.SELL")
#! Link("$(Group):On:Seq.SELL","$(Group):On:InterlockCk.VAL")
#! Record("$(Group):Off:Failed",2280,4542,0,1,"$(Group):Off:Failed")
#! Field("$(Group):Off:Failed.OUT",16777215,0,"$(Group):Off:Failed.OUT")
#! Link("$(Group):Off:Failed.OUT","$(Group):Request:Status.VAL")
#! Record("$(Group):OnRequest",580,1948,0,1,"$(Group):OnRequest")
#! Field("$(Group):OnRequest.FLNK",16777215,1,"$(Group):OnRequest.FLNK")
#! Link("$(Group):OnRequest.FLNK","$(Group):Init:OnSignal")
#! Field("$(Group):OnRequest.OUT",16777215,1,"$(Group):OnRequest.OUT")
#! Link("$(Group):OnRequest.OUT","$(Group):Request:Status.VAL")
#! Record("$(Group):Init:OnSignal",920,1908,0,0,"$(Group):Init:OnSignal")
#! Field("$(Group):Init:OnSignal.FLNK",16777215,1,"$(Group):Init:OnSignal.FLNK")
#! Link("$(Group):Init:OnSignal.FLNK","$(Group):Init:OffSignal")
#! Field("$(Group):Init:OnSignal.OUT",16777215,1,"$(Group):Init:OnSignal.OUT")
#! Record("$(Group):Init:OffSignal",1240,1908,0,0,"$(Group):Init:OffSignal")
#! Field("$(Group):Init:OffSignal.OUT",16777215,1,"$(Group):Init:OffSignal.OUT")
#! Field("$(Group):Init:OffSignal.FLNK",16777215,1,"$(Group):Init:OffSignal.FLNK")
#! Link("$(Group):Init:OffSignal.FLNK","$(Group):OnRequest:SO")
#! Record("$(Group):On:Failed",2700,1542,0,1,"$(Group):On:Failed")
#! Field("$(Group):On:Failed.OUT",16777215,0,"$(Group):On:Failed.OUT")
#! Link("$(Group):On:Failed.OUT","$(Group):Request:Status.VAL")
#! TextBox(TB0,3680,140,4540,240,0,"Dialog",28,1,16711731,"Log Device Interlock Preventing PSMC from turning On",null)
#! TextBox(TB8,1320,1091,2180,1191,0,"Dialog",24,1,16711731,"Initialize PSMC On and Off Modicon Coils",null)
#! TextBox(TB6,3040,3800,3900,3900,0,"Dialog",24,1,16711731,"ShutDown Timeout",null)
#! TextBox(TB5,1560,3320,2420,3420,0,"Dialog",24,1,16711731,"Turn PSMC Off if Shutting Down, Off Requested and not Failed,\nand Current < 10 A",null)
#! TextBox(TB4,1400,3980,1400,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB3,980,3980,1000,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB2,600,3660,1460,3760,0,"Dialog",28,1,16711731,"Device Off Sequence",null)
#! TextBox(TB1,620,1740,1480,1840,0,"Dialog",28,1,16711731,"On Sequence",null)
