#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Checks to see if PREAD is greater than or equal to PHIGH.  If so,
# an interlock is set in PSHVCondition.vdb
record(calcout, "$(SubSys):PREAD:GTOE:PHIGH:Calc") {
  field(CALC, "(A>B)|(A=B)")
  field(INPA, "$(SubSys):Volt:Read.VAL")
  field(INPB, "$(SubSys):Volt:PHIGH")
  field(OUT, "$(SubSys):PREAD:GTOE:PHIGH:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(SubSys):PREAD:LTOE:PLOW:Calc")
}

# Sends PSHV Above PHIGH to system log
record(stringout, "$(SubSys):PREAD:GTOE:PHIGH:String") {
  field(VAL, "$(SubSys) Above PHIGH")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends PSHV Below PLOW to system log
record(stringout, "$(SubSys):PREAD:LTOE:PLOW:String") {
  field(VAL, "$(SubSys)  Below PLOW")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if PREAD is less than or equal to PLOW.  If so,
# an interlock is set in PSHVCondition.vdb
record(calcout, "$(SubSys):PREAD:LTOE:PLOW:Calc") {
  field(CALC, "(A<B)|(A=B)")
  field(INPA, "$(SubSys):Volt:Read.VAL")
  field(INPB, "$(SubSys):Volt:PLOW")
  field(OUT, "$(SubSys):PREAD:LTOE:PLOW:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(SubSys):PREADPSET:PDIFF:PRECalc")
}

record(scalcout, "$(SubSys):PREADPSET:PDIFF:String") {
  field(CALC, "'$(SubSys) PSET-PREAD= '+AA")
  field(INAA, "$(SubSys):PDIFF:Report:DIFFValue")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Begins process loop checkin acromag communication and fault status
# 
# Here at the beginning of the loop the up pulse of a heartbeat signal is sent to PLC confirming proper
# operation and communication between Acromag I/O, the IOC,
# and the PLC
# 
# At the end of the loop the down pulse heartbeat signal will be sent to
# PLC
record(bo, "$(SubSys):HBUP") {
  field(SCAN, "1 second")
  field(FLNK, "$(SubSys):Curr:ModuleStatus")
  field(VAL, "1")
  field(OUT, "$(SubSys):Heartbeat.VAL PP")
}

# Send Heartbeat down pulse to PLC after checking PSHV Current against Limits
record(bo, "$(SubSys):Heartbeat") {
  field(OUT, "DEFL:Heartbeat:Write PP")
}

# Processes record that Sends Heartbeat down pulse to PLC after checking
# PSHV Current against Limits
record(bo, "$(SubSys):HBDOWN") {
  field(VAL, "0")
  field(OUT, "$(SubSys):Heartbeat.VAL PP")
}

record(calcout, "$(SubSys):PREADPSET:PDIFF:Calc2") {
  field(FLNK, "$(SubSys):ParticleBeam:Interlock:Status.PROC")
  field(CALC, "(ABS(A-B))>(.5*C)")
  field(INPA, "$(SubSys):Volt:Read.VAL")
  field(INPB, "$(SubSys):Volt:Set")
  field(INPC, "$(SubSys):Volt:PDIFF.VAL")
}

# ead DEFL Voltage
# from DEFL acromag via asyn
# Asyn polls device and creates I/O interrupt
# whenever value changes
record(ai, "$(SubSys):Volt:GetRead") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(DEFLRead, 6, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):Volt:ConvRead")
  field(PREC, "2")
  field(EGU, "KV")
}

# Convert Raw data to reading in KV
record(calcout, "$(SubSys):Volt:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*0.0031366*B")
  field(INPA, "$(SubSys):Volt:GetRead.VAL")
  field(OUT, "$(SubSys):Volt:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "KV")
  field(PREC, "2")
  field(INPB, "$(SubSys):On:Status")
}

# DEFL Current PREAD
record(ai, "$(SubSys):Volt:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "KV")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
}

# Read PSHV Current from PSHV acromag via asyn
# Asyn polls device and creates I/O interrupt
# whenever value changes
record(ai, "$(SubSys):Curr:GetRead") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(DEFLRead, 7, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):Curr:ConvRead")
  field(PREC, "3")
  field(EGU, "mA")
}

# Convert Raw data to reading in volts
record(calcout, "$(SubSys):Curr:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*.00013*B")
  field(INPA, "$(SubSys):Curr:GetRead.VAL")
  field(OUT, "$(SubSys):Curr:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "mA")
  field(PREC, "3")
  field(INPB, "$(SubSys):On:Status")
}

# PSHV Voltage PREAD
record(ai, "$(SubSys):Curr:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "3")
  field(EGU, "mA")
}

# Receives new PSET from ParamSet.vdb whenever
# PSET changes
record(ai, "$(SubSys):Volt:SetDevice") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Volt:SetDeviceCalc")
  field(PREC, "2")
}

# Multiplies PSET by scale factor to convert from Amps
# to raw data scale used by acromag in controlling PSHV Current
record(calc, "$(SubSys):Volt:SetDeviceCalc") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Volt:SendSet")
  field(CALC, "A*333.62")
  field(INPA, "$(SubSys):Volt:SetDevice.VAL")
  field(PREC, "2")
}

# Send PSET out via asyn to acromag
# 
# DEFLWrite 0 0x1
record(ao, "$(SubSys):Volt:SendSet") {
  field(SCAN, "1 second")
  field(DTYP, "asynInt32")
  field(OUT, "@asynMask(DEFLWrite, 0, 16, 1000)MODBUS_DATA")
  field(PREC, "2")
  field(DOL, "$(SubSys):Volt:SetDeviceCalc.VAL")
  field(OMSL, "closed_loop")
  field(OIF, "Full")
  field(DRVH, "19800")
  field(DRVL, "0")
}

# .5 sec delay to give reasonble shape to Heartbeat pulse train
record(seq, "$(SubSys):Analog:HBDelay") {
  field(SELM, "All")
  field(DLY1, ".5")
  field(LNK1, "$(SubSys):PREAD:GTOE:PHIGH:Calc.PROC")
}

# @asynMask(SWMRead 6 0X16)
record(ai, "$(SubSys):SeptumTemp:GetRead") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(DEFLRead, 8, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):SeptumTemp:ConvRead")
  field(PREC, "2")
  field(EGU, "deg C")
}

record(calcout, "$(SubSys):SeptumTemp:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*.0101")
  field(INPA, "$(SubSys):SeptumTemp:GetRead.VAL")
  field(OUT, "$(SubSys):SeptumTemp:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "deg C")
  field(PREC, "2")
}

record(ai, "$(SubSys):SeptumTemp:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "deg C")
}

record(ao, "$(SubSys):PDIFF:Report:DIFFValue") {
  field(FLNK, "$(SubSys):PREADPSET:PDIFF:Calc")
}

# Checks to see if the absolute difference between PREAD and PSET is outside PDIFF.  If so,
# an interlock is set in PSHVCondition.vdb
record(calcout, "$(SubSys):PREADPSET:PDIFF:PRECalc") {
  field(CALC, "(ABS(A-B))>C")
  field(INPA, "$(SubSys):Volt:Read.VAL")
  field(INPB, "$(SubSys):Volt:Set")
  field(INPC, "$(SubSys):Volt:PDIFF.VAL")
  field(OUT, "$(SubSys):PDIFF:Report:DIFFValue PP")
  field(FLNK, "$(SubSys):PREADPSET:PDIFF:Calc2")
  field(OOPT, "Every Time")
  field(DOPT, "Use OCAL")
  field(OCAL, "B-A")
}

record(calcout, "$(SubSys):PREADPSET:PDIFF:Calc") {
  field(CALC, "A&B")
  field(INPA, "$(SubSys):PREADPSET:PDIFF:PRECalc")
  field(OUT, "$(SubSys):PREADPSET:PDIFF:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "B-A")
  field(INPB, "$(SubSys):PREADPSET:PDIFF:Calc.LA")
}

record(ai, "$(SubSys):Curr:ModuleStatus") {
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(DEFLRead, 0, 16, 1000)MODBUS_DATA ")
  field(FLNK, "$(SubSys):ReadAcromagAIError:Check")
}

record(calcout, "$(SubSys):ReadAcromagAIError:Check") {
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):Curr:ModuleStatus.STAT")
  field(OUT, "$(SubSys):CommError:Status PP")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
  field(FLNK, "$(SubSys):ReadAcromagStatus:Check")
}

record(calcout, "$(SubSys):ReadAcromagStatus:Check") {
  field(FLNK, "$(SubSys):Analog:HBDelay")
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):Curr:ModuleStatus.VAL")
  field(OUT, "$(SubSys):HardwareError:Status PP")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
}

#! Further lines contain data used by VisualDCT
#! View(175,1064,1.0)
#! Record("$(SubSys):PREAD:GTOE:PHIGH:Calc",1980,1420,0,1,"$(SubSys):PREAD:GTOE:PHIGH:Calc")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:Calc.INPA",16777215,1,"$(SubSys):PREAD:GTOE:PHIGH:Calc.INPA")
#! Link("$(SubSys):PREAD:GTOE:PHIGH:Calc.INPA","$(SubSys):Volt:Read.VAL")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:Calc.OUT",16777215,1,"$(SubSys):PREAD:GTOE:PHIGH:Calc.OUT")
#! Link("$(SubSys):PREAD:GTOE:PHIGH:Calc.OUT","$(SubSys):PREAD:GTOE:PHIGH:String.PROC")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:Calc.INPB",16777215,1,"$(SubSys):PREAD:GTOE:PHIGH:Calc.INPB")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:Calc.PROC",16777215,0,"$(SubSys):PREAD:GTOE:PHIGH:Calc.PROC")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:Calc.FLNK",16777215,1,"$(SubSys):PREAD:GTOE:PHIGH:Calc.FLNK")
#! Link("$(SubSys):PREAD:GTOE:PHIGH:Calc.FLNK","$(SubSys):PREAD:LTOE:PLOW:Calc")
#! Record("$(SubSys):PREAD:GTOE:PHIGH:String",2320,1496,0,1,"$(SubSys):PREAD:GTOE:PHIGH:String")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:String.OUT",16777215,1,"$(SubSys):PREAD:GTOE:PHIGH:String.OUT")
#! Field("$(SubSys):PREAD:GTOE:PHIGH:String.PROC",16777215,0,"$(SubSys):PREAD:GTOE:PHIGH:String.PROC")
#! Record("$(SubSys):PREAD:LTOE:PLOW:String",3040,1396,0,1,"$(SubSys):PREAD:LTOE:PLOW:String")
#! Field("$(SubSys):PREAD:LTOE:PLOW:String.OUT",16777215,1,"$(SubSys):PREAD:LTOE:PLOW:String.OUT")
#! Field("$(SubSys):PREAD:LTOE:PLOW:String.PROC",16777215,0,"$(SubSys):PREAD:LTOE:PLOW:String.PROC")
#! Record("$(SubSys):PREAD:LTOE:PLOW:Calc",2720,1400,0,0,"$(SubSys):PREAD:LTOE:PLOW:Calc")
#! Field("$(SubSys):PREAD:LTOE:PLOW:Calc.OUT",16777215,1,"$(SubSys):PREAD:LTOE:PLOW:Calc.OUT")
#! Link("$(SubSys):PREAD:LTOE:PLOW:Calc.OUT","$(SubSys):PREAD:LTOE:PLOW:String.PROC")
#! Field("$(SubSys):PREAD:LTOE:PLOW:Calc.INPA",16777215,0,"$(SubSys):PREAD:LTOE:PLOW:Calc.INPA")
#! Link("$(SubSys):PREAD:LTOE:PLOW:Calc.INPA","$(SubSys):Volt:Read.VAL")
#! Field("$(SubSys):PREAD:LTOE:PLOW:Calc.INPB",16777215,1,"$(SubSys):PREAD:LTOE:PLOW:Calc.INPB")
#! Field("$(SubSys):PREAD:LTOE:PLOW:Calc.FLNK",16777215,1,"$(SubSys):PREAD:LTOE:PLOW:Calc.FLNK")
#! Link("$(SubSys):PREAD:LTOE:PLOW:Calc.FLNK","$(SubSys):PREADPSET:PDIFF:PRECalc")
#! Record("$(SubSys):PREADPSET:PDIFF:String",4420,1442,0,0,"$(SubSys):PREADPSET:PDIFF:String")
#! Field("$(SubSys):PREADPSET:PDIFF:String.OUT",16777215,1,"$(SubSys):PREADPSET:PDIFF:String.OUT")
#! Field("$(SubSys):PREADPSET:PDIFF:String.INAA",16777215,0,"$(SubSys):PREADPSET:PDIFF:String.INAA")
#! Link("$(SubSys):PREADPSET:PDIFF:String.INAA","$(SubSys):PDIFF:Report:DIFFValue.VAL")
#! Field("$(SubSys):PREADPSET:PDIFF:String.PROC",16777215,0,"$(SubSys):PREADPSET:PDIFF:String.PROC")
#! Record("$(SubSys):HBUP",20,1428,0,1,"$(SubSys):HBUP")
#! Field("$(SubSys):HBUP.FLNK",16777215,1,"$(SubSys):HBUP.FLNK")
#! Link("$(SubSys):HBUP.FLNK","$(SubSys):Curr:ModuleStatus")
#! Field("$(SubSys):HBUP.OUT",16777215,1,"$(SubSys):HBUP.OUT")
#! Link("$(SubSys):HBUP.OUT","$(SubSys):Heartbeat.VAL")
#! Record("$(SubSys):Heartbeat",280,2170,0,1,"$(SubSys):Heartbeat")
#! Field("$(SubSys):Heartbeat.VAL",16777215,1,"$(SubSys):Heartbeat.VAL")
#! Field("$(SubSys):Heartbeat.OUT",16777215,1,"$(SubSys):Heartbeat.OUT")
#! Record("$(SubSys):HBDOWN",3560,2156,0,1,"$(SubSys):HBDOWN")
#! Field("$(SubSys):HBDOWN.OUT",16777215,0,"$(SubSys):HBDOWN.OUT")
#! Link("$(SubSys):HBDOWN.OUT","$(SubSys):Heartbeat.VAL")
#! Record("$(SubSys):PREADPSET:PDIFF:Calc2",3660,1794,0,0,"$(SubSys):PREADPSET:PDIFF:Calc2")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc2.INPA",16777215,0,"$(SubSys):PREADPSET:PDIFF:Calc2.INPA")
#! Link("$(SubSys):PREADPSET:PDIFF:Calc2.INPA","$(SubSys):Volt:Read.VAL")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc2.INPB",16777215,1,"$(SubSys):PREADPSET:PDIFF:Calc2.INPB")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc2.INPC",16777215,1,"$(SubSys):PREADPSET:PDIFF:Calc2.INPC")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc2.FLNK",16777215,1,"$(SubSys):PREADPSET:PDIFF:Calc2.FLNK")
#! Record("$(SubSys):Volt:GetRead",1720,720,0,1,"$(SubSys):Volt:GetRead")
#! Field("$(SubSys):Volt:GetRead.FLNK",16777215,1,"$(SubSys):Volt:GetRead.FLNK")
#! Link("$(SubSys):Volt:GetRead.FLNK","$(SubSys):Volt:ConvRead")
#! Field("$(SubSys):Volt:GetRead.VAL",16777215,1,"$(SubSys):Volt:GetRead.VAL")
#! Record("$(SubSys):Volt:ConvRead",2080,699,0,0,"$(SubSys):Volt:ConvRead")
#! Field("$(SubSys):Volt:ConvRead.INPA",16777215,0,"$(SubSys):Volt:ConvRead.INPA")
#! Link("$(SubSys):Volt:ConvRead.INPA","$(SubSys):Volt:GetRead.VAL")
#! Field("$(SubSys):Volt:ConvRead.OUT",16777215,1,"$(SubSys):Volt:ConvRead.OUT")
#! Link("$(SubSys):Volt:ConvRead.OUT","$(SubSys):Volt:Read.VAL")
#! Field("$(SubSys):Volt:ConvRead.INPB",16777215,1,"$(SubSys):Volt:ConvRead.INPB")
#! Record("$(SubSys):Volt:Read",2340,732,0,1,"$(SubSys):Volt:Read")
#! Field("$(SubSys):Volt:Read.VAL",16777215,1,"$(SubSys):Volt:Read.VAL")
#! Record("$(SubSys):Curr:GetRead",1780,140,0,1,"$(SubSys):Curr:GetRead")
#! Field("$(SubSys):Curr:GetRead.FLNK",16777215,1,"$(SubSys):Curr:GetRead.FLNK")
#! Link("$(SubSys):Curr:GetRead.FLNK","$(SubSys):Curr:ConvRead")
#! Field("$(SubSys):Curr:GetRead.VAL",16777215,1,"$(SubSys):Curr:GetRead.VAL")
#! Record("$(SubSys):Curr:ConvRead",2160,139,0,0,"$(SubSys):Curr:ConvRead")
#! Field("$(SubSys):Curr:ConvRead.INPA",16777215,0,"$(SubSys):Curr:ConvRead.INPA")
#! Link("$(SubSys):Curr:ConvRead.INPA","$(SubSys):Curr:GetRead.VAL")
#! Field("$(SubSys):Curr:ConvRead.OUT",16777215,1,"$(SubSys):Curr:ConvRead.OUT")
#! Link("$(SubSys):Curr:ConvRead.OUT","$(SubSys):Curr:Read.VAL")
#! Field("$(SubSys):Curr:ConvRead.INPB",16777215,1,"$(SubSys):Curr:ConvRead.INPB")
#! Record("$(SubSys):Curr:Read",2540,248,0,1,"$(SubSys):Curr:Read")
#! Field("$(SubSys):Curr:Read.VAL",16777215,0,"$(SubSys):Curr:Read.VAL")
#! Record("$(SubSys):Volt:SetDevice",20,22,0,1,"$(SubSys):Volt:SetDevice")
#! Field("$(SubSys):Volt:SetDevice.FLNK",16777215,1,"$(SubSys):Volt:SetDevice.FLNK")
#! Link("$(SubSys):Volt:SetDevice.FLNK","$(SubSys):Volt:SetDeviceCalc")
#! Field("$(SubSys):Volt:SetDevice.VAL",16777215,1,"$(SubSys):Volt:SetDevice.VAL")
#! Record("$(SubSys):Volt:SetDeviceCalc",420,54,0,0,"$(SubSys):Volt:SetDeviceCalc")
#! Field("$(SubSys):Volt:SetDeviceCalc.INPA",16777215,0,"$(SubSys):Volt:SetDeviceCalc.INPA")
#! Link("$(SubSys):Volt:SetDeviceCalc.INPA","$(SubSys):Volt:SetDevice.VAL")
#! Field("$(SubSys):Volt:SetDeviceCalc.FLNK",16777215,1,"$(SubSys):Volt:SetDeviceCalc.FLNK")
#! Link("$(SubSys):Volt:SetDeviceCalc.FLNK","$(SubSys):Volt:SendSet")
#! Field("$(SubSys):Volt:SetDeviceCalc.VAL",16777215,1,"$(SubSys):Volt:SetDeviceCalc.VAL")
#! Record("$(SubSys):Volt:SendSet",740,59,0,0,"$(SubSys):Volt:SendSet")
#! Field("$(SubSys):Volt:SendSet.DOL",16777215,0,"$(SubSys):Volt:SendSet.DOL")
#! Link("$(SubSys):Volt:SendSet.DOL","$(SubSys):Volt:SetDeviceCalc.VAL")
#! Record("$(SubSys):Analog:HBDelay",1540,1482,0,0,"$(SubSys):Analog:HBDelay")
#! Field("$(SubSys):Analog:HBDelay.LNK1",16777215,1,"$(SubSys):Analog:HBDelay.LNK1")
#! Link("$(SubSys):Analog:HBDelay.LNK1","$(SubSys):PREAD:GTOE:PHIGH:Calc.PROC")
#! Record("$(SubSys):SeptumTemp:GetRead",3033,200,0,1,"$(SubSys):SeptumTemp:GetRead")
#! Field("$(SubSys):SeptumTemp:GetRead.FLNK",16777215,1,"$(SubSys):SeptumTemp:GetRead.FLNK")
#! Link("$(SubSys):SeptumTemp:GetRead.FLNK","$(SubSys):SeptumTemp:ConvRead")
#! Field("$(SubSys):SeptumTemp:GetRead.VAL",16777215,1,"$(SubSys):SeptumTemp:GetRead.VAL")
#! Record("$(SubSys):SeptumTemp:ConvRead",3413,212,0,0,"$(SubSys):SeptumTemp:ConvRead")
#! Field("$(SubSys):SeptumTemp:ConvRead.INPA",16777215,0,"$(SubSys):SeptumTemp:ConvRead.INPA")
#! Link("$(SubSys):SeptumTemp:ConvRead.INPA","$(SubSys):SeptumTemp:GetRead.VAL")
#! Field("$(SubSys):SeptumTemp:ConvRead.OUT",16777215,1,"$(SubSys):SeptumTemp:ConvRead.OUT")
#! Link("$(SubSys):SeptumTemp:ConvRead.OUT","$(SubSys):SeptumTemp:Read.VAL")
#! Record("$(SubSys):SeptumTemp:Read",3793,308,0,1,"$(SubSys):SeptumTemp:Read")
#! Field("$(SubSys):SeptumTemp:Read.VAL",16777215,0,"$(SubSys):SeptumTemp:Read.VAL")
#! Record("$(SubSys):PDIFF:Report:DIFFValue",3700,1490,0,1,"$(SubSys):PDIFF:Report:DIFFValue")
#! Field("$(SubSys):PDIFF:Report:DIFFValue.VAL",16777215,1,"$(SubSys):PDIFF:Report:DIFFValue.VAL")
#! Field("$(SubSys):PDIFF:Report:DIFFValue.FLNK",16777215,1,"$(SubSys):PDIFF:Report:DIFFValue.FLNK")
#! Link("$(SubSys):PDIFF:Report:DIFFValue.FLNK","$(SubSys):PREADPSET:PDIFF:Calc")
#! Record("$(SubSys):PREADPSET:PDIFF:PRECalc",3380,1459,0,0,"$(SubSys):PREADPSET:PDIFF:PRECalc")
#! Field("$(SubSys):PREADPSET:PDIFF:PRECalc.OUT",16777215,1,"$(SubSys):PREADPSET:PDIFF:PRECalc.OUT")
#! Link("$(SubSys):PREADPSET:PDIFF:PRECalc.OUT","$(SubSys):PDIFF:Report:DIFFValue.VAL")
#! Field("$(SubSys):PREADPSET:PDIFF:PRECalc.INPC",16777215,0,"$(SubSys):PREADPSET:PDIFF:PRECalc.INPC")
#! Field("$(SubSys):PREADPSET:PDIFF:PRECalc.INPA",16777215,0,"$(SubSys):PREADPSET:PDIFF:PRECalc.INPA")
#! Link("$(SubSys):PREADPSET:PDIFF:PRECalc.INPA","$(SubSys):Volt:Read.VAL")
#! Field("$(SubSys):PREADPSET:PDIFF:PRECalc.INPB",16777215,1,"$(SubSys):PREADPSET:PDIFF:PRECalc.INPB")
#! Field("$(SubSys):PREADPSET:PDIFF:PRECalc.FLNK",16777215,1,"$(SubSys):PREADPSET:PDIFF:PRECalc.FLNK")
#! Link("$(SubSys):PREADPSET:PDIFF:PRECalc.FLNK","$(SubSys):PREADPSET:PDIFF:Calc2")
#! Field("$(SubSys):PREADPSET:PDIFF:PRECalc.VAL",16777215,1,"$(SubSys):PREADPSET:PDIFF:PRECalc.VAL")
#! Record("$(SubSys):PREADPSET:PDIFF:Calc",4000,1206,0,0,"$(SubSys):PREADPSET:PDIFF:Calc")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc.INPA",16777215,0,"$(SubSys):PREADPSET:PDIFF:Calc.INPA")
#! Link("$(SubSys):PREADPSET:PDIFF:Calc.INPA","$(SubSys):PREADPSET:PDIFF:PRECalc.VAL")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc.OUT",16777215,1,"$(SubSys):PREADPSET:PDIFF:Calc.OUT")
#! Link("$(SubSys):PREADPSET:PDIFF:Calc.OUT","$(SubSys):PREADPSET:PDIFF:String.PROC")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc.INPB",16777215,0,"$(SubSys):PREADPSET:PDIFF:Calc.INPB")
#! Link("$(SubSys):PREADPSET:PDIFF:Calc.INPB","$(SubSys):PREADPSET:PDIFF:Calc.LA")
#! Field("$(SubSys):PREADPSET:PDIFF:Calc.LA",16777215,0,"$(SubSys):PREADPSET:PDIFF:Calc.LA")
#! Record("$(SubSys):Curr:ModuleStatus",440,1408,0,0,"$(SubSys):Curr:ModuleStatus")
#! Field("$(SubSys):Curr:ModuleStatus.FLNK",16777215,1,"$(SubSys):Curr:ModuleStatus.FLNK")
#! Link("$(SubSys):Curr:ModuleStatus.FLNK","$(SubSys):ReadAcromagAIError:Check")
#! Field("$(SubSys):Curr:ModuleStatus.STAT",16777215,1,"$(SubSys):Curr:ModuleStatus.STAT")
#! Field("$(SubSys):Curr:ModuleStatus.VAL",16777215,1,"$(SubSys):Curr:ModuleStatus.VAL")
#! Record("$(SubSys):ReadAcromagAIError:Check",820,1386,0,0,"$(SubSys):ReadAcromagAIError:Check")
#! Field("$(SubSys):ReadAcromagAIError:Check.INPA",16777215,0,"$(SubSys):ReadAcromagAIError:Check.INPA")
#! Link("$(SubSys):ReadAcromagAIError:Check.INPA","$(SubSys):Curr:ModuleStatus.STAT")
#! Field("$(SubSys):ReadAcromagAIError:Check.OUT",16777215,1,"$(SubSys):ReadAcromagAIError:Check.OUT")
#! Field("$(SubSys):ReadAcromagAIError:Check.FLNK",16777215,1,"$(SubSys):ReadAcromagAIError:Check.FLNK")
#! Link("$(SubSys):ReadAcromagAIError:Check.FLNK","$(SubSys):ReadAcromagStatus:Check")
#! Record("$(SubSys):ReadAcromagStatus:Check",1120,1446,0,0,"$(SubSys):ReadAcromagStatus:Check")
#! Field("$(SubSys):ReadAcromagStatus:Check.FLNK",16777215,1,"$(SubSys):ReadAcromagStatus:Check.FLNK")
#! Link("$(SubSys):ReadAcromagStatus:Check.FLNK","$(SubSys):Analog:HBDelay")
#! Field("$(SubSys):ReadAcromagStatus:Check.INPA",16777215,0,"$(SubSys):ReadAcromagStatus:Check.INPA")
#! Link("$(SubSys):ReadAcromagStatus:Check.INPA","$(SubSys):Curr:ModuleStatus.VAL")
#! Field("$(SubSys):ReadAcromagStatus:Check.OUT",16777215,1,"$(SubSys):ReadAcromagStatus:Check.OUT")
#! TextBox(TB0,460,420,720,340,0,"Dialog",28,1,13369344,"Send PSET to PSHV Acromag",null)
#! TextBox(TB2,60,1380,320,1300,0,"Dialog",14,1,13369344,"Loop that Reads PSHV Current, checks for acromag faults and comm errors, and generates heartbeat to send to modicon",null)
#! TextBox(TB1,1500,280,1760,200,0,"Dialog",28,1,13369344,"Read PSHV Current",null)
