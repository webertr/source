#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("/home/duma/MagnetIOC/dbd/Magnet.dbd")
#! DBDEND


# Sets Coil Init Failed status to 0
record(bo, "$(SubSys):$(Device):Init:ResetInitFailed") {
  field(FLNK, "$(SubSys):$(Device):Init:ACMD:Set")
  field(VAL, "0")
  field(OUT, "$(SubSys):$(Device):InitFailed:Status.VAL PP")
}

record(calcout, "$(SubSys):$(Device):Init:ACMD:Set") {
  field(CALC, "3")
  field(OUT, "$(SubSys):$(Device):Init:ACMD:DevClear.ACMD PP")
  field(OCAL, "0")
}

# Clears the powersupply GPIB
# communication in case it was corrupted
# , for example by bad syntax in a
# message.  Unlike the Agilents and
# Kepcos, we must force this to clear
record(asyn, "$(SubSys):$(Device):Init:ACMD:DevClear") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(ADDR, "$(R)")
  field(OMAX, "4096")
  field(IMAX, "4096")
  field(SCAN, "Passive")
  field(AOUT, "ERR?")
  field(OEOS, "10")
  field(IEOS, "10")
  field(FLNK, "$(SubSys):$(Device):Init:ACMD:Delay")
  field(TMOD, "Write/Read")
  field(TMOT, "1")
  field(ACMD, "Selected Dev. Clear (SDC)")
}

# Provides 3 sec delay for comm to clear
# before trying communications
record(seq, "$(SubSys):$(Device):Init:ACMD:Delay") {
  field(SELM, "All")
  field(DLY1, "3")
  field(LNK1, "$(SubSys):$(Device):Init:CheckError.PROC")
}

# Queries Kikisui ISM Supply for System Error information.  Since
# Kikusui Supplies do not report 240 - Hardware error, we will
# not set a flag depending on the contents of the error register,
# we will only flag if the error field of the asyn record
# (ERRS) indicates a comm problem.
record(asyn, "$(SubSys):$(Device):Init:CheckError") {
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(AsynPort)")
  field(ADDR, "$(R)")
  field(OMAX, "4096")
  field(IMAX, "4096")
  field(SCAN, "Passive")
  field(AOUT, "ERR?")
  field(OEOS, "10")
  field(IEOS, "10")
  field(FLNK, "$(SubSys):$(Device):Init:CommErr:Reset")
  field(TMOD, "Write/Read")
  field(TMOT, "1")
}

# Reset Comm Error Status to False in
# IMSCondition.vdb
record(bo, "$(SubSys):$(Device):Init:CommErr:Reset") {
  field(VAL, "0")
  field(OUT, "$(SubSys):$(Device):CommError:Status PP")
  field(FLNK, "$(SubSys):$(Device):Init:CommCheck")
}

# Checks for Comm error
# 
# Returns 2 for Comm Error
# 
# Returns 1 for No Comm Error
record(scalcout, "$(SubSys):$(Device):Init:CommCheck") {
  field(FLNK, "$(SubSys):$(Device):Init:CommErrorCheck:Seq")
  field(CALC, "(AA!=0)+1")
  field(INAA, "$(SubSys):$(Device):Init:CheckError.ERRS")
}

# LNK2 Aborts Init and Processes Logs Comm Error
# 
# LNK 1 continues Init Process
record(seq, "$(SubSys):$(Device):Init:CommErrorCheck:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):$(Device):Init:CommCheck.VAL")
  field(LNK2, "$(SubSys):$(Device):Curr:InitFailed2.PROC")
  field(LNK1, "$(SubSys):$(Device):Init:PushCurrVal.PROC")
}

# At end of init, push curr val out to
# power supply
record(seq, "$(SubSys):$(Device):Init:PushCurrVal") {
  field(SELM, "All")
  field(LNK2, "$(SubSys):$(Device):InitFinished.PROC")
  field(LNK1, "$(SubSys):$(Device):Curr:SetDevice.PROC PP")
  field(DLY1, ".5")
  field(DLY2, ".5")
}

# Log Comm Error and continue to abort Init
record(stringout, "$(SubSys):$(Device):Curr:InitFailed2") {
  field(FLNK, "$(SubSys):$(Device):InitFailed:CommError")
  field(VAL, "$(SubSys) $(Device) Com Err,Init Fail")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sets Coil Init Status to 1
record(bo, "$(SubSys):$(Device):InitFailed:CommError") {
  field(FLNK, "$(SubSys):$(Device):Init:CommError:True")
  field(VAL, "1")
  field(OUT, "$(SubSys):$(Device):InitFailed:Status.VAL")
}

# Set Comm Error to True in ISMCondition
# and continue to abort init
record(calcout, "$(SubSys):$(Device):Init:CommError:True") {
  field(FLNK, "$(SubSys):$(Device):InitFinished")
  field(OUT, "$(SubSys):$(Device):CommError:Status PP")
  field(CALC, "1")
  field(OCAL, "0")
}

# Set Coil Init Status to zero
record(bo, "$(SubSys):$(Device):InitFinished") {
  field(VAL, "0")
  field(OUT, "$(SubSys):$(Device):Init:Status.VAL PP")
}

# Coil Init Status.  Used in ISMInitialize.vdb to determine when all coils
# have finished their individual portion of the
# init sequence.
record(bo, "$(SubSys):$(Device):Init:Status") {
}

# Coil Init Failed Status:  Used to Abort Init Sequence in IMSInit.vdb
record(bo, "$(SubSys):$(Device):InitFailed:Status") {
}

# Sets Coil init status to 1
# Begins sequence of initializing
# power supply
record(bo, "$(SubSys):$(Device):InitStarted") {
  field(FLNK, "$(SubSys):$(Device):Init:ResetInitFailed")
  field(VAL, "1")
  field(OUT, "$(SubSys):$(Device):Init:Status.VAL PP")
}

#! Further lines contain data used by VisualDCT
#! View(413,3206,1.2)
#! Record("$(SubSys):$(Device):Init:ResetInitFailed",160,2840,0,0,"$(SubSys):$(Device):Init:ResetInitFailed")
#! Field("$(SubSys):$(Device):Init:ResetInitFailed.FLNK",16777215,1,"$(SubSys):$(Device):Init:ResetInitFailed.FLNK")
#! Link("$(SubSys):$(Device):Init:ResetInitFailed.FLNK","$(SubSys):$(Device):Init:ACMD:Set")
#! Field("$(SubSys):$(Device):Init:ResetInitFailed.OUT",16777215,1,"$(SubSys):$(Device):Init:ResetInitFailed.OUT")
#! Link("$(SubSys):$(Device):Init:ResetInitFailed.OUT","$(SubSys):$(Device):InitFailed:Status.VAL")
#! Record("$(SubSys):$(Device):Init:ACMD:Set",540,2800,0,0,"$(SubSys):$(Device):Init:ACMD:Set")
#! Field("$(SubSys):$(Device):Init:ACMD:Set.OUT",16777215,1,"$(SubSys):$(Device):Init:ACMD:Set.OUT")
#! Link("$(SubSys):$(Device):Init:ACMD:Set.OUT","$(SubSys):$(Device):Init:ACMD:DevClear.ACMD")
#! Record("$(SubSys):$(Device):Init:ACMD:DevClear",900,2876,0,1,"$(SubSys):$(Device):Init:ACMD:DevClear")
#! Field("$(SubSys):$(Device):Init:ACMD:DevClear.FLNK",16777215,1,"$(SubSys):$(Device):Init:ACMD:DevClear.FLNK")
#! Link("$(SubSys):$(Device):Init:ACMD:DevClear.FLNK","$(SubSys):$(Device):Init:ACMD:Delay")
#! Field("$(SubSys):$(Device):Init:ACMD:DevClear.ACMD",16777215,0,"$(SubSys):$(Device):Init:ACMD:DevClear.ACMD")
#! Record("$(SubSys):$(Device):Init:ACMD:Delay",1160,2880,0,0,"$(SubSys):$(Device):Init:ACMD:Delay")
#! Field("$(SubSys):$(Device):Init:ACMD:Delay.LNK1",16777215,1,"$(SubSys):$(Device):Init:ACMD:Delay.LNK1")
#! Link("$(SubSys):$(Device):Init:ACMD:Delay.LNK1","$(SubSys):$(Device):Init:CheckError.PROC")
#! Record("$(SubSys):$(Device):Init:CheckError",1440,2910,0,0,"$(SubSys):$(Device):Init:CheckError")
#! Field("$(SubSys):$(Device):Init:CheckError.FLNK",16777215,1,"$(SubSys):$(Device):Init:CheckError.FLNK")
#! Link("$(SubSys):$(Device):Init:CheckError.FLNK","$(SubSys):$(Device):Init:CommErr:Reset")
#! Field("$(SubSys):$(Device):Init:CheckError.ERRS",16777215,1,"$(SubSys):$(Device):Init:CheckError.ERRS")
#! Field("$(SubSys):$(Device):Init:CheckError.PROC",16777215,0,"$(SubSys):$(Device):Init:CheckError.PROC")
#! Record("$(SubSys):$(Device):Init:CommErr:Reset",1720,3060,0,0,"$(SubSys):$(Device):Init:CommErr:Reset")
#! Field("$(SubSys):$(Device):Init:CommErr:Reset.OUT",16777215,1,"$(SubSys):$(Device):Init:CommErr:Reset.OUT")
#! Field("$(SubSys):$(Device):Init:CommErr:Reset.FLNK",16777215,1,"$(SubSys):$(Device):Init:CommErr:Reset.FLNK")
#! Link("$(SubSys):$(Device):Init:CommErr:Reset.FLNK","$(SubSys):$(Device):Init:CommCheck")
#! Record("$(SubSys):$(Device):Init:CommCheck",2460,3120,0,0,"$(SubSys):$(Device):Init:CommCheck")
#! Field("$(SubSys):$(Device):Init:CommCheck.FLNK",16777215,1,"$(SubSys):$(Device):Init:CommCheck.FLNK")
#! Link("$(SubSys):$(Device):Init:CommCheck.FLNK","$(SubSys):$(Device):Init:CommErrorCheck:Seq")
#! Field("$(SubSys):$(Device):Init:CommCheck.INAA",16777215,0,"$(SubSys):$(Device):Init:CommCheck.INAA")
#! Link("$(SubSys):$(Device):Init:CommCheck.INAA","$(SubSys):$(Device):Init:CheckError.ERRS")
#! Field("$(SubSys):$(Device):Init:CommCheck.VAL",16777215,1,"$(SubSys):$(Device):Init:CommCheck.VAL")
#! Visibility("$(SubSys):$(Device):Init:CommCheck.CALC",1)
#! Record("$(SubSys):$(Device):Init:CommErrorCheck:Seq",2860,3105,0,0,"$(SubSys):$(Device):Init:CommErrorCheck:Seq")
#! Field("$(SubSys):$(Device):Init:CommErrorCheck:Seq.LNK1",16777215,1,"$(SubSys):$(Device):Init:CommErrorCheck:Seq.LNK1")
#! Link("$(SubSys):$(Device):Init:CommErrorCheck:Seq.LNK1","$(SubSys):$(Device):Init:PushCurrVal.PROC")
#! Field("$(SubSys):$(Device):Init:CommErrorCheck:Seq.LNK2",16777215,1,"$(SubSys):$(Device):Init:CommErrorCheck:Seq.LNK2")
#! Link("$(SubSys):$(Device):Init:CommErrorCheck:Seq.LNK2","$(SubSys):$(Device):Curr:InitFailed2.PROC")
#! Field("$(SubSys):$(Device):Init:CommErrorCheck:Seq.SELL",16777215,0,"$(SubSys):$(Device):Init:CommErrorCheck:Seq.SELL")
#! Link("$(SubSys):$(Device):Init:CommErrorCheck:Seq.SELL","$(SubSys):$(Device):Init:CommCheck.VAL")
#! Record("$(SubSys):$(Device):Init:PushCurrVal",3358,3051,0,1,"$(SubSys):$(Device):Init:PushCurrVal")
#! Field("$(SubSys):$(Device):Init:PushCurrVal.LNK2",16777215,1,"$(SubSys):$(Device):Init:PushCurrVal.LNK2")
#! Link("$(SubSys):$(Device):Init:PushCurrVal.LNK2","$(SubSys):$(Device):InitFinished.PROC")
#! Field("$(SubSys):$(Device):Init:PushCurrVal.LNK1",16777215,1,"$(SubSys):$(Device):Init:PushCurrVal.LNK1")
#! Field("$(SubSys):$(Device):Init:PushCurrVal.PROC",16777215,0,"$(SubSys):$(Device):Init:PushCurrVal.PROC")
#! Record("$(SubSys):$(Device):Curr:InitFailed2",3200,3420,0,1,"$(SubSys):$(Device):Curr:InitFailed2")
#! Field("$(SubSys):$(Device):Curr:InitFailed2.PROC",16777215,0,"$(SubSys):$(Device):Curr:InitFailed2.PROC")
#! Field("$(SubSys):$(Device):Curr:InitFailed2.FLNK",16777215,1,"$(SubSys):$(Device):Curr:InitFailed2.FLNK")
#! Link("$(SubSys):$(Device):Curr:InitFailed2.FLNK","$(SubSys):$(Device):InitFailed:CommError")
#! Field("$(SubSys):$(Device):Curr:InitFailed2.OUT",16777215,1,"$(SubSys):$(Device):Curr:InitFailed2.OUT")
#! Record("$(SubSys):$(Device):InitFailed:CommError",3500,3480,0,0,"$(SubSys):$(Device):InitFailed:CommError")
#! Field("$(SubSys):$(Device):InitFailed:CommError.FLNK",16777215,1,"$(SubSys):$(Device):InitFailed:CommError.FLNK")
#! Link("$(SubSys):$(Device):InitFailed:CommError.FLNK","$(SubSys):$(Device):Init:CommError:True")
#! Field("$(SubSys):$(Device):InitFailed:CommError.OUT",16777215,0,"$(SubSys):$(Device):InitFailed:CommError.OUT")
#! Link("$(SubSys):$(Device):InitFailed:CommError.OUT","$(SubSys):$(Device):InitFailed:Status.VAL")
#! Record("$(SubSys):$(Device):Init:CommError:True",3860,3405,0,0,"$(SubSys):$(Device):Init:CommError:True")
#! Field("$(SubSys):$(Device):Init:CommError:True.OUT",16777215,1,"$(SubSys):$(Device):Init:CommError:True.OUT")
#! Field("$(SubSys):$(Device):Init:CommError:True.FLNK",16777215,1,"$(SubSys):$(Device):Init:CommError:True.FLNK")
#! Link("$(SubSys):$(Device):Init:CommError:True.FLNK","$(SubSys):$(Device):InitFinished")
#! Record("$(SubSys):$(Device):InitFinished",4320,3515,0,0,"$(SubSys):$(Device):InitFinished")
#! Field("$(SubSys):$(Device):InitFinished.OUT",16777215,1,"$(SubSys):$(Device):InitFinished.OUT")
#! Link("$(SubSys):$(Device):InitFinished.OUT","$(SubSys):$(Device):Init:Status.VAL")
#! Field("$(SubSys):$(Device):InitFinished.PROC",16777215,0,"$(SubSys):$(Device):InitFinished.PROC")
#! Record("$(SubSys):$(Device):Init:Status",4700,3703,0,1,"$(SubSys):$(Device):Init:Status")
#! Field("$(SubSys):$(Device):Init:Status.VAL",16777215,0,"$(SubSys):$(Device):Init:Status.VAL")
#! Record("$(SubSys):$(Device):InitFailed:Status",680,3763,0,1,"$(SubSys):$(Device):InitFailed:Status")
#! Field("$(SubSys):$(Device):InitFailed:Status.VAL",16777215,1,"$(SubSys):$(Device):InitFailed:Status.VAL")
#! Record("$(SubSys):$(Device):InitStarted",360,4320,0,1,"$(SubSys):$(Device):InitStarted")
#! Field("$(SubSys):$(Device):InitStarted.FLNK",16777215,0,"$(SubSys):$(Device):InitStarted.FLNK")
#! Link("$(SubSys):$(Device):InitStarted.FLNK","$(SubSys):$(Device):Init:ResetInitFailed")
#! Field("$(SubSys):$(Device):InitStarted.OUT",16777215,1,"$(SubSys):$(Device):InitStarted.OUT")
#! Link("$(SubSys):$(Device):InitStarted.OUT","$(SubSys):$(Device):Init:Status.VAL")
