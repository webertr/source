#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Set Device Initializing Status to True
record(bo, "$(SubSys):Condition:Initialize:SetTrue") {
  field(FLNK, "$(SubSys):OnStatusChk")
  field(VAL, "1")
  field(OUT, "$(SubSys):Condition:Initializing:Status.VAL PP")
}

# Check to see if Device is on to ensure
# Device can communicate with IOC
# before initiaiiztaion
record(calc, "$(SubSys):OnStatusChk") {
  field(FLNK, "$(SubSys):OnStatus:ChkSeq")
  field(CALC, "A+1")
  field(INPA, "$(SubSys):On:Status")
}

# Branching for Device On Check
# 
# LNK1 Aborts Init and Processes record
# that logs Device Not On
# 
# LNK 2 continues Init Process
record(seq, "$(SubSys):OnStatus:ChkSeq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):OnStatusChk.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Curr:InitFailed3.PROC")
  field(DOL2, "1")
  field(LNK2, "$(SubSys):Init:Condition:RFON:Chk.PROC")
}

# Check to see if Beam is on.
# Cannot Initialize with Beam on
record(calc, "$(SubSys):Init:Condition:RFON:Chk") {
  field(CALC, "!A+1")
  field(INPA, "RF:HighPowerOn:Status")
  field(FLNK, "$(SubSys):Init:Condition:RFON:ChkSeq")
}

# LNK1 Aborts Init and Processes record
# that logs Beam On
# 
# LNK 2 continues Init Process
record(seq, "$(SubSys):Init:Condition:RFON:ChkSeq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Init:Condition:RFON:Chk.VAL")
  field(LNK1, "$(SubSys):Curr:InitFailed4.PROC")
  field(LNK2, "$(SubSys):Init:CoilErrorCheck.PROC")
}

# Links to perform initialization tasks for the ISM Kikisui supply.
# Required tasks include Comm check, and
# sending out required analog values.  These checks are in ISMInitializeSupply.vdb
# 4 sec delay gives PS time to come on
record(seq, "$(SubSys):Init:CoilErrorCheck") {
  field(SELM, "All")
  field(LNK1, "ISM:Output:InitStarted.PROC")
  field(FLNK, "$(SubSys):Init:ChkInitStatus")
  field(DLY1, "4")
}

# Returns a 0 after the supply has finished its part of the
# initialization: Comm check, and
# sending out required analog values
record(calc, "$(SubSys):Init:ChkInitStatus") {
  field(FLNK, "$(SubSys):Init:ChkInitStatus2")
  field(CALC, "A")
  field(INPA, "ISM:Output:Init:Status")
}

# This returns a:
# 1 if init is not complete for all coils.  Link back to check if inits are complete.
# 
# 2 if init is complete and one of the inits has failed.  Abort Initialization.
record(calc, "$(SubSys):Init:ChkInitStatus2") {
  field(FLNK, "$(SubSys):Init:ChkInitStatus3")
  field(CALC, "H+2*!H*(A)")
  field(INPA, "ISM:Output:InitFailed:Status")
  field(INPH, "$(SubSys):Init:ChkInitStatus.VAL")
}

# This returns a:
# 1 if init is not complete for all coils.  Link back to check if inits are complete.
# 
# 2 if init is complete and one of the inits has failed.  Abort Initialization.
# 
# 3 if init is complete and no inits failed. Continue Initialization Process.
record(calc, "$(SubSys):Init:ChkInitStatus3") {
  field(FLNK, "$(SubSys):Init:CoilErrorCheck2")
  field(CALC, "I+3*!H*!(A)")
  field(INPA, "ISM:Output:InitFailed:Status")
  field(INPH, "$(SubSys):Init:ChkInitStatus.VAL")
  field(INPI, "$(SubSys):Init:ChkInitStatus2.VAL")
}

# Uses previous Calc to branch:
# 
# 1 if init is not complete for all coils.  Link back to check if inits are complete.
# 
# 2 if init is complete and one of the inits has failed.  Abort Initialization.
# 
# 3 if init is complete and no inits failed. Continue Initialization Process.
# 
# Link 1 must be CA to break the processing locked, thus allowing a loop
record(seq, "$(SubSys):Init:CoilErrorCheck2") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Init:ChkInitStatus3.VAL")
  field(LNK1, "$(SubSys):Init:ChkInitStatus.PROC CA")
  field(LNK2, "$(SubSys):Condition:Initialize:SetFalse.PROC CA")
  field(LNK3, "$(SubSys):Initializing:Scan:Disable:Reset.PROC CA")
}

# Reset initializing:scan:disable record once all powersupplies have
# been initialized
record(bo, "$(SubSys):Initializing:Scan:Disable:Reset") {
  field(PINI, "YES")
  field(VAL, "0")
  field(FLNK, "$(SubSys):Curr:ResetHB:PulseHi")
  field(OUT, "$(SubSys):Initializing:Scan:Disable.VAL PP")
}

# Set Reset Heartbeat Interlock bit high in modicon
# to reset heartbeat monitor
# Wait 4 seconds to allow the scanning of the powersupplies
# to begin, thus providing the heartbeat signal
record(calcout, "$(SubSys):Curr:ResetHB:PulseHi") {
  field(FLNK, "$(SubSys):Curr:ResetHB:PulseLo")
  field(OUT, "$(SubSys):Reset:Heartbeat:Write PP")
  field(ODLY, "4")
  field(CALC, "1")
  field(OCAL, "0")
}

# Set Reset Heartbeat Interlock bit Low in modicon
# so heartbeat can be reset in the future
record(calcout, "$(SubSys):Curr:ResetHB:PulseLo") {
  field(OUT, "$(SubSys):Reset:Heartbeat:Write PP")
  field(ODLY, "1")
  field(FLNK, "$(SubSys):Init:HBCheck")
  field(CALC, "0")
  field(OCAL, "0")
}

# Checks to insure that Heart Beat was Reset in MOD 1
record(calc, "$(SubSys):Init:HBCheck") {
  field(FLNK, "$(SubSys):Init:HBCheck:Seq")
  field(CALC, "A+1")
  field(INPA, "$(SubSys):HeartbeatOK:Status")
}

# If Heartbeat is OK:
# Link 2 - continue with Initialization
# 
# If Not:
# Link 1 - Log Heart Beat Reset Fail and abort Initialization
record(seq, "$(SubSys):Init:HBCheck:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Init:HBCheck.VAL")
  field(DOL1, "0")
  field(DOL2, "1")
  field(LNK2, "$(SubSys):Curr:InitComplete.PROC")
  field(LNK1, "$(SubSys):Curr:InitFailed6.PROC")
}

# Logs Init Complete
record(stringout, "$(SubSys):Curr:InitComplete") {
  field(FLNK, "$(SubSys):Condition:Initialize:SetFalse")
  field(VAL, "$(SubSys) Initialize Complete")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Heart Beat reset failed to log and continues
# to abort init sequence
record(stringout, "$(SubSys):Curr:InitFailed6") {
  field(FLNK, "$(SubSys):Condition:Initialize:SetFalse")
  field(VAL, "$(SubSys) Hrt Beat Err,Init Failed")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sets Initialize Status to False
# Status Record in ISMCondition.vdb
record(bo, "$(SubSys):Condition:Initialize:SetFalse") {
  field(VAL, "0")
  field(OUT, "$(SubSys):Condition:Initializing:Status.VAL PP")
}

# disallows power supply scanning until each powersupply has been intialized
# Value is 1 while supplies are initializing and this is when the
# scanning to read the power supplies will be disabled.
record(bo, "$(SubSys):Initializing:Scan:Disable") {
  field(PINI, "YES")
}

# Logs Beam On, Init Aborted
record(stringout, "$(SubSys):Curr:InitFailed4") {
  field(FLNK, "$(SubSys):Condition:Initialize:SetFalse")
  field(VAL, "$(SubSys) Beam On, can't init")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Logs Device Off, Init Aborted
record(stringout, "$(SubSys):Curr:InitFailed3") {
  field(FLNK, "$(SubSys):Condition:Initialize:SetFalse")
  field(VAL, "$(SubSys) Not On, Init Failed")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Initializing Status
record(bo, "$(SubSys):Condition:Initializing:Status") {
  field(PINI, "YES")
  field(OUT, "$(SubSys):Initializing:Scan:Disable.VAL PP")
}

# Begin Device Init Sequence
# Write "Initializing" Message to system log
record(stringout, "$(SubSys):Init:String") {
  field(FLNK, "$(SubSys):Condition:Initialize:SetTrue")
  field(VAL, "$(SubSys) Initializing")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

#! Further lines contain data used by VisualDCT
#! View(0,4395,1.4)
#! Record("$(SubSys):Condition:Initialize:SetTrue",300,2882,0,0,"$(SubSys):Condition:Initialize:SetTrue")
#! Field("$(SubSys):Condition:Initialize:SetTrue.OUT",16777215,0,"$(SubSys):Condition:Initialize:SetTrue.OUT")
#! Link("$(SubSys):Condition:Initialize:SetTrue.OUT","$(SubSys):Condition:Initializing:Status.VAL")
#! Field("$(SubSys):Condition:Initialize:SetTrue.FLNK",16777215,1,"$(SubSys):Condition:Initialize:SetTrue.FLNK")
#! Link("$(SubSys):Condition:Initialize:SetTrue.FLNK","$(SubSys):OnStatusChk")
#! Record("$(SubSys):OnStatusChk",560,2882,0,0,"$(SubSys):OnStatusChk")
#! Field("$(SubSys):OnStatusChk.FLNK",16777215,1,"$(SubSys):OnStatusChk.FLNK")
#! Link("$(SubSys):OnStatusChk.FLNK","$(SubSys):OnStatus:ChkSeq")
#! Field("$(SubSys):OnStatusChk.INPA",16777215,1,"$(SubSys):OnStatusChk.INPA")
#! Field("$(SubSys):OnStatusChk.VAL",16777215,0,"$(SubSys):OnStatusChk.VAL")
#! Record("$(SubSys):OnStatus:ChkSeq",820,2900,0,0,"$(SubSys):OnStatus:ChkSeq")
#! Field("$(SubSys):OnStatus:ChkSeq.SELL",16777215,0,"$(SubSys):OnStatus:ChkSeq.SELL")
#! Link("$(SubSys):OnStatus:ChkSeq.SELL","$(SubSys):OnStatusChk.VAL")
#! Field("$(SubSys):OnStatus:ChkSeq.LNK2",16777215,1,"$(SubSys):OnStatus:ChkSeq.LNK2")
#! Link("$(SubSys):OnStatus:ChkSeq.LNK2","$(SubSys):Init:Condition:RFON:Chk.PROC")
#! Field("$(SubSys):OnStatus:ChkSeq.LNK1",16777215,1,"$(SubSys):OnStatus:ChkSeq.LNK1")
#! Link("$(SubSys):OnStatus:ChkSeq.LNK1","$(SubSys):Curr:InitFailed3.PROC")
#! Record("$(SubSys):Init:Condition:RFON:Chk",1060,2902,0,1,"$(SubSys):Init:Condition:RFON:Chk")
#! Field("$(SubSys):Init:Condition:RFON:Chk.FLNK",16777215,1,"$(SubSys):Init:Condition:RFON:Chk.FLNK")
#! Link("$(SubSys):Init:Condition:RFON:Chk.FLNK","$(SubSys):Init:Condition:RFON:ChkSeq")
#! Field("$(SubSys):Init:Condition:RFON:Chk.INPA",16777215,1,"$(SubSys):Init:Condition:RFON:Chk.INPA")
#! Field("$(SubSys):Init:Condition:RFON:Chk.VAL",16777215,1,"$(SubSys):Init:Condition:RFON:Chk.VAL")
#! Field("$(SubSys):Init:Condition:RFON:Chk.PROC",16777215,1,"$(SubSys):Init:Condition:RFON:Chk.PROC")
#! Record("$(SubSys):Init:Condition:RFON:ChkSeq",1340,2968,0,0,"$(SubSys):Init:Condition:RFON:ChkSeq")
#! Field("$(SubSys):Init:Condition:RFON:ChkSeq.SELL",16777215,0,"$(SubSys):Init:Condition:RFON:ChkSeq.SELL")
#! Link("$(SubSys):Init:Condition:RFON:ChkSeq.SELL","$(SubSys):Init:Condition:RFON:Chk.VAL")
#! Field("$(SubSys):Init:Condition:RFON:ChkSeq.LNK2",16777215,1,"$(SubSys):Init:Condition:RFON:ChkSeq.LNK2")
#! Link("$(SubSys):Init:Condition:RFON:ChkSeq.LNK2","$(SubSys):Init:CoilErrorCheck.PROC")
#! Field("$(SubSys):Init:Condition:RFON:ChkSeq.LNK1",16777215,1,"$(SubSys):Init:Condition:RFON:ChkSeq.LNK1")
#! Link("$(SubSys):Init:Condition:RFON:ChkSeq.LNK1","$(SubSys):Curr:InitFailed4.PROC")
#! Record("$(SubSys):Init:CoilErrorCheck",1640,2768,0,1,"$(SubSys):Init:CoilErrorCheck")
#! Field("$(SubSys):Init:CoilErrorCheck.LNK1",16777215,1,"$(SubSys):Init:CoilErrorCheck.LNK1")
#! Field("$(SubSys):Init:CoilErrorCheck.PROC",16777215,0,"$(SubSys):Init:CoilErrorCheck.PROC")
#! Field("$(SubSys):Init:CoilErrorCheck.FLNK",16777215,1,"$(SubSys):Init:CoilErrorCheck.FLNK")
#! Link("$(SubSys):Init:CoilErrorCheck.FLNK","$(SubSys):Init:ChkInitStatus")
#! Record("$(SubSys):Init:ChkInitStatus",1940,2922,0,0,"$(SubSys):Init:ChkInitStatus")
#! Field("$(SubSys):Init:ChkInitStatus.INPA",16777215,1,"$(SubSys):Init:ChkInitStatus.INPA")
#! Field("$(SubSys):Init:ChkInitStatus.FLNK",16777215,1,"$(SubSys):Init:ChkInitStatus.FLNK")
#! Link("$(SubSys):Init:ChkInitStatus.FLNK","$(SubSys):Init:ChkInitStatus2")
#! Field("$(SubSys):Init:ChkInitStatus.VAL",16777215,1,"$(SubSys):Init:ChkInitStatus.VAL")
#! Field("$(SubSys):Init:ChkInitStatus.PROC",16777215,1,"$(SubSys):Init:ChkInitStatus.PROC")
#! Record("$(SubSys):Init:ChkInitStatus2",2460,2908,0,0,"$(SubSys):Init:ChkInitStatus2")
#! Field("$(SubSys):Init:ChkInitStatus2.FLNK",16777215,1,"$(SubSys):Init:ChkInitStatus2.FLNK")
#! Link("$(SubSys):Init:ChkInitStatus2.FLNK","$(SubSys):Init:ChkInitStatus3")
#! Field("$(SubSys):Init:ChkInitStatus2.INPA",16777215,1,"$(SubSys):Init:ChkInitStatus2.INPA")
#! Field("$(SubSys):Init:ChkInitStatus2.INPH",16777215,0,"$(SubSys):Init:ChkInitStatus2.INPH")
#! Link("$(SubSys):Init:ChkInitStatus2.INPH","$(SubSys):Init:ChkInitStatus.VAL")
#! Field("$(SubSys):Init:ChkInitStatus2.VAL",16777215,0,"$(SubSys):Init:ChkInitStatus2.VAL")
#! Record("$(SubSys):Init:ChkInitStatus3",2740,2934,0,0,"$(SubSys):Init:ChkInitStatus3")
#! Field("$(SubSys):Init:ChkInitStatus3.FLNK",16777215,1,"$(SubSys):Init:ChkInitStatus3.FLNK")
#! Link("$(SubSys):Init:ChkInitStatus3.FLNK","$(SubSys):Init:CoilErrorCheck2")
#! Field("$(SubSys):Init:ChkInitStatus3.INPA",16777215,1,"$(SubSys):Init:ChkInitStatus3.INPA")
#! Field("$(SubSys):Init:ChkInitStatus3.INPI",16777215,0,"$(SubSys):Init:ChkInitStatus3.INPI")
#! Link("$(SubSys):Init:ChkInitStatus3.INPI","$(SubSys):Init:ChkInitStatus2.VAL")
#! Field("$(SubSys):Init:ChkInitStatus3.INPH",16777215,0,"$(SubSys):Init:ChkInitStatus3.INPH")
#! Link("$(SubSys):Init:ChkInitStatus3.INPH","$(SubSys):Init:ChkInitStatus.VAL")
#! Field("$(SubSys):Init:ChkInitStatus3.VAL",16777215,1,"$(SubSys):Init:ChkInitStatus3.VAL")
#! Record("$(SubSys):Init:CoilErrorCheck2",3140,3254,0,0,"$(SubSys):Init:CoilErrorCheck2")
#! Field("$(SubSys):Init:CoilErrorCheck2.LNK3",16777215,1,"$(SubSys):Init:CoilErrorCheck2.LNK3")
#! Link("$(SubSys):Init:CoilErrorCheck2.LNK3","$(SubSys):Initializing:Scan:Disable:Reset.PROC")
#! Field("$(SubSys):Init:CoilErrorCheck2.SELL",16777215,0,"$(SubSys):Init:CoilErrorCheck2.SELL")
#! Link("$(SubSys):Init:CoilErrorCheck2.SELL","$(SubSys):Init:ChkInitStatus3.VAL")
#! Field("$(SubSys):Init:CoilErrorCheck2.LNK1",16777215,0,"$(SubSys):Init:CoilErrorCheck2.LNK1")
#! Link("$(SubSys):Init:CoilErrorCheck2.LNK1","$(SubSys):Init:ChkInitStatus.PROC")
#! Field("$(SubSys):Init:CoilErrorCheck2.LNK2",16777215,1,"$(SubSys):Init:CoilErrorCheck2.LNK2")
#! Link("$(SubSys):Init:CoilErrorCheck2.LNK2","$(SubSys):Condition:Initialize:SetFalse.PROC")
#! Record("$(SubSys):Initializing:Scan:Disable:Reset",3380,2828,0,1,"$(SubSys):Initializing:Scan:Disable:Reset")
#! Field("$(SubSys):Initializing:Scan:Disable:Reset.FLNK",16777215,1,"$(SubSys):Initializing:Scan:Disable:Reset.FLNK")
#! Link("$(SubSys):Initializing:Scan:Disable:Reset.FLNK","$(SubSys):Curr:ResetHB:PulseHi")
#! Field("$(SubSys):Initializing:Scan:Disable:Reset.PROC",16777215,1,"$(SubSys):Initializing:Scan:Disable:Reset.PROC")
#! Field("$(SubSys):Initializing:Scan:Disable:Reset.OUT",16777215,1,"$(SubSys):Initializing:Scan:Disable:Reset.OUT")
#! Link("$(SubSys):Initializing:Scan:Disable:Reset.OUT","$(SubSys):Initializing:Scan:Disable.VAL")
#! Record("$(SubSys):Curr:ResetHB:PulseHi",3660,2814,0,0,"$(SubSys):Curr:ResetHB:PulseHi")
#! Field("$(SubSys):Curr:ResetHB:PulseHi.FLNK",16777215,1,"$(SubSys):Curr:ResetHB:PulseHi.FLNK")
#! Link("$(SubSys):Curr:ResetHB:PulseHi.FLNK","$(SubSys):Curr:ResetHB:PulseLo")
#! Field("$(SubSys):Curr:ResetHB:PulseHi.OUT",16777215,1,"$(SubSys):Curr:ResetHB:PulseHi.OUT")
#! Record("$(SubSys):Curr:ResetHB:PulseLo",3940,2854,0,0,"$(SubSys):Curr:ResetHB:PulseLo")
#! Field("$(SubSys):Curr:ResetHB:PulseLo.OUT",16777215,1,"$(SubSys):Curr:ResetHB:PulseLo.OUT")
#! Field("$(SubSys):Curr:ResetHB:PulseLo.FLNK",16777215,1,"$(SubSys):Curr:ResetHB:PulseLo.FLNK")
#! Link("$(SubSys):Curr:ResetHB:PulseLo.FLNK","$(SubSys):Init:HBCheck")
#! Record("$(SubSys):Init:HBCheck",4200,2922,0,0,"$(SubSys):Init:HBCheck")
#! Field("$(SubSys):Init:HBCheck.FLNK",16777215,1,"$(SubSys):Init:HBCheck.FLNK")
#! Link("$(SubSys):Init:HBCheck.FLNK","$(SubSys):Init:HBCheck:Seq")
#! Field("$(SubSys):Init:HBCheck.VAL",16777215,0,"$(SubSys):Init:HBCheck.VAL")
#! Field("$(SubSys):Init:HBCheck.INPA",16777215,1,"$(SubSys):Init:HBCheck.INPA")
#! Record("$(SubSys):Init:HBCheck:Seq",4460,2920,0,0,"$(SubSys):Init:HBCheck:Seq")
#! Field("$(SubSys):Init:HBCheck:Seq.SELL",16777215,0,"$(SubSys):Init:HBCheck:Seq.SELL")
#! Link("$(SubSys):Init:HBCheck:Seq.SELL","$(SubSys):Init:HBCheck.VAL")
#! Field("$(SubSys):Init:HBCheck:Seq.LNK2",16777215,1,"$(SubSys):Init:HBCheck:Seq.LNK2")
#! Link("$(SubSys):Init:HBCheck:Seq.LNK2","$(SubSys):Curr:InitComplete.PROC")
#! Field("$(SubSys):Init:HBCheck:Seq.LNK1",16777215,1,"$(SubSys):Init:HBCheck:Seq.LNK1")
#! Link("$(SubSys):Init:HBCheck:Seq.LNK1","$(SubSys):Curr:InitFailed6.PROC")
#! Record("$(SubSys):Curr:InitComplete",4760,2982,0,1,"$(SubSys):Curr:InitComplete")
#! Field("$(SubSys):Curr:InitComplete.FLNK",16777215,1,"$(SubSys):Curr:InitComplete.FLNK")
#! Link("$(SubSys):Curr:InitComplete.FLNK","$(SubSys):Condition:Initialize:SetFalse")
#! Field("$(SubSys):Curr:InitComplete.OUT",16777215,1,"$(SubSys):Curr:InitComplete.OUT")
#! Field("$(SubSys):Curr:InitComplete.PROC",16777215,0,"$(SubSys):Curr:InitComplete.PROC")
#! Record("$(SubSys):Curr:InitFailed6",4740,3202,0,1,"$(SubSys):Curr:InitFailed6")
#! Field("$(SubSys):Curr:InitFailed6.FLNK",16777215,1,"$(SubSys):Curr:InitFailed6.FLNK")
#! Link("$(SubSys):Curr:InitFailed6.FLNK","$(SubSys):Condition:Initialize:SetFalse")
#! Field("$(SubSys):Curr:InitFailed6.OUT",16777215,1,"$(SubSys):Curr:InitFailed6.OUT")
#! Field("$(SubSys):Curr:InitFailed6.PROC",16777215,0,"$(SubSys):Curr:InitFailed6.PROC")
#! Record("$(SubSys):Condition:Initialize:SetFalse",4800,3495,0,1,"$(SubSys):Condition:Initialize:SetFalse")
#! Field("$(SubSys):Condition:Initialize:SetFalse.PROC",16777215,0,"$(SubSys):Condition:Initialize:SetFalse.PROC")
#! Field("$(SubSys):Condition:Initialize:SetFalse.OUT",16777215,0,"$(SubSys):Condition:Initialize:SetFalse.OUT")
#! Link("$(SubSys):Condition:Initialize:SetFalse.OUT","$(SubSys):Condition:Initializing:Status.VAL")
#! Record("$(SubSys):Initializing:Scan:Disable",3400,3490,0,1,"$(SubSys):Initializing:Scan:Disable")
#! Field("$(SubSys):Initializing:Scan:Disable.VAL",16777215,1,"$(SubSys):Initializing:Scan:Disable.VAL")
#! Record("$(SubSys):Curr:InitFailed4",1780,4082,0,1,"$(SubSys):Curr:InitFailed4")
#! Field("$(SubSys):Curr:InitFailed4.FLNK",16777215,1,"$(SubSys):Curr:InitFailed4.FLNK")
#! Link("$(SubSys):Curr:InitFailed4.FLNK","$(SubSys):Condition:Initialize:SetFalse")
#! Field("$(SubSys):Curr:InitFailed4.OUT",16777215,1,"$(SubSys):Curr:InitFailed4.OUT")
#! Field("$(SubSys):Curr:InitFailed4.PROC",16777215,0,"$(SubSys):Curr:InitFailed4.PROC")
#! Record("$(SubSys):Curr:InitFailed3",1200,4242,0,1,"$(SubSys):Curr:InitFailed3")
#! Field("$(SubSys):Curr:InitFailed3.FLNK",16777215,1,"$(SubSys):Curr:InitFailed3.FLNK")
#! Link("$(SubSys):Curr:InitFailed3.FLNK","$(SubSys):Condition:Initialize:SetFalse")
#! Field("$(SubSys):Curr:InitFailed3.OUT",16777215,1,"$(SubSys):Curr:InitFailed3.OUT")
#! Field("$(SubSys):Curr:InitFailed3.PROC",16777215,0,"$(SubSys):Curr:InitFailed3.PROC")
#! Record("$(SubSys):Condition:Initializing:Status",220,3495,0,1,"$(SubSys):Condition:Initializing:Status")
#! Field("$(SubSys):Condition:Initializing:Status.OUT",16777215,1,"$(SubSys):Condition:Initializing:Status.OUT")
#! Link("$(SubSys):Condition:Initializing:Status.OUT","$(SubSys):Initializing:Scan:Disable.VAL")
#! Field("$(SubSys):Condition:Initializing:Status.VAL",16777215,1,"$(SubSys):Condition:Initializing:Status.VAL")
#! Record("$(SubSys):Init:String",20,2802,0,1,"$(SubSys):Init:String")
#! Field("$(SubSys):Init:String.OUT",16777215,1,"$(SubSys):Init:String.OUT")
#! Field("$(SubSys):Init:String.FLNK",16777215,1,"$(SubSys):Init:String.FLNK")
#! Link("$(SubSys):Init:String.FLNK","$(SubSys):Condition:Initialize:SetTrue")
