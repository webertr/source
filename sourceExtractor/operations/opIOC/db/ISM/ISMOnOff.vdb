#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBD("/home/duma/MagnetIOC/dbd/Magnet.dbd")
#! DBDEND


# Begins process two links.  FLNK starts checks required
# to eventually turn the device On.  LNK2 will check to
# see if Device is "Shutting Down" when On is requested.
# If it is, the "Off" sequence will be aborted and
# the Ouptput current PSET will be set to what it was before
# the "Shutdown" state was entered
record(fanout, "$(SubSys):OnRequest:Abort:Shutdown") {
  field(FLNK, "$(SubSys):OnRequest:SO")
  field(LNK2, "$(SubSys):OnReq:ShutDownAbort:Seq")
}

# Set Shutting Down Status to True
record(bo, "$(SubSys):Condition:ShuttingDown:SetTrue") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Condition:ShuttingDown:Status PP")
  field(FLNK, "$(SubSys):Zero")
  field(OMSL, "supervisory")
}

# Processes when On is requested.  If Status is "Shutting Down"
# the shutdown sequence will be aborted
record(seq, "$(SubSys):OnReq:ShutDownAbort:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Condition:ShuttingDown:Status")
  field(LNK1, "$(SubSys):OnReq:ShutDownAbort:Fan.PROC")
}

# Shutdown aborted link
record(fanout, "$(SubSys):OnReq:ShutDownAbort:Fan") {
  field(FLNK, "$(SubSys):Set:SD:Restore")
  field(LNK1, "$(SubSys):OnReqi:ShutDownAbort:Log")
}

# Shutdown aborted to system log
record(stringout, "$(SubSys):OnReqi:ShutDownAbort:Log") {
  field(VAL, "$(SubSys) Shutdown Aborted by On Request")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Value in this record holds the value of
# the state of the system.  It is 1 if
# On has been requested and On has not
# failed, and 0 if Off has been
# requested and off has not failed
# 
# This State is just for internal book keeping
# for the IOC and not apparant to operators
record(bo, "$(SubSys):Request:Status") {
}

# Writes "Device On Requested" to system log
record(stringout, "$(SubSys):OnRequest:SO") {
  field(FLNK, "$(SubSys):AlreadyOnCk")
  field(VAL, "$(SubSys) On requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if the EMC is On or in Local
record(calc, "$(SubSys):AlreadyOnCk") {
  field(FLNK, "$(SubSys):AlreadyOnCk:Seq")
  field(CALC, "A+(!A&!B)*2+B*4")
  field(INPA, "$(SubSys):On:Status")
  field(INPB, "$(SubSys):Local:Status")
}

# Continues with one of three processes:
# LNK 1 if EMC is already on
# LNK 2 if not on and not in local
# LNK 3 if in local
record(seq, "$(SubSys):AlreadyOnCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(SubSys):AlreadyOnCk.VAL")
  field(DLY1, ".5")
  field(LNK1, "$(SubSys):AlreadyOnCk:SO.PROC")
  field(DLY2, ".5")
  field(LNK2, "$(SubSys):Reset:Then:IntlkChk.PROC")
  field(DLY3, ".5")
  field(LNK3, "$(SubSys):Local:String.PROC")
}

# Sets the Status of the system to
# Device Not On and Not requested to be On
# 
# This is internal book keeping for the IOC
record(bo, "$(SubSys):On:Failed") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Request:Status.VAL PP")
}

# Write "Device in local control" to system log
# and link to process
# chain that aborts Device On sequence
record(stringout, "$(SubSys):Local:String") {
  field(VAL, "$(SubSys) in local,can't turn on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):On:Failed")
}

# Write Device "Already On" to system
# log and link to process
# chain that aborts Device On sequence
record(stringout, "$(SubSys):AlreadyOnCk:SO") {
  field(VAL, "$(SubSys) Already On")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continue with On sequence after
# device On and local checks have been made.
# 
# LNK 1 begins the Reset chain
# found in xxxSystemReset.vdb
# which sends a reset for the Main
# Coil as well as all Circular coils.
# Reset is all that this link will do.
# 
# LNK2 Continues On Sequence by checking to see
# if all "Resetable" interlocks have been cleared
# after a delay of three seconds.
record(seq, "$(SubSys):Reset:Then:IntlkChk") {
  field(SELM, "All")
  field(LNK1, "$(SubSys):Reset:Pulse:High.PROC")
  field(DLY2, "3")
  field(LNK2, "$(SubSys):On:InterlockCk.PROC")
}

# Check to see if all "Resetable" interlocks
# have been cleared three seconds after the
# reset chain processing has begun
record(calc, "$(SubSys):On:InterlockCk") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):On:Seq")
  field(CALC, "(!A)+1")
  field(INPA, "$(SubSys):Device:Interlock:Status")
}

# Last branching before device is turned on
# LNK 1 sends error to log messages and
# aborts On sequence if device interlocks persist
# 
# LNK 2 will send on command to Modicon to
# turn on device
record(seq, "$(SubSys):On:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):On:InterlockCk.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):OnError:String.PROC")
  field(DOL2, "1")
  field(LNK2, "$(SubSys):On:Pulse:High.PROC")
}

# Set Modicon device On bit to 1 to turn on device
record(calcout, "$(SubSys):On:Pulse:High") {
  field(FLNK, "$(SubSys):On:Pulse:Low")
  field(OUT, "$(SubSys):On:Write.VAL")
  field(CALC, "1")
  field(OCAL, "0")
}

# Write "Device Interlock, Cannot turn device On" to system
# log and link to process
# chain that aborts device On sequence
record(stringout, "$(SubSys):OnError:String") {
  field(VAL, "Device Intlk, Can't turn $(SubSys) on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):On:FailedFO")
}

# One second after device On bit has been set
# to 1 in the Modicon PLC, set the bit back to zero.
# Logic in the Modicon PLC is such that if the bit
# is not set back to zero, once the supply turns off
# it cannot be turned back on.
record(calcout, "$(SubSys):On:Pulse:Low") {
  field(OUT, "$(SubSys):On:Write.VAL")
  field(ODLY, "1")
  field(FLNK, "$(SubSys):On:Timeout")
  field(CALC, "0")
  field(OCAL, "0")
}

# Process the device On Timeout check after a delay of
# DL1 which is three seconds
record(seq, "$(SubSys):On:Timeout") {
  field(SELM, "All")
  field(LNK2, "$(SubSys):On:Timeout:Calc.PROC")
  field(DLY2, "3")
}

# PSMC On timeout check.  If after three seconds of
# being commanded on, the device has not come on a timeout
# message will be logged and the On sequence will be
# aborted.
record(calcout, "$(SubSys):On:Timeout:Calc") {
  field(CALC, "A")
  field(INPA, "$(SubSys):On:Status")
  field(OUT, "$(SubSys):On:Timeout:SO.PROC")
  field(OOPT, "When Zero")
  field(OCAL, "0")
}

# Write "MC Turn On Timeout" to system log
# and link to process
# chain that aborts Device On sequence
record(stringout, "$(SubSys):On:Timeout:SO") {
  field(FLNK, "$(SubSys):On:Failed")
  field(VAL, "$(SubSys) Turn On Timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continously checks to see if Device has turned on or off
record(calcout, "$(SubSys):OnOff:Calc:SO") {
  field(SCAN, ".1 second")
  field(CALC, "A+1")
  field(INPA, "$(SubSys):On:Status")
  field(OUT, "$(SubSys):OnOff:SO:Seq.PROC")
  field(OOPT, "On Change")
  field(OCAL, "0")
}

# Drives processing chains depending if device
# has turned On or Off
# 
# LNK1
# device has turned on.  Write system message and
# begin initialization of PSMC
# 
# LNK2
# Device has turned Off.  Write system message and
# restore PSET to what it was before Off was
# requested.
record(seq, "$(SubSys):OnOff:SO:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):OnOff:Calc:SO.VAL")
  field(LNK1, "$(SubSys):Off:String.PROC")
  field(LNK2, "$(SubSys):On:String:And:Init.PROC")
}

# Write ISM turned On to message log and
# start processing ISM Initialize sequence
# in ISMInitialize.vdb
record(stringout, "$(SubSys):On:String:And:Init") {
  field(VAL, "$(SubSys) turned on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):Init:String.PROC PP")
}

# Write Device turned Off system message and
# restore PSET to what it was before Off was
# requested.
record(stringout, "$(SubSys):Off:String") {
  field(VAL, "$(SubSys) turned off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):CheckOffRequested:BeforeRestore")
}

# Take temporary storage of device Current PSET
# and write it to the actual Current PSET
# 
# After this process record that clears temporary
# storage
record(calcout, "$(SubSys):Set:SD:Restore") {
  field(CALC, "A")
  field(INPA, "$(SubSys):Set:SD:Temp.VAL")
  field(OUT, "$(SubSys):$(Device):$(Param):Set PP")
  field(FLNK, "$(SubSys):PTemp:Clear")
  field(OCAL, "0")
}

# Set Shutdown Status to False
record(bo, "$(SubSys):Condition:SDSetFalse") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Condition:ShuttingDown:Status PP")
}

# clears temporary storage of device Current PSET
# 
# Process recort that sets Shutdown Status to False
record(ao, "$(SubSys):PTemp:Clear") {
  field(FLNK, "$(SubSys):Condition:SDSetFalse")
  field(VAL, "0")
  field(OUT, "$(SubSys):Set:SD:Temp.VAL PP")
}

# Sets Shutdown Status to False
# 
# Sets internal state to Not Off or Not requested Off
record(fanout, "$(SubSys):Off:Timeout:FO") {
  field(FLNK, "$(SubSys):Condition:SDSetFalse")
  field(LNK1, "$(SubSys):Off:Failed")
}

# Writes device Shutdown Timeout to system log
record(stringout, "$(SubSys):SD:Timeout:String") {
  field(FLNK, "$(SubSys):Off:Timeout:FO")
  field(VAL, "$(SubSys) Off request timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# When Shutdown timeout has been reached, this record
# will begin to process chain logging the
# timeout condition and setting Shutdown Status to false
record(seq, "$(SubSys):SD:Timeout:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):SD:Timeout:Calc.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):SD:Timeout:String.PROC")
}

# Device shutdown timer.  Device has 360 seconds to shutdown
# before timeout condition is reached
record(calc, "$(SubSys):SD:Timeout:Calc") {
  field(SCAN, "1 second")
  field(FLNK, "$(SubSys):SD:Timeout:Seq")
  field(CALC, "A>360")
  field(INPA, "$(SubSys):SDTimeout:timer.VAL")
}

# Starts Timeout timer once device Shutdown Status is true
record(calc, "$(SubSys):SDTimeout:timer") {
  field(SCAN, "1 second")
  field(CALC, "(A+1)*B")
  field(INPA, "$(SubSys):SDTimeout:timer.VAL")
  field(INPB, "$(SubSys):Condition:ShuttingDown:Status")
}

# Part of temporary storage of device Current PSET
# Used so PSET can be reset once device is Off
record(ao, "$(SubSys):Set:SD:Temp") {
}

# Set Device Current PSET to 0
record(ao, "$(SubSys):Zero") {
  field(VAL, "0")
  field(OUT, "$(SubSys):$(Device):$(Param):Set PP")
  field(OMSL, "supervisory")
}

# Gets current Device Current PSET to put it to temporary
# storage during shutdown when PSET is set to 0.  This
# temporarily stored PSET will be restored once the
# Device turns off.
record(calcout, "$(SubSys):Set:SD:Store") {
  field(FLNK, "$(SubSys):Condition:ShuttingDown:SetTrue")
  field(CALC, "A")
  field(INPA, "$(SubSys):$(Device):$(Param):Set")
  field(OUT, "$(SubSys):Set:SD:Temp.VAL PP")
  field(OCAL, "0")
}

# Process different links depending on if
# Device Current PSET = 0
# 
# LNK1 if it is not 0.  Then the Value of PSET must
# be stored temporarily so that after it has been
# set to zero and the PSMC has been turned off,
# it cab be set back to this value.
# 
# LNK2 if it is zero.  Device Current PSET does not need
# to be temporarily stored and can directly proceed with
# shutdown of Device
record(seq, "$(SubSys):OffReq:FPDelay") {
  field(SELM, "Specified")
  field(DLY1, ".5")
  field(LNK1, "$(SubSys):Set:SD:Store.PROC")
  field(SELL, "$(SubSys):Off:PSET0Check.VAL")
  field(LNK2, "$(SubSys):Condition:ShuttingDown:SetTrue.PROC")
}

# Checks to see if Device Current PSET = 0
record(calc, "$(SubSys):Off:PSET0Check") {
  field(CALC, "(A=0)+1")
  field(INPA, "$(SubSys):$(Device):$(Param):Set")
  field(FLNK, "$(SubSys):OffReq:FPDelay")
}

# Sets internal state to not Off or not Requested Off
record(bo, "$(SubSys):Off:Failed") {
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Request:Status.VAL PP")
}

# Writes "Device in Local Control" to system log
# and begins chain to abort Off sequence
record(stringout, "$(SubSys):Local:String2") {
  field(VAL, "$(SubSys) local, can't turn off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):Off:Failed")
}

# Writes "Already Off" to system log
record(stringout, "$(SubSys):AlreadyOffCk:SO") {
  field(VAL, "$(SubSys) Already Off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continues with one of three processes:
# LNK 1 if Device is already off
# LNK 2 if not off and not in local
# LNK 3 if in local
record(seq, "$(SubSys):AlreadyOffCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(SubSys):AlreadyOffCk.VAL")
  field(DLY1, ".5")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):AlreadyOffCk:SO.PROC")
  field(DLY2, ".5")
  field(LNK2, "$(SubSys):Off:PSET0Check.PROC")
  field(DOL2, "1")
  field(DLY3, ".5")
  field(DOL3, "1")
  field(LNK3, "$(SubSys):Local:String2.PROC")
}

# Checks to see if the Device is Off or in Local
record(calc, "$(SubSys):AlreadyOffCk") {
  field(FLNK, "$(SubSys):AlreadyOffCk:Seq")
  field(CALC, "!A+(A&!B)*2+B*4")
  field(INPA, "$(SubSys):On:Status")
  field(INPB, "$(SubSys):Local:Status")
}

# One second after issuing command to Modicon to Set
# Device Off bit to zero, set Off bit back to one so
# that the Device may be turned on in the future
record(calcout, "$(SubSys):Off:Pulse:High") {
  field(OUT, "$(SubSys):Off:Write PP")
  field(ODLY, "1")
  field(CALC, "1")
  field(OCAL, "0")
}

# Issue command to Modicon to Set Device Off bit to zero,
# turning off Device
record(calcout, "$(SubSys):Off:Pulse:Low") {
  field(FLNK, "$(SubSys):Off:Pulse:High")
  field(OUT, "$(SubSys):Off:Write PP")
  field(CALC, "0")
  field(OCAL, "0")
}

# If device is Shutting down and shutdown has not failed
# and the Device Current PSET is less than x, proceed
# with issuing a command to the Modicon to turn Off
# Device
record(seq, "$(SubSys):Condition:SD:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Zero:Check.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Off:Pulse:Low.PROC")
}

# If device is Shutting down and shutdown has not failed
# and the Device Current PSET is less than x, proceed
# with issuing a command to the Modicon to turn Off
# Device
record(calc, "$(SubSys):Zero:Check") {
  field(SCAN, ".5 second")
  field(FLNK, "$(SubSys):Condition:SD:Seq")
  field(CALC, "!A&ABS(B)<.5&C")
  field(INPA, "$(SubSys):Request:Status.VAL")
  field(INPB, "$(SubSys):$(Device):$(Param):Read")
  field(INPC, "$(SubSys):Condition:ShuttingDown:Status")
}

# Writes "Off Requested" to system log
record(stringout, "$(SubSys):OffRequest:SO") {
  field(FLNK, "$(SubSys):AlreadyOffCk")
  field(VAL, "$(SubSys) Off requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Start of the MC Off chain.  This is
# processed first when trying to turn
# off the main coil.
record(bo, "$(SubSys):OffRequest") {
  field(FLNK, "$(SubSys):OffRequest:SO")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Request:Status.VAL PP")
}

# Begins processing chain to determine which
# device interlock prevented Device from turning
# on in order to write info to system log.
# 
# Done in two sets because there are so many
# possible device interlocks for EMC
# 
# LNK 1 sets the internal status to Off or
# not On Requested
# 
# LNK2 and LNK3 check which device interlock
# is active
record(fanout, "$(SubSys):On:FailedFO") {
  field(LNK1, "$(SubSys):On:Failed")
  field(LNK3, "$(SubSys):Device:Interlock:Log")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
# when the IOC starts up
record(bo, "$(SubSys):Init:OnSignal2") {
  field(FLNK, "$(SubSys):Init:OffSignal2")
  field(VAL, "0")
  field(OUT, "$(SubSys):On:Write PP")
  field(OMSL, "supervisory")
  field(PINI, "YES")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
# when the IOC starts up
record(bo, "$(SubSys):Init:OffSignal2") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Off:Write PP")
  field(PINI, "YES")
  field(OMSL, "supervisory")
}

# Determines which device interlock is preventing
# ISM from turning on
record(calc, "$(SubSys):Device:Interlock:Log") {
  field(FLNK, "$(SubSys):Device:Interlock:LogSeq")
  field(CALC, "!A+2*B")
  field(INPA, "$(SubSys):GroundFaultOk:Status")
  field(INPB, "$(SubSys):CoolingNotOK:Status")
}

# Process appropriate log message records
# according to which device interlocks
# are active.
# 
# .2 sec between links to avoid message storms to
# the system log.
record(seq, "$(SubSys):Device:Interlock:LogSeq") {
  field(SELM, "Mask")
  field(DLY1, ".2")
  field(LNK1, "$(SubSys):GroundFaultIntlk:String.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(SubSys):Cooling:String.PROC")
  field(DLY3, ".2")
  field(DLY4, ".2")
  field(SELN, "")
  field(SELL, "$(SubSys):Device:Interlock:Log.VAL")
}

# Sends ground fault interlock
# message to system log
record(stringout, "$(SubSys):GroundFaultIntlk:String") {
  field(VAL, "$(SubSys) Inlk, Gnd Fault")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Cooling Interlock message to system log
record(stringout, "$(SubSys):Cooling:String") {
  field(VAL, "$(SubSys) Intlk, Cooling")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Start of the Device On chain.  This is
# processed first when trying to turn
# on the main coil.
record(bo, "$(SubSys):OnRequest") {
  field(FLNK, "$(SubSys):Init:OnSignal")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Request:Status.VAL PP")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
record(bo, "$(SubSys):Init:OnSignal") {
  field(FLNK, "$(SubSys):Init:OffSignal")
  field(VAL, "0")
  field(OUT, "$(SubSys):On:Write PP")
  field(OMSL, "supervisory")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
record(bo, "$(SubSys):Init:OffSignal") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Off:Write PP")
  field(OMSL, "supervisory")
  field(FLNK, "$(SubSys):OnRequest:Abort:Shutdown")
}

record(bo, "$(SubSys):Condition:ShuttingDown:Status") {
  field(VAL, "0")
  field(OMSL, "supervisory")
}

# If the device has been commanded to turn off, processing
# will continue and the PSET will be modified as is done in
# standard turn off
# 
# If the device turned off without being commanded via
# the control system to do so (i.e. interlock or turning off
# locally) the PSET will not be modified as is in standard
# turn off
record(calcout, "$(SubSys):CheckOffRequested:BeforeRestore") {
  field(CALC, "A")
  field(INPA, "$(SubSys):Request:Status")
  field(OUT, "$(SubSys):Set:SD:Restore.PROC")
  field(OOPT, "When Zero")
  field(OCAL, "0")
}

#! Further lines contain data used by VisualDCT
#! View(249,1756,1.0)
#! Record("$(SubSys):OnRequest:Abort:Shutdown",1560,1956,0,0,"$(SubSys):OnRequest:Abort:Shutdown")
#! Field("$(SubSys):OnRequest:Abort:Shutdown.FLNK",16777215,1,"$(SubSys):OnRequest:Abort:Shutdown.FLNK")
#! Link("$(SubSys):OnRequest:Abort:Shutdown.FLNK","$(SubSys):OnRequest:SO")
#! Field("$(SubSys):OnRequest:Abort:Shutdown.LNK2",16777215,1,"$(SubSys):OnRequest:Abort:Shutdown.LNK2")
#! Link("$(SubSys):OnRequest:Abort:Shutdown.LNK2","$(SubSys):OnReq:ShutDownAbort:Seq")
#! Record("$(SubSys):Condition:ShuttingDown:SetTrue",2900,4108,0,0,"$(SubSys):Condition:ShuttingDown:SetTrue")
#! Field("$(SubSys):Condition:ShuttingDown:SetTrue.OUT",16777215,1,"$(SubSys):Condition:ShuttingDown:SetTrue.OUT")
#! Link("$(SubSys):Condition:ShuttingDown:SetTrue.OUT","$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Field("$(SubSys):Condition:ShuttingDown:SetTrue.FLNK",16777215,1,"$(SubSys):Condition:ShuttingDown:SetTrue.FLNK")
#! Link("$(SubSys):Condition:ShuttingDown:SetTrue.FLNK","$(SubSys):Zero")
#! Field("$(SubSys):Condition:ShuttingDown:SetTrue.PROC",16777215,0,"$(SubSys):Condition:ShuttingDown:SetTrue.PROC")
#! Record("$(SubSys):OnReq:ShutDownAbort:Seq",1720,2382,0,1,"$(SubSys):OnReq:ShutDownAbort:Seq")
#! Field("$(SubSys):OnReq:ShutDownAbort:Seq.SELL",16777215,1,"$(SubSys):OnReq:ShutDownAbort:Seq.SELL")
#! Link("$(SubSys):OnReq:ShutDownAbort:Seq.SELL","$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Field("$(SubSys):OnReq:ShutDownAbort:Seq.LNK1",16777215,1,"$(SubSys):OnReq:ShutDownAbort:Seq.LNK1")
#! Link("$(SubSys):OnReq:ShutDownAbort:Seq.LNK1","$(SubSys):OnReq:ShutDownAbort:Fan.PROC")
#! Record("$(SubSys):OnReq:ShutDownAbort:Fan",2020,2436,0,1,"$(SubSys):OnReq:ShutDownAbort:Fan")
#! Field("$(SubSys):OnReq:ShutDownAbort:Fan.PROC",16777215,0,"$(SubSys):OnReq:ShutDownAbort:Fan.PROC")
#! Field("$(SubSys):OnReq:ShutDownAbort:Fan.LNK1",16777215,1,"$(SubSys):OnReq:ShutDownAbort:Fan.LNK1")
#! Link("$(SubSys):OnReq:ShutDownAbort:Fan.LNK1","$(SubSys):OnReqi:ShutDownAbort:Log")
#! Field("$(SubSys):OnReq:ShutDownAbort:Fan.FLNK",16777215,1,"$(SubSys):OnReq:ShutDownAbort:Fan.FLNK")
#! Link("$(SubSys):OnReq:ShutDownAbort:Fan.FLNK","$(SubSys):Set:SD:Restore")
#! Record("$(SubSys):OnReqi:ShutDownAbort:Log",2300,2376,0,0,"$(SubSys):OnReqi:ShutDownAbort:Log")
#! Field("$(SubSys):OnReqi:ShutDownAbort:Log.OUT",16777215,1,"$(SubSys):OnReqi:ShutDownAbort:Log.OUT")
#! Record("$(SubSys):Request:Status",980,2923,0,1,"$(SubSys):Request:Status")
#! Field("$(SubSys):Request:Status.VAL",16777215,1,"$(SubSys):Request:Status.VAL")
#! Record("$(SubSys):OnRequest:SO",1960,1922,0,0,"$(SubSys):OnRequest:SO")
#! Field("$(SubSys):OnRequest:SO.OUT",16777215,1,"$(SubSys):OnRequest:SO.OUT")
#! Field("$(SubSys):OnRequest:SO.FLNK",16777215,1,"$(SubSys):OnRequest:SO.FLNK")
#! Link("$(SubSys):OnRequest:SO.FLNK","$(SubSys):AlreadyOnCk")
#! Record("$(SubSys):AlreadyOnCk",2280,1908,0,0,"$(SubSys):AlreadyOnCk")
#! Field("$(SubSys):AlreadyOnCk.FLNK",16777215,1,"$(SubSys):AlreadyOnCk.FLNK")
#! Link("$(SubSys):AlreadyOnCk.FLNK","$(SubSys):AlreadyOnCk:Seq")
#! Field("$(SubSys):AlreadyOnCk.VAL",16777215,1,"$(SubSys):AlreadyOnCk.VAL")
#! Field("$(SubSys):AlreadyOnCk.INPA",16777215,1,"$(SubSys):AlreadyOnCk.INPA")
#! Field("$(SubSys):AlreadyOnCk.INPB",16777215,1,"$(SubSys):AlreadyOnCk.INPB")
#! Record("$(SubSys):AlreadyOnCk:Seq",2580,1872,0,0,"$(SubSys):AlreadyOnCk:Seq")
#! Field("$(SubSys):AlreadyOnCk:Seq.SELL",16777215,0,"$(SubSys):AlreadyOnCk:Seq.SELL")
#! Link("$(SubSys):AlreadyOnCk:Seq.SELL","$(SubSys):AlreadyOnCk.VAL")
#! Field("$(SubSys):AlreadyOnCk:Seq.LNK1",16777215,1,"$(SubSys):AlreadyOnCk:Seq.LNK1")
#! Link("$(SubSys):AlreadyOnCk:Seq.LNK1","$(SubSys):AlreadyOnCk:SO.PROC")
#! Field("$(SubSys):AlreadyOnCk:Seq.LNK3",16777215,1,"$(SubSys):AlreadyOnCk:Seq.LNK3")
#! Link("$(SubSys):AlreadyOnCk:Seq.LNK3","$(SubSys):Local:String.PROC")
#! Field("$(SubSys):AlreadyOnCk:Seq.LNK2",16777215,1,"$(SubSys):AlreadyOnCk:Seq.LNK2")
#! Link("$(SubSys):AlreadyOnCk:Seq.LNK2","$(SubSys):Reset:Then:IntlkChk.PROC")
#! Record("$(SubSys):On:Failed",2700,1542,0,1,"$(SubSys):On:Failed")
#! Field("$(SubSys):On:Failed.OUT",16777215,0,"$(SubSys):On:Failed.OUT")
#! Link("$(SubSys):On:Failed.OUT","$(SubSys):Request:Status.VAL")
#! Record("$(SubSys):Local:String",2980,1662,0,1,"$(SubSys):Local:String")
#! Field("$(SubSys):Local:String.OUT",16777215,1,"$(SubSys):Local:String.OUT")
#! Field("$(SubSys):Local:String.PROC",16777215,0,"$(SubSys):Local:String.PROC")
#! Field("$(SubSys):Local:String.FLNK",16777215,0,"$(SubSys):Local:String.FLNK")
#! Link("$(SubSys):Local:String.FLNK","$(SubSys):On:Failed")
#! Record("$(SubSys):AlreadyOnCk:SO",3020,1896,0,1,"$(SubSys):AlreadyOnCk:SO")
#! Field("$(SubSys):AlreadyOnCk:SO.OUT",16777215,1,"$(SubSys):AlreadyOnCk:SO.OUT")
#! Field("$(SubSys):AlreadyOnCk:SO.PROC",16777215,0,"$(SubSys):AlreadyOnCk:SO.PROC")
#! Record("$(SubSys):Reset:Then:IntlkChk",2920,2088,0,1,"$(SubSys):Reset:Then:IntlkChk")
#! Field("$(SubSys):Reset:Then:IntlkChk.LNK1",16777215,1,"$(SubSys):Reset:Then:IntlkChk.LNK1")
#! Field("$(SubSys):Reset:Then:IntlkChk.LNK2",16777215,1,"$(SubSys):Reset:Then:IntlkChk.LNK2")
#! Link("$(SubSys):Reset:Then:IntlkChk.LNK2","$(SubSys):On:InterlockCk.PROC")
#! Field("$(SubSys):Reset:Then:IntlkChk.PROC",16777215,0,"$(SubSys):Reset:Then:IntlkChk.PROC")
#! Record("$(SubSys):On:InterlockCk",3180,2088,0,1,"$(SubSys):On:InterlockCk")
#! Field("$(SubSys):On:InterlockCk.PROC",16777215,1,"$(SubSys):On:InterlockCk.PROC")
#! Field("$(SubSys):On:InterlockCk.FLNK",16777215,1,"$(SubSys):On:InterlockCk.FLNK")
#! Link("$(SubSys):On:InterlockCk.FLNK","$(SubSys):On:Seq")
#! Field("$(SubSys):On:InterlockCk.VAL",16777215,1,"$(SubSys):On:InterlockCk.VAL")
#! Field("$(SubSys):On:InterlockCk.INPA",16777215,1,"$(SubSys):On:InterlockCk.INPA")
#! Record("$(SubSys):On:Seq",3460,2080,0,0,"$(SubSys):On:Seq")
#! Field("$(SubSys):On:Seq.LNK1",16777215,1,"$(SubSys):On:Seq.LNK1")
#! Link("$(SubSys):On:Seq.LNK1","$(SubSys):OnError:String.PROC")
#! Field("$(SubSys):On:Seq.LNK2",16777215,1,"$(SubSys):On:Seq.LNK2")
#! Link("$(SubSys):On:Seq.LNK2","$(SubSys):On:Pulse:High.PROC")
#! Field("$(SubSys):On:Seq.SELL",16777215,0,"$(SubSys):On:Seq.SELL")
#! Link("$(SubSys):On:Seq.SELL","$(SubSys):On:InterlockCk.VAL")
#! Record("$(SubSys):On:Pulse:High",3740,2288,0,1,"$(SubSys):On:Pulse:High")
#! Field("$(SubSys):On:Pulse:High.OUT",16777215,1,"$(SubSys):On:Pulse:High.OUT")
#! Field("$(SubSys):On:Pulse:High.PROC",16777215,0,"$(SubSys):On:Pulse:High.PROC")
#! Field("$(SubSys):On:Pulse:High.FLNK",16777215,1,"$(SubSys):On:Pulse:High.FLNK")
#! Link("$(SubSys):On:Pulse:High.FLNK","$(SubSys):On:Pulse:Low")
#! Record("$(SubSys):OnError:String",3920,2062,0,1,"$(SubSys):OnError:String")
#! Field("$(SubSys):OnError:String.PROC",16777215,0,"$(SubSys):OnError:String.PROC")
#! Field("$(SubSys):OnError:String.OUT",16777215,1,"$(SubSys):OnError:String.OUT")
#! Field("$(SubSys):OnError:String.FLNK",16777215,1,"$(SubSys):OnError:String.FLNK")
#! Link("$(SubSys):OnError:String.FLNK","$(SubSys):On:FailedFO")
#! Record("$(SubSys):On:Pulse:Low",4000,2274,0,0,"$(SubSys):On:Pulse:Low")
#! Field("$(SubSys):On:Pulse:Low.OUT",16777215,1,"$(SubSys):On:Pulse:Low.OUT")
#! Field("$(SubSys):On:Pulse:Low.FLNK",16777215,1,"$(SubSys):On:Pulse:Low.FLNK")
#! Link("$(SubSys):On:Pulse:Low.FLNK","$(SubSys):On:Timeout")
#! Record("$(SubSys):On:Timeout",4260,2342,0,0,"$(SubSys):On:Timeout")
#! Field("$(SubSys):On:Timeout.LNK2",16777215,1,"$(SubSys):On:Timeout.LNK2")
#! Link("$(SubSys):On:Timeout.LNK2","$(SubSys):On:Timeout:Calc.PROC")
#! Record("$(SubSys):On:Timeout:Calc",4560,2274,0,1,"$(SubSys):On:Timeout:Calc")
#! Field("$(SubSys):On:Timeout:Calc.PROC",16777215,0,"$(SubSys):On:Timeout:Calc.PROC")
#! Field("$(SubSys):On:Timeout:Calc.INPA",16777215,1,"$(SubSys):On:Timeout:Calc.INPA")
#! Field("$(SubSys):On:Timeout:Calc.OUT",16777215,1,"$(SubSys):On:Timeout:Calc.OUT")
#! Link("$(SubSys):On:Timeout:Calc.OUT","$(SubSys):On:Timeout:SO.PROC")
#! Record("$(SubSys):On:Timeout:SO",4840,2382,0,1,"$(SubSys):On:Timeout:SO")
#! Field("$(SubSys):On:Timeout:SO.PROC",16777215,0,"$(SubSys):On:Timeout:SO.PROC")
#! Field("$(SubSys):On:Timeout:SO.OUT",16777215,1,"$(SubSys):On:Timeout:SO.OUT")
#! Field("$(SubSys):On:Timeout:SO.FLNK",16777215,0,"$(SubSys):On:Timeout:SO.FLNK")
#! Link("$(SubSys):On:Timeout:SO.FLNK","$(SubSys):On:Failed")
#! Record("$(SubSys):OnOff:Calc:SO",3300,3060,0,1,"$(SubSys):OnOff:Calc:SO")
#! Field("$(SubSys):OnOff:Calc:SO.VAL",16777215,1,"$(SubSys):OnOff:Calc:SO.VAL")
#! Field("$(SubSys):OnOff:Calc:SO.INPA",16777215,1,"$(SubSys):OnOff:Calc:SO.INPA")
#! Field("$(SubSys):OnOff:Calc:SO.OUT",16777215,1,"$(SubSys):OnOff:Calc:SO.OUT")
#! Link("$(SubSys):OnOff:Calc:SO.OUT","$(SubSys):OnOff:SO:Seq.PROC")
#! Record("$(SubSys):OnOff:SO:Seq",3600,3068,0,1,"$(SubSys):OnOff:SO:Seq")
#! Field("$(SubSys):OnOff:SO:Seq.LNK2",16777215,1,"$(SubSys):OnOff:SO:Seq.LNK2")
#! Link("$(SubSys):OnOff:SO:Seq.LNK2","$(SubSys):On:String:And:Init.PROC")
#! Field("$(SubSys):OnOff:SO:Seq.LNK1",16777215,1,"$(SubSys):OnOff:SO:Seq.LNK1")
#! Link("$(SubSys):OnOff:SO:Seq.LNK1","$(SubSys):Off:String.PROC")
#! Field("$(SubSys):OnOff:SO:Seq.SELL",16777215,0,"$(SubSys):OnOff:SO:Seq.SELL")
#! Link("$(SubSys):OnOff:SO:Seq.SELL","$(SubSys):OnOff:Calc:SO.VAL")
#! Field("$(SubSys):OnOff:SO:Seq.PROC",16777215,0,"$(SubSys):OnOff:SO:Seq.PROC")
#! Record("$(SubSys):On:String:And:Init",3960,3002,0,1,"$(SubSys):On:String:And:Init")
#! Field("$(SubSys):On:String:And:Init.OUT",16777215,1,"$(SubSys):On:String:And:Init.OUT")
#! Field("$(SubSys):On:String:And:Init.PROC",16777215,0,"$(SubSys):On:String:And:Init.PROC")
#! Field("$(SubSys):On:String:And:Init.FLNK",16777215,1,"$(SubSys):On:String:And:Init.FLNK")
#! Record("$(SubSys):Off:String",3960,3182,0,1,"$(SubSys):Off:String")
#! Field("$(SubSys):Off:String.OUT",16777215,1,"$(SubSys):Off:String.OUT")
#! Field("$(SubSys):Off:String.PROC",16777215,0,"$(SubSys):Off:String.PROC")
#! Field("$(SubSys):Off:String.FLNK",16777215,1,"$(SubSys):Off:String.FLNK")
#! Link("$(SubSys):Off:String.FLNK","$(SubSys):CheckOffRequested:BeforeRestore")
#! Record("$(SubSys):Set:SD:Restore",4580,3414,0,0,"$(SubSys):Set:SD:Restore")
#! Field("$(SubSys):Set:SD:Restore.PROC",16777215,0,"$(SubSys):Set:SD:Restore.PROC")
#! Field("$(SubSys):Set:SD:Restore.OUT",16777215,1,"$(SubSys):Set:SD:Restore.OUT")
#! Field("$(SubSys):Set:SD:Restore.INPA",16777215,0,"$(SubSys):Set:SD:Restore.INPA")
#! Link("$(SubSys):Set:SD:Restore.INPA","$(SubSys):Set:SD:Temp.VAL")
#! Field("$(SubSys):Set:SD:Restore.FLNK",16777215,0,"$(SubSys):Set:SD:Restore.FLNK")
#! Link("$(SubSys):Set:SD:Restore.FLNK","$(SubSys):PTemp:Clear")
#! Record("$(SubSys):Condition:SDSetFalse",4700,3922,0,1,"$(SubSys):Condition:SDSetFalse")
#! Field("$(SubSys):Condition:SDSetFalse.OUT",16777215,0,"$(SubSys):Condition:SDSetFalse.OUT")
#! Link("$(SubSys):Condition:SDSetFalse.OUT","$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Record("$(SubSys):PTemp:Clear",4100,3782,0,1,"$(SubSys):PTemp:Clear")
#! Field("$(SubSys):PTemp:Clear.OUT",16777215,0,"$(SubSys):PTemp:Clear.OUT")
#! Link("$(SubSys):PTemp:Clear.OUT","$(SubSys):Set:SD:Temp.VAL")
#! Field("$(SubSys):PTemp:Clear.FLNK",16777215,1,"$(SubSys):PTemp:Clear.FLNK")
#! Link("$(SubSys):PTemp:Clear.FLNK","$(SubSys):Condition:SDSetFalse")
#! Record("$(SubSys):Off:Timeout:FO",4680,4476,0,0,"$(SubSys):Off:Timeout:FO")
#! Field("$(SubSys):Off:Timeout:FO.FLNK",16777215,1,"$(SubSys):Off:Timeout:FO.FLNK")
#! Link("$(SubSys):Off:Timeout:FO.FLNK","$(SubSys):Condition:SDSetFalse")
#! Field("$(SubSys):Off:Timeout:FO.LNK1",16777215,0,"$(SubSys):Off:Timeout:FO.LNK1")
#! Link("$(SubSys):Off:Timeout:FO.LNK1","$(SubSys):Off:Failed")
#! Record("$(SubSys):SD:Timeout:String",4400,4102,0,0,"$(SubSys):SD:Timeout:String")
#! Field("$(SubSys):SD:Timeout:String.FLNK",16777215,1,"$(SubSys):SD:Timeout:String.FLNK")
#! Link("$(SubSys):SD:Timeout:String.FLNK","$(SubSys):Off:Timeout:FO")
#! Field("$(SubSys):SD:Timeout:String.OUT",16777215,1,"$(SubSys):SD:Timeout:String.OUT")
#! Field("$(SubSys):SD:Timeout:String.PROC",16777215,1,"$(SubSys):SD:Timeout:String.PROC")
#! Record("$(SubSys):SD:Timeout:Seq",4140,4108,0,0,"$(SubSys):SD:Timeout:Seq")
#! Field("$(SubSys):SD:Timeout:Seq.SELL",16777215,0,"$(SubSys):SD:Timeout:Seq.SELL")
#! Link("$(SubSys):SD:Timeout:Seq.SELL","$(SubSys):SD:Timeout:Calc.VAL")
#! Field("$(SubSys):SD:Timeout:Seq.LNK1",16777215,1,"$(SubSys):SD:Timeout:Seq.LNK1")
#! Link("$(SubSys):SD:Timeout:Seq.LNK1","$(SubSys):SD:Timeout:String.PROC")
#! Record("$(SubSys):SD:Timeout:Calc",3880,4068,0,1,"$(SubSys):SD:Timeout:Calc")
#! Field("$(SubSys):SD:Timeout:Calc.FLNK",16777215,1,"$(SubSys):SD:Timeout:Calc.FLNK")
#! Link("$(SubSys):SD:Timeout:Calc.FLNK","$(SubSys):SD:Timeout:Seq")
#! Field("$(SubSys):SD:Timeout:Calc.INPA",16777215,0,"$(SubSys):SD:Timeout:Calc.INPA")
#! Link("$(SubSys):SD:Timeout:Calc.INPA","$(SubSys):SDTimeout:timer.VAL")
#! Field("$(SubSys):SD:Timeout:Calc.VAL",16777215,0,"$(SubSys):SD:Timeout:Calc.VAL")
#! Record("$(SubSys):SDTimeout:timer",3620,4088,0,1,"$(SubSys):SDTimeout:timer")
#! Field("$(SubSys):SDTimeout:timer.VAL",16777215,0,"$(SubSys):SDTimeout:timer.VAL")
#! Field("$(SubSys):SDTimeout:timer.INPA",16777215,0,"$(SubSys):SDTimeout:timer.INPA")
#! Link("$(SubSys):SDTimeout:timer.INPA","$(SubSys):SDTimeout:timer.VAL")
#! Field("$(SubSys):SDTimeout:timer.INPB",16777215,0,"$(SubSys):SDTimeout:timer.INPB")
#! Link("$(SubSys):SDTimeout:timer.INPB","$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Record("$(SubSys):Set:SD:Temp",3380,3763,0,1,"$(SubSys):Set:SD:Temp")
#! Field("$(SubSys):Set:SD:Temp.VAL",16777215,1,"$(SubSys):Set:SD:Temp.VAL")
#! Record("$(SubSys):Zero",3200,4302,0,0,"$(SubSys):Zero")
#! Field("$(SubSys):Zero.OUT",16777215,1,"$(SubSys):Zero.OUT")
#! Record("$(SubSys):Set:SD:Store",2620,3954,0,0,"$(SubSys):Set:SD:Store")
#! Field("$(SubSys):Set:SD:Store.OUT",16777215,1,"$(SubSys):Set:SD:Store.OUT")
#! Link("$(SubSys):Set:SD:Store.OUT","$(SubSys):Set:SD:Temp.VAL")
#! Field("$(SubSys):Set:SD:Store.FLNK",16777215,1,"$(SubSys):Set:SD:Store.FLNK")
#! Link("$(SubSys):Set:SD:Store.FLNK","$(SubSys):Condition:ShuttingDown:SetTrue")
#! Field("$(SubSys):Set:SD:Store.INPA",16777215,1,"$(SubSys):Set:SD:Store.INPA")
#! Field("$(SubSys):Set:SD:Store.PROC",16777215,1,"$(SubSys):Set:SD:Store.PROC")
#! Record("$(SubSys):OffReq:FPDelay",2400,4014,0,0,"$(SubSys):OffReq:FPDelay")
#! Field("$(SubSys):OffReq:FPDelay.LNK1",16777215,1,"$(SubSys):OffReq:FPDelay.LNK1")
#! Link("$(SubSys):OffReq:FPDelay.LNK1","$(SubSys):Set:SD:Store.PROC")
#! Field("$(SubSys):OffReq:FPDelay.SELL",16777215,0,"$(SubSys):OffReq:FPDelay.SELL")
#! Link("$(SubSys):OffReq:FPDelay.SELL","$(SubSys):Off:PSET0Check.VAL")
#! Field("$(SubSys):OffReq:FPDelay.LNK2",16777215,1,"$(SubSys):OffReq:FPDelay.LNK2")
#! Link("$(SubSys):OffReq:FPDelay.LNK2","$(SubSys):Condition:ShuttingDown:SetTrue.PROC")
#! Record("$(SubSys):Off:PSET0Check",2120,4042,0,0,"$(SubSys):Off:PSET0Check")
#! Field("$(SubSys):Off:PSET0Check.FLNK",16777215,1,"$(SubSys):Off:PSET0Check.FLNK")
#! Link("$(SubSys):Off:PSET0Check.FLNK","$(SubSys):OffReq:FPDelay")
#! Field("$(SubSys):Off:PSET0Check.INPA",16777215,1,"$(SubSys):Off:PSET0Check.INPA")
#! Field("$(SubSys):Off:PSET0Check.VAL",16777215,1,"$(SubSys):Off:PSET0Check.VAL")
#! Field("$(SubSys):Off:PSET0Check.PROC",16777215,0,"$(SubSys):Off:PSET0Check.PROC")
#! Record("$(SubSys):Off:Failed",2280,4542,0,1,"$(SubSys):Off:Failed")
#! Field("$(SubSys):Off:Failed.OUT",16777215,0,"$(SubSys):Off:Failed.OUT")
#! Link("$(SubSys):Off:Failed.OUT","$(SubSys):Request:Status.VAL")
#! Record("$(SubSys):Local:String2",1900,4342,0,1,"$(SubSys):Local:String2")
#! Field("$(SubSys):Local:String2.OUT",16777215,1,"$(SubSys):Local:String2.OUT")
#! Field("$(SubSys):Local:String2.FLNK",16777215,1,"$(SubSys):Local:String2.FLNK")
#! Link("$(SubSys):Local:String2.FLNK","$(SubSys):Off:Failed")
#! Field("$(SubSys):Local:String2.PROC",16777215,0,"$(SubSys):Local:String2.PROC")
#! Record("$(SubSys):AlreadyOffCk:SO",1840,3776,0,1,"$(SubSys):AlreadyOffCk:SO")
#! Field("$(SubSys):AlreadyOffCk:SO.OUT",16777215,1,"$(SubSys):AlreadyOffCk:SO.OUT")
#! Field("$(SubSys):AlreadyOffCk:SO.PROC",16777215,0,"$(SubSys):AlreadyOffCk:SO.PROC")
#! Record("$(SubSys):AlreadyOffCk:Seq",1560,3891,0,0,"$(SubSys):AlreadyOffCk:Seq")
#! Field("$(SubSys):AlreadyOffCk:Seq.SELL",16777215,0,"$(SubSys):AlreadyOffCk:Seq.SELL")
#! Link("$(SubSys):AlreadyOffCk:Seq.SELL","$(SubSys):AlreadyOffCk.VAL")
#! Field("$(SubSys):AlreadyOffCk:Seq.LNK1",16777215,1,"$(SubSys):AlreadyOffCk:Seq.LNK1")
#! Link("$(SubSys):AlreadyOffCk:Seq.LNK1","$(SubSys):AlreadyOffCk:SO.PROC")
#! Field("$(SubSys):AlreadyOffCk:Seq.LNK2",16777215,1,"$(SubSys):AlreadyOffCk:Seq.LNK2")
#! Link("$(SubSys):AlreadyOffCk:Seq.LNK2","$(SubSys):Off:PSET0Check.PROC")
#! Field("$(SubSys):AlreadyOffCk:Seq.LNK3",16777215,1,"$(SubSys):AlreadyOffCk:Seq.LNK3")
#! Link("$(SubSys):AlreadyOffCk:Seq.LNK3","$(SubSys):Local:String2.PROC")
#! Record("$(SubSys):AlreadyOffCk",1300,3928,0,0,"$(SubSys):AlreadyOffCk")
#! Field("$(SubSys):AlreadyOffCk.FLNK",16777215,1,"$(SubSys):AlreadyOffCk.FLNK")
#! Link("$(SubSys):AlreadyOffCk.FLNK","$(SubSys):AlreadyOffCk:Seq")
#! Field("$(SubSys):AlreadyOffCk.INPA",16777215,1,"$(SubSys):AlreadyOffCk.INPA")
#! Field("$(SubSys):AlreadyOffCk.INPB",16777215,1,"$(SubSys):AlreadyOffCk.INPB")
#! Field("$(SubSys):AlreadyOffCk.VAL",16777215,0,"$(SubSys):AlreadyOffCk.VAL")
#! Record("$(SubSys):Off:Pulse:High",2360,3488,0,0,"$(SubSys):Off:Pulse:High")
#! Field("$(SubSys):Off:Pulse:High.OUT",16777215,1,"$(SubSys):Off:Pulse:High.OUT")
#! Record("$(SubSys):Off:Pulse:Low",2040,3448,0,1,"$(SubSys):Off:Pulse:Low")
#! Field("$(SubSys):Off:Pulse:Low.PROC",16777215,0,"$(SubSys):Off:Pulse:Low.PROC")
#! Field("$(SubSys):Off:Pulse:Low.OUT",16777215,1,"$(SubSys):Off:Pulse:Low.OUT")
#! Field("$(SubSys):Off:Pulse:Low.FLNK",16777215,1,"$(SubSys):Off:Pulse:Low.FLNK")
#! Link("$(SubSys):Off:Pulse:Low.FLNK","$(SubSys):Off:Pulse:High")
#! Record("$(SubSys):Condition:SD:Seq",1740,3468,0,0,"$(SubSys):Condition:SD:Seq")
#! Field("$(SubSys):Condition:SD:Seq.SELL",16777215,0,"$(SubSys):Condition:SD:Seq.SELL")
#! Link("$(SubSys):Condition:SD:Seq.SELL","$(SubSys):Zero:Check.VAL")
#! Field("$(SubSys):Condition:SD:Seq.LNK1",16777215,1,"$(SubSys):Condition:SD:Seq.LNK1")
#! Link("$(SubSys):Condition:SD:Seq.LNK1","$(SubSys):Off:Pulse:Low.PROC")
#! Record("$(SubSys):Zero:Check",1400,3460,0,0,"$(SubSys):Zero:Check")
#! Field("$(SubSys):Zero:Check.INPA",16777215,0,"$(SubSys):Zero:Check.INPA")
#! Link("$(SubSys):Zero:Check.INPA","$(SubSys):Request:Status.VAL")
#! Field("$(SubSys):Zero:Check.FLNK",16777215,1,"$(SubSys):Zero:Check.FLNK")
#! Link("$(SubSys):Zero:Check.FLNK","$(SubSys):Condition:SD:Seq")
#! Field("$(SubSys):Zero:Check.INPB",16777215,1,"$(SubSys):Zero:Check.INPB")
#! Field("$(SubSys):Zero:Check.VAL",16777215,1,"$(SubSys):Zero:Check.VAL")
#! Field("$(SubSys):Zero:Check.INPC",16777215,1,"$(SubSys):Zero:Check.INPC")
#! Link("$(SubSys):Zero:Check.INPC","$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Record("$(SubSys):OffRequest:SO",880,3942,0,0,"$(SubSys):OffRequest:SO")
#! Field("$(SubSys):OffRequest:SO.FLNK",16777215,1,"$(SubSys):OffRequest:SO.FLNK")
#! Link("$(SubSys):OffRequest:SO.FLNK","$(SubSys):AlreadyOffCk")
#! Field("$(SubSys):OffRequest:SO.OUT",16777215,1,"$(SubSys):OffRequest:SO.OUT")
#! Record("$(SubSys):OffRequest",460,3808,0,1,"$(SubSys):OffRequest")
#! Field("$(SubSys):OffRequest.OUT",16777215,1,"$(SubSys):OffRequest.OUT")
#! Link("$(SubSys):OffRequest.OUT","$(SubSys):Request:Status.VAL")
#! Field("$(SubSys):OffRequest.FLNK",16777215,1,"$(SubSys):OffRequest.FLNK")
#! Link("$(SubSys):OffRequest.FLNK","$(SubSys):OffRequest:SO")
#! Record("$(SubSys):On:FailedFO",4000,1516,0,1,"$(SubSys):On:FailedFO")
#! Field("$(SubSys):On:FailedFO.LNK1",16777215,0,"$(SubSys):On:FailedFO.LNK1")
#! Link("$(SubSys):On:FailedFO.LNK1","$(SubSys):On:Failed")
#! Field("$(SubSys):On:FailedFO.LNK3",16777215,0,"$(SubSys):On:FailedFO.LNK3")
#! Link("$(SubSys):On:FailedFO.LNK3","$(SubSys):Device:Interlock:Log")
#! Record("$(SubSys):Init:OnSignal2",1180,1174,0,1,"$(SubSys):Init:OnSignal2")
#! Field("$(SubSys):Init:OnSignal2.FLNK",16777215,1,"$(SubSys):Init:OnSignal2.FLNK")
#! Link("$(SubSys):Init:OnSignal2.FLNK","$(SubSys):Init:OffSignal2")
#! Field("$(SubSys):Init:OnSignal2.OUT",16777215,1,"$(SubSys):Init:OnSignal2.OUT")
#! Record("$(SubSys):Init:OffSignal2",1480,1188,0,0,"$(SubSys):Init:OffSignal2")
#! Field("$(SubSys):Init:OffSignal2.OUT",16777215,1,"$(SubSys):Init:OffSignal2.OUT")
#! Record("$(SubSys):Device:Interlock:Log",3040,588,0,1,"$(SubSys):Device:Interlock:Log")
#! Field("$(SubSys):Device:Interlock:Log.INPA",16777215,1,"$(SubSys):Device:Interlock:Log.INPA")
#! Field("$(SubSys):Device:Interlock:Log.INPB",16777215,1,"$(SubSys):Device:Interlock:Log.INPB")
#! Field("$(SubSys):Device:Interlock:Log.FLNK",16777215,1,"$(SubSys):Device:Interlock:Log.FLNK")
#! Link("$(SubSys):Device:Interlock:Log.FLNK","$(SubSys):Device:Interlock:LogSeq")
#! Field("$(SubSys):Device:Interlock:Log.VAL",16777215,1,"$(SubSys):Device:Interlock:Log.VAL")
#! Record("$(SubSys):Device:Interlock:LogSeq",3380,679,0,0,"$(SubSys):Device:Interlock:LogSeq")
#! Field("$(SubSys):Device:Interlock:LogSeq.LNK1",16777215,1,"$(SubSys):Device:Interlock:LogSeq.LNK1")
#! Link("$(SubSys):Device:Interlock:LogSeq.LNK1","$(SubSys):GroundFaultIntlk:String.PROC")
#! Field("$(SubSys):Device:Interlock:LogSeq.LNK2",16777215,1,"$(SubSys):Device:Interlock:LogSeq.LNK2")
#! Link("$(SubSys):Device:Interlock:LogSeq.LNK2","$(SubSys):Cooling:String.PROC")
#! Field("$(SubSys):Device:Interlock:LogSeq.SELL",16777215,0,"$(SubSys):Device:Interlock:LogSeq.SELL")
#! Link("$(SubSys):Device:Interlock:LogSeq.SELL","$(SubSys):Device:Interlock:Log.VAL")
#! Record("$(SubSys):GroundFaultIntlk:String",3720,616,0,1,"$(SubSys):GroundFaultIntlk:String")
#! Field("$(SubSys):GroundFaultIntlk:String.OUT",16777215,1,"$(SubSys):GroundFaultIntlk:String.OUT")
#! Field("$(SubSys):GroundFaultIntlk:String.PROC",16777215,0,"$(SubSys):GroundFaultIntlk:String.PROC")
#! Record("$(SubSys):Cooling:String",3720,776,0,1,"$(SubSys):Cooling:String")
#! Field("$(SubSys):Cooling:String.OUT",16777215,1,"$(SubSys):Cooling:String.OUT")
#! Field("$(SubSys):Cooling:String.PROC",16777215,0,"$(SubSys):Cooling:String.PROC")
#! Record("$(SubSys):OnRequest",600,1968,0,1,"$(SubSys):OnRequest")
#! Field("$(SubSys):OnRequest.FLNK",16777215,1,"$(SubSys):OnRequest.FLNK")
#! Link("$(SubSys):OnRequest.FLNK","$(SubSys):Init:OnSignal")
#! Field("$(SubSys):OnRequest.OUT",16777215,1,"$(SubSys):OnRequest.OUT")
#! Link("$(SubSys):OnRequest.OUT","$(SubSys):Request:Status.VAL")
#! Record("$(SubSys):Init:OnSignal",920,1908,0,0,"$(SubSys):Init:OnSignal")
#! Field("$(SubSys):Init:OnSignal.FLNK",16777215,1,"$(SubSys):Init:OnSignal.FLNK")
#! Link("$(SubSys):Init:OnSignal.FLNK","$(SubSys):Init:OffSignal")
#! Field("$(SubSys):Init:OnSignal.OUT",16777215,1,"$(SubSys):Init:OnSignal.OUT")
#! Record("$(SubSys):Init:OffSignal",1240,1908,0,0,"$(SubSys):Init:OffSignal")
#! Field("$(SubSys):Init:OffSignal.OUT",16777215,1,"$(SubSys):Init:OffSignal.OUT")
#! Field("$(SubSys):Init:OffSignal.FLNK",16777215,1,"$(SubSys):Init:OffSignal.FLNK")
#! Link("$(SubSys):Init:OffSignal.FLNK","$(SubSys):OnRequest:Abort:Shutdown")
#! Record("$(SubSys):Condition:ShuttingDown:Status",3300,4136,0,1,"$(SubSys):Condition:ShuttingDown:Status")
#! Field("$(SubSys):Condition:ShuttingDown:Status.VAL",16777215,1,"$(SubSys):Condition:ShuttingDown:Status.VAL")
#! Record("$(SubSys):CheckOffRequested:BeforeRestore",4280,3274,0,0,"$(SubSys):CheckOffRequested:BeforeRestore")
#! Field("$(SubSys):CheckOffRequested:BeforeRestore.OUT",16777215,1,"$(SubSys):CheckOffRequested:BeforeRestore.OUT")
#! Link("$(SubSys):CheckOffRequested:BeforeRestore.OUT","$(SubSys):Set:SD:Restore.PROC")
#! Field("$(SubSys):CheckOffRequested:BeforeRestore.INPA",16777215,0,"$(SubSys):CheckOffRequested:BeforeRestore.INPA")
#! Link("$(SubSys):CheckOffRequested:BeforeRestore.INPA","$(SubSys):Request:Status.VAL")
#! TextBox(TB4,1400,3980,1400,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB3,980,3980,1000,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB2,600,3660,1460,3760,0,"Dialog",28,1,16711731,"ISM Off Sequence",null)
#! TextBox(TB1,700,1760,1560,1860,0,"Dialog",28,1,16711731,"ISM On Sequence",null)
#! TextBox(TB0,3680,140,4540,240,0,"Dialog",28,1,16711731,"Log Device Interlock Preventing ISM from turning On",null)
#! TextBox(TB8,1180,1100,2040,1200,0,"Dialog",24,1,16711731,"Initialize ISM On and Off Modicon Coils",null)
#! TextBox(TB7,3320,2880,4180,2980,0,"Dialog",24,1,16711731,"Check for ISM Turning on, Begin Initialization when it comes on",null)
#! TextBox(TB6,3970,3997,4830,4097,0,"Dialog",24,1,16711731,"ShutDown Timeout",null)
#! TextBox(TB5,1560,3320,2420,3420,0,"Dialog",24,1,16711731,"Turn ISM Off if Shutting Down, Off Requested and not Failed,\nand Current < .5 A",null)
