#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


# Begins process two links.  FLNK starts checks required
# to eventually turn Main Coil On.  LNK2 will check to
# see if Main Coil is "Shutting Down" when On is requested.
# If it is, the "Off" sequence will be aborted and
# the Ouptput current PSET will be set to what it was before
# the "Shutdown" state was entered
record(fanout, "$(SubSys):Arc:OnRequest:Abort:Shutdown") {
  field(FLNK, "$(SubSys):Arc:OnRequest:SO")
  field(LNK2, "$(SubSys):Arc:OnReq:ShutDownAbort:Seq")
}

# Set Shutting Down Status to True
record(bo, "$(SubSys):Arc:Condition:ShuttingDown:SetTrue") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Arc:Condition:ShuttingDown:Status PP")
  field(FLNK, "$(SubSys):Arc:Off:Pulse:Low")
  field(OMSL, "supervisory")
}

# Processes when On is requested.  If Status is "Shutting Down"
# the shutdown sequence will be aborted
record(seq, "$(SubSys):Arc:OnReq:ShutDownAbort:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Arc:Condition:ShuttingDown:Status")
  field(LNK1, "$(SubSys):Arc:OnReq:ShutDownAbort:Fan.PROC")
}

record(stringout, "$(SubSys):Arc:OnReqi:ShutDownAbort:Log") {
  field(VAL, "Arc Shutdown Aborted by Req.")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Set Shutdown Status to False
record(bo, "$(SubSys):Arc:Condition:SDSetFalse") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Arc:Condition:ShuttingDown:Status PP")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
# when the IOC starts up
record(bo, "$(SubSys):Arc:Init:OnSignal2") {
  field(FLNK, "$(SubSys):Arc:Init:OffSignal2")
  field(VAL, "0")
  field(OUT, "$(SubSys):Arc:On:Write PP")
  field(OMSL, "supervisory")
  field(PINI, "YES")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
# when the IOC starts up
record(bo, "$(SubSys):Arc:Init:OffSignal2") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Arc:Off:Write PP")
  field(PINI, "YES")
  field(OMSL, "supervisory")
}

# Start of the MC On chain.  This is
# processed first when trying to turn
# on the main coil.
record(bo, "$(SubSys):Arc:OnRequest") {
  field(FLNK, "$(SubSys):Arc:Init:OnSignal")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Arc:Request:Status.VAL PP")
}

# Sets the On signal in the Modicon
# to zero in perparation for turn on
record(bo, "$(SubSys):Arc:Init:OnSignal") {
  field(FLNK, "$(SubSys):Arc:Init:OffSignal")
  field(VAL, "0")
  field(OUT, "$(SubSys):Arc:On:Write PP")
  field(OMSL, "supervisory")
}

# Sets the Off signal in the Modicon
# to one in perparation for turn on
record(bo, "$(SubSys):Arc:Init:OffSignal") {
  field(VAL, "1")
  field(OUT, "$(SubSys):Arc:Off:Write PP")
  field(OMSL, "supervisory")
  field(FLNK, "$(SubSys):Arc:OnRequest:Abort:Shutdown")
}

# Writes "EMC On Requested" to system log
record(stringout, "$(SubSys):Arc:OnRequest:SO") {
  field(FLNK, "$(SubSys):Arc:AlreadyOnCk")
  field(VAL, "Arc On requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if the PSHV is On or in Local
record(calc, "$(SubSys):Arc:AlreadyOnCk") {
  field(FLNK, "$(SubSys):Arc:AlreadyOnCk:Seq")
  field(CALC, "A+(!A)*2")
  field(INPA, "$(SubSys):Arc:On:Status")
}

# Continues with one of three processes:
# LNK 1 if EMC is already on
# LNK 2 if not on and not in local
# LNK 3 if in local
record(seq, "$(SubSys):Arc:AlreadyOnCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(SubSys):Arc:AlreadyOnCk.VAL")
  field(DLY1, ".5")
  field(LNK1, "$(SubSys):Arc:AlreadyOnCk:SO.PROC")
  field(LNK2, "$(SubSys):Arc:Reset:Then:IntlkChk.PROC")
  field(DLY3, ".5")
}

# Continue with On sequence after
# MC On and local checks have been made.
# 
# LNK 1 begins the Reset chain
# found in MagnetSystemReset.vdb
# which sends a reset for the Main
# Coil as well as all Circular coils.
# Reset is all that this link will do.
# 
# LNK2 Continues On Sequence by checking to see
# if all "Resetable" interlocks have been cleared
# after a delay of three seconds.
record(seq, "$(SubSys):Arc:Reset:Then:IntlkChk") {
  field(SELM, "All")
  field(LNK1, "$(SubSys):Arc:Reset:Pulse:High.PROC")
  field(DLY2, "2")
  field(LNK2, "$(SubSys):Arc:On:InterlockCk.PROC")
}

# Check to see if all "Resetable" interlocks
# have been cleared three seconds after the
# reset chain processing has begun
record(calc, "$(SubSys):Arc:On:InterlockCk") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Arc:On:Seq")
  field(CALC, "(!A)+1")
  field(INPA, "$(SubSys):Arc:Device:Interlock:Status")
}

# Write "EMC in Already On" to system
# log and link to process
# chain that aborts EMC On sequence
record(stringout, "$(SubSys):Arc:AlreadyOnCk:SO") {
  field(VAL, "Arc Already On")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sets the Status of the system to
# EMC Not On and Not requested to be On
# 
# This is internal book keeping for the IOC
record(bo, "$(SubSys):Arc:On:Failed") {
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Arc:Request:Status.VAL PP")
}

# Last branching before EMC is turned on
# LNK 1 sends error to log messages and
# aborts On sequence if device interlocks persist
# 
# LNK 2 will send on command to Modicon to
# turn on EMC
record(seq, "$(SubSys):Arc:On:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Arc:On:InterlockCk.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Arc:OnError:String.PROC")
  field(DOL2, "1")
  field(LNK2, "$(SubSys):Arc:On:Pulse:High.PROC")
}

# Set Modicon EMC On bit to 1 to turn on EMC
record(calcout, "$(SubSys):Arc:On:Pulse:High") {
  field(FLNK, "$(SubSys):Arc:On:Pulse:Low")
  field(OUT, "$(SubSys):Arc:On:Write.VAL")
  field(CALC, "1")
}

# Write "Device Interlock, Cannot turn EMC On" to system
# log and link to process
# chain that aborts EMC On sequence
record(stringout, "$(SubSys):Arc:OnError:String") {
  field(VAL, "Device Interlock, Cannot turn Arc on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):Arc:On:FailedFO")
}

# One second after EMC On bit has been set
# to 1 in the Modicon PLC, set the bit back to zero.
# Logic in the Modicon PLC is such that if the bit
# is not set back to zero, once the supply turns off
# it cannot be turned back on.
record(calcout, "$(SubSys):Arc:On:Pulse:Low") {
  field(OUT, "$(SubSys):Arc:On:Write.VAL")
  field(ODLY, "1")
  field(FLNK, "$(SubSys):Arc:On:Timeout")
}

# Process the PSMC On Timeout check after a delay of
# DL1 which is three seconds
record(seq, "$(SubSys):Arc:On:Timeout") {
  field(SELM, "All")
  field(LNK2, "$(SubSys):Arc:On:Timeout:Calc.PROC")
  field(DLY2, "3")
}

# PSMC On timeout check.  If after three seconds of
# being commanded on, the PSMC has not come on a timeout
# message will be logged and the On sequence will be
# aborted.
record(calcout, "$(SubSys):Arc:On:Timeout:Calc") {
  field(CALC, "A")
  field(INPA, "$(SubSys):Arc:On:Status")
  field(OUT, "$(SubSys):Arc:On:Timeout:SO.PROC")
  field(OOPT, "When Zero")
}

# Begins processing chain to determine which
# device interlock prevented EMC from turning
# on in order to write info to system log.
# 
# Done in two sets because there are so many
# possible device interlocks for EMC
# 
# LNK 1 sets the internal status to Off or
# not On Requested
# 
# LNK2 and LNK3 check which device interlock
# is active
record(fanout, "$(SubSys):Arc:On:FailedFO") {
  field(LNK1, "$(SubSys):Arc:On:Failed")
  field(LNK2, "$(SubSys):Arc:Device:Interlock:Log2")
}

# Write "MC Turn On Timeout" to system log
# and link to process
# chain that aborts MC On sequence
record(stringout, "$(SubSys):Arc:On:Timeout:SO") {
  field(FLNK, "$(SubSys):Arc:On:Failed")
  field(VAL, "$(SubSys):Arc Turn On Timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continously checks to see if PSHV has turned on or off
record(calcout, "$(SubSys):Arc:OnOff:Calc:SO") {
  field(SCAN, ".1 second")
  field(CALC, "A+1")
  field(INPA, "$(SubSys):Arc:On:Status")
  field(OUT, "$(SubSys):Arc:OnOff:SO:Seq.PROC")
  field(OOPT, "On Change")
}

# Drives processing chains depending if PSMC
# has turned On or Off
# 
# LNK1
# PSHV has turned on.  Write system message and
# begin initialization of PSMC
# 
# LNK2
# PSHV has turned Off.  Write system message and
# restore PSET to what it was before Off was
# requested.
record(seq, "$(SubSys):Arc:OnOff:SO:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Arc:OnOff:Calc:SO.VAL")
  field(LNK1, "$(SubSys):Arc:Off:String.PROC")
  field(LNK2, "$(SubSys):Arc:On:String:And:Init.PROC")
}

# Write MC turned On to message log and
# start processing PSMC Initialize sequence
# in MCInitialize.vdb
record(stringout, "$(SubSys):Arc:On:String:And:Init") {
  field(VAL, "Arc turned on")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):Init:String")
}

# Write MC turned Off system message and
# restore PSET to what it was before Off was
# requested.
record(stringout, "$(SubSys):Arc:Off:String") {
  field(VAL, "Arc turned off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
  field(FLNK, "$(SubSys):Arc:Condition:SDSetFalse")
}

# Writes MC Shutdown Timeout to system log
record(stringout, "$(SubSys):Arc:SD:Timeout:String") {
  field(FLNK, "$(SubSys):Arc:Off:Timeout:FO")
  field(VAL, "$(SubSys):Arc Off request timeout")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# When Shutdown timeout has been reached, this record
# will begin to process chain logging the
# timeout condition and setting Shutdown Status to false
record(seq, "$(SubSys):Arc:SD:Timeout:Seq") {
  field(SELM, "Specified")
  field(SELL, "$(SubSys):Arc:SD:Timeout:Calc.VAL")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Arc:SD:Timeout:String.PROC")
}

# PSMC shutdown timer.  PSMC has 360 seconds to shutdown
# before timeout condition is reached
record(calc, "$(SubSys):Arc:SD:Timeout:Calc") {
  field(SCAN, "1 second")
  field(FLNK, "$(SubSys):Arc:SD:Timeout:Seq")
  field(CALC, "A>5")
  field(INPA, "$(SubSys):Arc:SDTimeout:timer.VAL")
}

# Starts Timeout timer once PSMC Shutdown Status is true
record(calc, "$(SubSys):Arc:SDTimeout:timer") {
  field(SCAN, "1 second")
  field(CALC, "(A+1)*B")
  field(INPA, "$(SubSys):Arc:SDTimeout:timer.VAL")
  field(INPB, "$(SubSys):Arc:Condition:ShuttingDown:Status")
}

# Sets internal state to not Off or not Requested Off
record(bo, "$(SubSys):Arc:Off:Failed") {
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Arc:Request:Status.VAL PP")
}

# Writes "Already Off" to system log
record(stringout, "$(SubSys):Arc:AlreadyOffCk:SO") {
  field(VAL, "$(SubSys):Arc Already Off")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Continues with one of three processes:
# LNK 1 if PSMC is already off
# LNK 2 if not off and not in local
# LNK 3 if in local
record(seq, "$(SubSys):Arc:AlreadyOffCk:Seq") {
  field(SELM, "Mask")
  field(SELL, "$(SubSys):Arc:AlreadyOffCk.VAL")
  field(DLY1, ".5")
  field(DOL1, "1")
  field(LNK1, "$(SubSys):Arc:AlreadyOffCk:SO.PROC")
  field(DLY2, ".5")
  field(LNK2, "$(SubSys):Arc:Condition:ShuttingDown:SetTrue.PROC")
  field(DOL2, "1")
  field(DLY3, ".5")
  field(DOL3, "1")
}

# Checks to see if the PSHV is Off or in Local
record(calc, "$(SubSys):Arc:AlreadyOffCk") {
  field(FLNK, "$(SubSys):Arc:AlreadyOffCk:Seq")
  field(CALC, "!A+(A)*2")
  field(INPA, "$(SubSys):Arc:On:Status")
}

# Writes "Off Requested" to system log
record(stringout, "$(SubSys):Arc:OffRequest:SO") {
  field(FLNK, "$(SubSys):Arc:AlreadyOffCk")
  field(VAL, "Arc Off requested")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Start of the MC Off chain.  This is
# processed first when trying to turn
# off the main coil.
record(bo, "$(SubSys):Arc:OffRequest") {
  field(FLNK, "$(SubSys):Arc:OffRequest:SO")
  field(VAL, "0")
  field(OMSL, "supervisory")
  field(OUT, "$(SubSys):Arc:Request:Status.VAL PP")
}

# Issue command to Modicon to Set PSMC Off bit to zero,
# turning off PSMC
record(calcout, "$(SubSys):Arc:Off:Pulse:Low") {
  field(FLNK, "$(SubSys):Arc:Off:Pulse:High")
  field(OUT, "$(SubSys):Arc:Off:Write PP")
}

# One second after issuing command to Modicon to Set
# PSMC Off bit to zero, set Off bit back to one so
# that the PSMC may be turned on in the future
record(calcout, "$(SubSys):Arc:Off:Pulse:High") {
  field(OUT, "$(SubSys):Arc:Off:Write PP")
  field(ODLY, "1")
  field(CALC, "1")
}

# Value in this record holds the value of
# the state of the system.  It is 1 if
# On has been requested and On has not
# failed, and 0 if Off has been
# requested and off has not failed
# 
# This State is just for internal book keeping
# for the IOC and not apparant to operators
record(bo, "$(SubSys):Arc:Request:Status") {
}

# Sets Shutdown Status to False
# 
# Sets internal state to Not Off or Not requested Off
record(fanout, "$(SubSys):Arc:Off:Timeout:FO") {
  field(FLNK, "$(SubSys):Arc:Condition:SDSetFalse")
  field(LNK1, "$(SubSys):Arc:Off:Failed")
}

record(fanout, "$(SubSys):Arc:OnReq:ShutDownAbort:Fan") {
  field(LNK1, "$(SubSys):Arc:OnReqi:ShutDownAbort:Log")
  field(LNK2, "$(SubSys):Arc:Condition:SDSetFalse")
}

# Sends External Interlock message to system log
record(stringout, "$(SubSys):Arc:UpperFlow:String") {
  field(VAL, "Arc Interlock, Upper Flow")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Cooling message to system log
record(stringout, "$(SubSys):Arc:LowerFlow:String") {
  field(VAL, "Arc Interlock, Lower Flow")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Power Failure message to system log
record(stringout, "$(SubSys):Arc:UpperCathodePos:String") {
  field(VAL, "Arc Intlk, Upper Cathode Pos")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Sends Overload message to system log
record(stringout, "$(SubSys):Arc:LowewCathode:String") {
  field(VAL, "Arc Intlk, Lower Cathode Pos")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(stringout, "$(SubSys):Arc:ResistorBoxPos:String") {
  field(VAL, "Arc Intlk, Resistor Cover")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

record(stringout, "$(SubSys):Arc:TherapyELoop:String") {
  field(VAL, "Arc Intlk, Therapy Eme Loop")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Process appropriate log message records
# according to which device interlocks
# are active.
# 
# .2 sec between links to avoid message storms to
# the system log.
record(seq, "$(SubSys):Arc:Device:Interlock:LogSeq2") {
  field(SELM, "Mask")
  field(DLY1, ".2")
  field(LNK1, "$(SubSys):Arc:UpperFlow:String.PROC")
  field(DLY2, ".2")
  field(LNK2, "$(SubSys):Arc:LowerFlow:String.PROC")
  field(DLY3, ".2")
  field(LNK3, "$(SubSys):Arc:UpperCathodePos:String.PROC")
  field(DLY4, ".2")
  field(LNK4, "$(SubSys):Arc:LowewCathode:String.PROC")
  field(SELN, "")
  field(SELL, "$(SubSys):Arc:Device:Interlock:Log2.VAL")
  field(LNK5, "$(SubSys):Arc:ResistorBoxPos:String.VAL")
  field(LNK6, "$(SubSys):Arc:TherapyELoop:String.VAL")
}

# Monitors Device interlock status and calculates which interlocks are active
record(calcout, "$(SubSys):Arc:Device:Interlock:Log2") {
  field(CALC, "A+2*B+4*C+8*D+16*E+32*F")
  field(INPA, "$(SubSys):Arc:UpSourceFlowNotOK:Status")
  field(INPB, "$(SubSys):Arc:LowSourceFlowNotOK:Status")
  field(INPC, "$(SubSys):Arc:UpCathodeNotInPos:Status")
  field(INPD, "$(SubSys):Arc:LowCathodeNotInPos:Status")
  field(OUT, "$(SubSys):Arc:Device:Interlock:LogSeq2.PROC")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
  field(INPE, "Source:Arc:ResBoxCoverNotInPos:Status")
  field(INPF, "Source:Arc:EmergencyLoopNotOK:Status")
}

#! Further lines contain data used by VisualDCT
#! View(4295,4788,2.1)
#! Record("$(SubSys):Arc:OnRequest:Abort:Shutdown",1560,1955,0,0,"$(SubSys):Arc:OnRequest:Abort:Shutdown")
#! Field("$(SubSys):Arc:OnRequest:Abort:Shutdown.FLNK",16777215,1,"$(SubSys):Arc:OnRequest:Abort:Shutdown.FLNK")
#! Link("$(SubSys):Arc:OnRequest:Abort:Shutdown.FLNK","$(SubSys):Arc:OnRequest:SO")
#! Field("$(SubSys):Arc:OnRequest:Abort:Shutdown.LNK2",16777215,1,"$(SubSys):Arc:OnRequest:Abort:Shutdown.LNK2")
#! Link("$(SubSys):Arc:OnRequest:Abort:Shutdown.LNK2","$(SubSys):Arc:OnReq:ShutDownAbort:Seq")
#! Record("$(SubSys):Arc:Condition:ShuttingDown:SetTrue",2300,4027,0,0,"$(SubSys):Arc:Condition:ShuttingDown:SetTrue")
#! Field("$(SubSys):Arc:Condition:ShuttingDown:SetTrue.OUT",16777215,1,"$(SubSys):Arc:Condition:ShuttingDown:SetTrue.OUT")
#! Field("$(SubSys):Arc:Condition:ShuttingDown:SetTrue.FLNK",16777215,1,"$(SubSys):Arc:Condition:ShuttingDown:SetTrue.FLNK")
#! Link("$(SubSys):Arc:Condition:ShuttingDown:SetTrue.FLNK","$(SubSys):Arc:Off:Pulse:Low")
#! Field("$(SubSys):Arc:Condition:ShuttingDown:SetTrue.PROC",16777215,0,"$(SubSys):Arc:Condition:ShuttingDown:SetTrue.PROC")
#! Record("$(SubSys):Arc:OnReq:ShutDownAbort:Seq",1720,2381,0,1,"$(SubSys):Arc:OnReq:ShutDownAbort:Seq")
#! Field("$(SubSys):Arc:OnReq:ShutDownAbort:Seq.SELL",16777215,1,"$(SubSys):Arc:OnReq:ShutDownAbort:Seq.SELL")
#! Field("$(SubSys):Arc:OnReq:ShutDownAbort:Seq.LNK1",16777215,1,"$(SubSys):Arc:OnReq:ShutDownAbort:Seq.LNK1")
#! Link("$(SubSys):Arc:OnReq:ShutDownAbort:Seq.LNK1","$(SubSys):Arc:OnReq:ShutDownAbort:Fan.PROC")
#! Record("$(SubSys):Arc:OnReqi:ShutDownAbort:Log",2300,2375,0,0,"$(SubSys):Arc:OnReqi:ShutDownAbort:Log")
#! Field("$(SubSys):Arc:OnReqi:ShutDownAbort:Log.OUT",16777215,1,"$(SubSys):Arc:OnReqi:ShutDownAbort:Log.OUT")
#! Record("$(SubSys):Arc:Condition:SDSetFalse",4740,3841,0,1,"$(SubSys):Arc:Condition:SDSetFalse")
#! Field("$(SubSys):Arc:Condition:SDSetFalse.OUT",16777215,1,"$(SubSys):Arc:Condition:SDSetFalse.OUT")
#! Record("$(SubSys):Arc:Init:OnSignal2",1180,1173,0,1,"$(SubSys):Arc:Init:OnSignal2")
#! Field("$(SubSys):Arc:Init:OnSignal2.FLNK",16777215,1,"$(SubSys):Arc:Init:OnSignal2.FLNK")
#! Link("$(SubSys):Arc:Init:OnSignal2.FLNK","$(SubSys):Arc:Init:OffSignal2")
#! Field("$(SubSys):Arc:Init:OnSignal2.OUT",16777215,1,"$(SubSys):Arc:Init:OnSignal2.OUT")
#! Record("$(SubSys):Arc:Init:OffSignal2",1480,1187,0,0,"$(SubSys):Arc:Init:OffSignal2")
#! Field("$(SubSys):Arc:Init:OffSignal2.OUT",16777215,1,"$(SubSys):Arc:Init:OffSignal2.OUT")
#! Record("$(SubSys):Arc:OnRequest",600,1967,0,1,"$(SubSys):Arc:OnRequest")
#! Field("$(SubSys):Arc:OnRequest.FLNK",16777215,1,"$(SubSys):Arc:OnRequest.FLNK")
#! Link("$(SubSys):Arc:OnRequest.FLNK","$(SubSys):Arc:Init:OnSignal")
#! Field("$(SubSys):Arc:OnRequest.OUT",16777215,1,"$(SubSys):Arc:OnRequest.OUT")
#! Link("$(SubSys):Arc:OnRequest.OUT","$(SubSys):Arc:Request:Status.VAL")
#! Record("$(SubSys):Arc:Init:OnSignal",920,1907,0,0,"$(SubSys):Arc:Init:OnSignal")
#! Field("$(SubSys):Arc:Init:OnSignal.FLNK",16777215,1,"$(SubSys):Arc:Init:OnSignal.FLNK")
#! Link("$(SubSys):Arc:Init:OnSignal.FLNK","$(SubSys):Arc:Init:OffSignal")
#! Field("$(SubSys):Arc:Init:OnSignal.OUT",16777215,1,"$(SubSys):Arc:Init:OnSignal.OUT")
#! Record("$(SubSys):Arc:Init:OffSignal",1240,1907,0,0,"$(SubSys):Arc:Init:OffSignal")
#! Field("$(SubSys):Arc:Init:OffSignal.OUT",16777215,1,"$(SubSys):Arc:Init:OffSignal.OUT")
#! Field("$(SubSys):Arc:Init:OffSignal.FLNK",16777215,1,"$(SubSys):Arc:Init:OffSignal.FLNK")
#! Link("$(SubSys):Arc:Init:OffSignal.FLNK","$(SubSys):Arc:OnRequest:Abort:Shutdown")
#! Record("$(SubSys):Arc:OnRequest:SO",1960,1921,0,0,"$(SubSys):Arc:OnRequest:SO")
#! Field("$(SubSys):Arc:OnRequest:SO.OUT",16777215,1,"$(SubSys):Arc:OnRequest:SO.OUT")
#! Field("$(SubSys):Arc:OnRequest:SO.FLNK",16777215,1,"$(SubSys):Arc:OnRequest:SO.FLNK")
#! Link("$(SubSys):Arc:OnRequest:SO.FLNK","$(SubSys):Arc:AlreadyOnCk")
#! Record("$(SubSys):Arc:AlreadyOnCk",2280,1921,0,0,"$(SubSys):Arc:AlreadyOnCk")
#! Field("$(SubSys):Arc:AlreadyOnCk.FLNK",16777215,1,"$(SubSys):Arc:AlreadyOnCk.FLNK")
#! Link("$(SubSys):Arc:AlreadyOnCk.FLNK","$(SubSys):Arc:AlreadyOnCk:Seq")
#! Field("$(SubSys):Arc:AlreadyOnCk.VAL",16777215,1,"$(SubSys):Arc:AlreadyOnCk.VAL")
#! Field("$(SubSys):Arc:AlreadyOnCk.INPA",16777215,1,"$(SubSys):Arc:AlreadyOnCk.INPA")
#! Record("$(SubSys):Arc:AlreadyOnCk:Seq",2580,1900,0,0,"$(SubSys):Arc:AlreadyOnCk:Seq")
#! Field("$(SubSys):Arc:AlreadyOnCk:Seq.SELL",16777215,0,"$(SubSys):Arc:AlreadyOnCk:Seq.SELL")
#! Link("$(SubSys):Arc:AlreadyOnCk:Seq.SELL","$(SubSys):Arc:AlreadyOnCk.VAL")
#! Field("$(SubSys):Arc:AlreadyOnCk:Seq.LNK1",16777215,1,"$(SubSys):Arc:AlreadyOnCk:Seq.LNK1")
#! Link("$(SubSys):Arc:AlreadyOnCk:Seq.LNK1","$(SubSys):Arc:AlreadyOnCk:SO.PROC")
#! Field("$(SubSys):Arc:AlreadyOnCk:Seq.LNK2",16777215,1,"$(SubSys):Arc:AlreadyOnCk:Seq.LNK2")
#! Link("$(SubSys):Arc:AlreadyOnCk:Seq.LNK2","$(SubSys):Arc:Reset:Then:IntlkChk.PROC")
#! Record("$(SubSys):Arc:Reset:Then:IntlkChk",2920,2107,0,1,"$(SubSys):Arc:Reset:Then:IntlkChk")
#! Field("$(SubSys):Arc:Reset:Then:IntlkChk.LNK1",16777215,1,"$(SubSys):Arc:Reset:Then:IntlkChk.LNK1")
#! Field("$(SubSys):Arc:Reset:Then:IntlkChk.LNK2",16777215,1,"$(SubSys):Arc:Reset:Then:IntlkChk.LNK2")
#! Link("$(SubSys):Arc:Reset:Then:IntlkChk.LNK2","$(SubSys):Arc:On:InterlockCk.PROC")
#! Field("$(SubSys):Arc:Reset:Then:IntlkChk.PROC",16777215,0,"$(SubSys):Arc:Reset:Then:IntlkChk.PROC")
#! Record("$(SubSys):Arc:On:InterlockCk",3180,2047,0,1,"$(SubSys):Arc:On:InterlockCk")
#! Field("$(SubSys):Arc:On:InterlockCk.PROC",16777215,1,"$(SubSys):Arc:On:InterlockCk.PROC")
#! Field("$(SubSys):Arc:On:InterlockCk.FLNK",16777215,1,"$(SubSys):Arc:On:InterlockCk.FLNK")
#! Link("$(SubSys):Arc:On:InterlockCk.FLNK","$(SubSys):Arc:On:Seq")
#! Field("$(SubSys):Arc:On:InterlockCk.VAL",16777215,1,"$(SubSys):Arc:On:InterlockCk.VAL")
#! Field("$(SubSys):Arc:On:InterlockCk.INPA",16777215,1,"$(SubSys):Arc:On:InterlockCk.INPA")
#! Record("$(SubSys):Arc:AlreadyOnCk:SO",3020,1895,0,1,"$(SubSys):Arc:AlreadyOnCk:SO")
#! Field("$(SubSys):Arc:AlreadyOnCk:SO.OUT",16777215,1,"$(SubSys):Arc:AlreadyOnCk:SO.OUT")
#! Field("$(SubSys):Arc:AlreadyOnCk:SO.PROC",16777215,0,"$(SubSys):Arc:AlreadyOnCk:SO.PROC")
#! Record("$(SubSys):Arc:On:Failed",2700,1541,0,1,"$(SubSys):Arc:On:Failed")
#! Field("$(SubSys):Arc:On:Failed.OUT",16777215,0,"$(SubSys):Arc:On:Failed.OUT")
#! Link("$(SubSys):Arc:On:Failed.OUT","$(SubSys):Arc:Request:Status.VAL")
#! Record("$(SubSys):Arc:On:Seq",3460,2080,0,0,"$(SubSys):Arc:On:Seq")
#! Field("$(SubSys):Arc:On:Seq.LNK1",16777215,1,"$(SubSys):Arc:On:Seq.LNK1")
#! Link("$(SubSys):Arc:On:Seq.LNK1","$(SubSys):Arc:OnError:String.PROC")
#! Field("$(SubSys):Arc:On:Seq.LNK2",16777215,1,"$(SubSys):Arc:On:Seq.LNK2")
#! Link("$(SubSys):Arc:On:Seq.LNK2","$(SubSys):Arc:On:Pulse:High.PROC")
#! Field("$(SubSys):Arc:On:Seq.SELL",16777215,0,"$(SubSys):Arc:On:Seq.SELL")
#! Link("$(SubSys):Arc:On:Seq.SELL","$(SubSys):Arc:On:InterlockCk.VAL")
#! Record("$(SubSys):Arc:On:Pulse:High",3740,2281,0,0,"$(SubSys):Arc:On:Pulse:High")
#! Field("$(SubSys):Arc:On:Pulse:High.OUT",16777215,1,"$(SubSys):Arc:On:Pulse:High.OUT")
#! Field("$(SubSys):Arc:On:Pulse:High.FLNK",16777215,1,"$(SubSys):Arc:On:Pulse:High.FLNK")
#! Link("$(SubSys):Arc:On:Pulse:High.FLNK","$(SubSys):Arc:On:Pulse:Low")
#! Field("$(SubSys):Arc:On:Pulse:High.PROC",16777215,0,"$(SubSys):Arc:On:Pulse:High.PROC")
#! Record("$(SubSys):Arc:OnError:String",3920,2061,0,1,"$(SubSys):Arc:OnError:String")
#! Field("$(SubSys):Arc:OnError:String.PROC",16777215,0,"$(SubSys):Arc:OnError:String.PROC")
#! Field("$(SubSys):Arc:OnError:String.OUT",16777215,1,"$(SubSys):Arc:OnError:String.OUT")
#! Field("$(SubSys):Arc:OnError:String.FLNK",16777215,1,"$(SubSys):Arc:OnError:String.FLNK")
#! Link("$(SubSys):Arc:OnError:String.FLNK","$(SubSys):Arc:On:FailedFO")
#! Record("$(SubSys):Arc:On:Pulse:Low",4000,2281,0,0,"$(SubSys):Arc:On:Pulse:Low")
#! Field("$(SubSys):Arc:On:Pulse:Low.OUT",16777215,1,"$(SubSys):Arc:On:Pulse:Low.OUT")
#! Field("$(SubSys):Arc:On:Pulse:Low.FLNK",16777215,1,"$(SubSys):Arc:On:Pulse:Low.FLNK")
#! Link("$(SubSys):Arc:On:Pulse:Low.FLNK","$(SubSys):Arc:On:Timeout")
#! Record("$(SubSys):Arc:On:Timeout",4260,2341,0,0,"$(SubSys):Arc:On:Timeout")
#! Field("$(SubSys):Arc:On:Timeout.LNK2",16777215,1,"$(SubSys):Arc:On:Timeout.LNK2")
#! Link("$(SubSys):Arc:On:Timeout.LNK2","$(SubSys):Arc:On:Timeout:Calc.PROC")
#! Record("$(SubSys):Arc:On:Timeout:Calc",4560,2287,0,1,"$(SubSys):Arc:On:Timeout:Calc")
#! Field("$(SubSys):Arc:On:Timeout:Calc.PROC",16777215,0,"$(SubSys):Arc:On:Timeout:Calc.PROC")
#! Field("$(SubSys):Arc:On:Timeout:Calc.INPA",16777215,1,"$(SubSys):Arc:On:Timeout:Calc.INPA")
#! Field("$(SubSys):Arc:On:Timeout:Calc.OUT",16777215,1,"$(SubSys):Arc:On:Timeout:Calc.OUT")
#! Link("$(SubSys):Arc:On:Timeout:Calc.OUT","$(SubSys):Arc:On:Timeout:SO.PROC")
#! Record("$(SubSys):Arc:On:FailedFO",4140,1535,0,1,"$(SubSys):Arc:On:FailedFO")
#! Field("$(SubSys):Arc:On:FailedFO.LNK1",16777215,0,"$(SubSys):Arc:On:FailedFO.LNK1")
#! Link("$(SubSys):Arc:On:FailedFO.LNK1","$(SubSys):Arc:On:Failed")
#! Field("$(SubSys):Arc:On:FailedFO.LNK2",16777215,0,"$(SubSys):Arc:On:FailedFO.LNK2")
#! Link("$(SubSys):Arc:On:FailedFO.LNK2","$(SubSys):Arc:Device:Interlock:Log2")
#! Record("$(SubSys):Arc:On:Timeout:SO",4840,2381,0,1,"$(SubSys):Arc:On:Timeout:SO")
#! Field("$(SubSys):Arc:On:Timeout:SO.PROC",16777215,0,"$(SubSys):Arc:On:Timeout:SO.PROC")
#! Field("$(SubSys):Arc:On:Timeout:SO.OUT",16777215,1,"$(SubSys):Arc:On:Timeout:SO.OUT")
#! Field("$(SubSys):Arc:On:Timeout:SO.FLNK",16777215,0,"$(SubSys):Arc:On:Timeout:SO.FLNK")
#! Link("$(SubSys):Arc:On:Timeout:SO.FLNK","$(SubSys):Arc:On:Failed")
#! Record("$(SubSys):Arc:OnOff:Calc:SO",3300,3053,0,1,"$(SubSys):Arc:OnOff:Calc:SO")
#! Field("$(SubSys):Arc:OnOff:Calc:SO.VAL",16777215,1,"$(SubSys):Arc:OnOff:Calc:SO.VAL")
#! Field("$(SubSys):Arc:OnOff:Calc:SO.INPA",16777215,1,"$(SubSys):Arc:OnOff:Calc:SO.INPA")
#! Field("$(SubSys):Arc:OnOff:Calc:SO.OUT",16777215,1,"$(SubSys):Arc:OnOff:Calc:SO.OUT")
#! Link("$(SubSys):Arc:OnOff:Calc:SO.OUT","$(SubSys):Arc:OnOff:SO:Seq.PROC")
#! Record("$(SubSys):Arc:OnOff:SO:Seq",3600,3067,0,1,"$(SubSys):Arc:OnOff:SO:Seq")
#! Field("$(SubSys):Arc:OnOff:SO:Seq.LNK2",16777215,1,"$(SubSys):Arc:OnOff:SO:Seq.LNK2")
#! Link("$(SubSys):Arc:OnOff:SO:Seq.LNK2","$(SubSys):Arc:On:String:And:Init.PROC")
#! Field("$(SubSys):Arc:OnOff:SO:Seq.LNK1",16777215,1,"$(SubSys):Arc:OnOff:SO:Seq.LNK1")
#! Link("$(SubSys):Arc:OnOff:SO:Seq.LNK1","$(SubSys):Arc:Off:String.PROC")
#! Field("$(SubSys):Arc:OnOff:SO:Seq.SELL",16777215,0,"$(SubSys):Arc:OnOff:SO:Seq.SELL")
#! Link("$(SubSys):Arc:OnOff:SO:Seq.SELL","$(SubSys):Arc:OnOff:Calc:SO.VAL")
#! Field("$(SubSys):Arc:OnOff:SO:Seq.PROC",16777215,0,"$(SubSys):Arc:OnOff:SO:Seq.PROC")
#! Record("$(SubSys):Arc:On:String:And:Init",3960,3001,0,1,"$(SubSys):Arc:On:String:And:Init")
#! Field("$(SubSys):Arc:On:String:And:Init.OUT",16777215,1,"$(SubSys):Arc:On:String:And:Init.OUT")
#! Field("$(SubSys):Arc:On:String:And:Init.PROC",16777215,0,"$(SubSys):Arc:On:String:And:Init.PROC")
#! Field("$(SubSys):Arc:On:String:And:Init.FLNK",16777215,1,"$(SubSys):Arc:On:String:And:Init.FLNK")
#! Record("$(SubSys):Arc:Off:String",3960,3181,0,1,"$(SubSys):Arc:Off:String")
#! Field("$(SubSys):Arc:Off:String.OUT",16777215,1,"$(SubSys):Arc:Off:String.OUT")
#! Field("$(SubSys):Arc:Off:String.PROC",16777215,0,"$(SubSys):Arc:Off:String.PROC")
#! Field("$(SubSys):Arc:Off:String.FLNK",16777215,1,"$(SubSys):Arc:Off:String.FLNK")
#! Link("$(SubSys):Arc:Off:String.FLNK","$(SubSys):Arc:Condition:SDSetFalse")
#! Record("$(SubSys):Arc:SD:Timeout:String",4400,4101,0,0,"$(SubSys):Arc:SD:Timeout:String")
#! Field("$(SubSys):Arc:SD:Timeout:String.FLNK",16777215,1,"$(SubSys):Arc:SD:Timeout:String.FLNK")
#! Link("$(SubSys):Arc:SD:Timeout:String.FLNK","$(SubSys):Arc:Off:Timeout:FO")
#! Field("$(SubSys):Arc:SD:Timeout:String.OUT",16777215,1,"$(SubSys):Arc:SD:Timeout:String.OUT")
#! Field("$(SubSys):Arc:SD:Timeout:String.PROC",16777215,1,"$(SubSys):Arc:SD:Timeout:String.PROC")
#! Record("$(SubSys):Arc:SD:Timeout:Seq",4140,4107,0,0,"$(SubSys):Arc:SD:Timeout:Seq")
#! Field("$(SubSys):Arc:SD:Timeout:Seq.SELL",16777215,0,"$(SubSys):Arc:SD:Timeout:Seq.SELL")
#! Link("$(SubSys):Arc:SD:Timeout:Seq.SELL","$(SubSys):Arc:SD:Timeout:Calc.VAL")
#! Field("$(SubSys):Arc:SD:Timeout:Seq.LNK1",16777215,1,"$(SubSys):Arc:SD:Timeout:Seq.LNK1")
#! Link("$(SubSys):Arc:SD:Timeout:Seq.LNK1","$(SubSys):Arc:SD:Timeout:String.PROC")
#! Record("$(SubSys):Arc:SD:Timeout:Calc",3880,4067,0,1,"$(SubSys):Arc:SD:Timeout:Calc")
#! Field("$(SubSys):Arc:SD:Timeout:Calc.FLNK",16777215,1,"$(SubSys):Arc:SD:Timeout:Calc.FLNK")
#! Link("$(SubSys):Arc:SD:Timeout:Calc.FLNK","$(SubSys):Arc:SD:Timeout:Seq")
#! Field("$(SubSys):Arc:SD:Timeout:Calc.INPA",16777215,0,"$(SubSys):Arc:SD:Timeout:Calc.INPA")
#! Link("$(SubSys):Arc:SD:Timeout:Calc.INPA","$(SubSys):Arc:SDTimeout:timer.VAL")
#! Field("$(SubSys):Arc:SD:Timeout:Calc.VAL",16777215,0,"$(SubSys):Arc:SD:Timeout:Calc.VAL")
#! Record("$(SubSys):Arc:SDTimeout:timer",3620,4087,0,1,"$(SubSys):Arc:SDTimeout:timer")
#! Field("$(SubSys):Arc:SDTimeout:timer.VAL",16777215,0,"$(SubSys):Arc:SDTimeout:timer.VAL")
#! Field("$(SubSys):Arc:SDTimeout:timer.INPA",16777215,0,"$(SubSys):Arc:SDTimeout:timer.INPA")
#! Link("$(SubSys):Arc:SDTimeout:timer.INPA","$(SubSys):Arc:SDTimeout:timer.VAL")
#! Field("$(SubSys):Arc:SDTimeout:timer.INPB",16777215,1,"$(SubSys):Arc:SDTimeout:timer.INPB")
#! Record("$(SubSys):Arc:Off:Failed",2280,4541,0,1,"$(SubSys):Arc:Off:Failed")
#! Field("$(SubSys):Arc:Off:Failed.OUT",16777215,0,"$(SubSys):Arc:Off:Failed.OUT")
#! Link("$(SubSys):Arc:Off:Failed.OUT","$(SubSys):Arc:Request:Status.VAL")
#! Record("$(SubSys):Arc:AlreadyOffCk:SO",1840,3775,0,1,"$(SubSys):Arc:AlreadyOffCk:SO")
#! Field("$(SubSys):Arc:AlreadyOffCk:SO.OUT",16777215,1,"$(SubSys):Arc:AlreadyOffCk:SO.OUT")
#! Field("$(SubSys):Arc:AlreadyOffCk:SO.PROC",16777215,0,"$(SubSys):Arc:AlreadyOffCk:SO.PROC")
#! Record("$(SubSys):Arc:AlreadyOffCk:Seq",1560,3904,0,0,"$(SubSys):Arc:AlreadyOffCk:Seq")
#! Field("$(SubSys):Arc:AlreadyOffCk:Seq.SELL",16777215,0,"$(SubSys):Arc:AlreadyOffCk:Seq.SELL")
#! Link("$(SubSys):Arc:AlreadyOffCk:Seq.SELL","$(SubSys):Arc:AlreadyOffCk.VAL")
#! Field("$(SubSys):Arc:AlreadyOffCk:Seq.LNK1",16777215,1,"$(SubSys):Arc:AlreadyOffCk:Seq.LNK1")
#! Link("$(SubSys):Arc:AlreadyOffCk:Seq.LNK1","$(SubSys):Arc:AlreadyOffCk:SO.PROC")
#! Field("$(SubSys):Arc:AlreadyOffCk:Seq.LNK2",16777215,1,"$(SubSys):Arc:AlreadyOffCk:Seq.LNK2")
#! Link("$(SubSys):Arc:AlreadyOffCk:Seq.LNK2","$(SubSys):Arc:Condition:ShuttingDown:SetTrue.PROC")
#! Record("$(SubSys):Arc:AlreadyOffCk",1300,3941,0,0,"$(SubSys):Arc:AlreadyOffCk")
#! Field("$(SubSys):Arc:AlreadyOffCk.FLNK",16777215,1,"$(SubSys):Arc:AlreadyOffCk.FLNK")
#! Link("$(SubSys):Arc:AlreadyOffCk.FLNK","$(SubSys):Arc:AlreadyOffCk:Seq")
#! Field("$(SubSys):Arc:AlreadyOffCk.INPA",16777215,1,"$(SubSys):Arc:AlreadyOffCk.INPA")
#! Field("$(SubSys):Arc:AlreadyOffCk.VAL",16777215,0,"$(SubSys):Arc:AlreadyOffCk.VAL")
#! Record("$(SubSys):Arc:OffRequest:SO",880,3941,0,0,"$(SubSys):Arc:OffRequest:SO")
#! Field("$(SubSys):Arc:OffRequest:SO.FLNK",16777215,1,"$(SubSys):Arc:OffRequest:SO.FLNK")
#! Link("$(SubSys):Arc:OffRequest:SO.FLNK","$(SubSys):Arc:AlreadyOffCk")
#! Field("$(SubSys):Arc:OffRequest:SO.OUT",16777215,1,"$(SubSys):Arc:OffRequest:SO.OUT")
#! Record("$(SubSys):Arc:OffRequest",460,3807,0,1,"$(SubSys):Arc:OffRequest")
#! Field("$(SubSys):Arc:OffRequest.OUT",16777215,1,"$(SubSys):Arc:OffRequest.OUT")
#! Link("$(SubSys):Arc:OffRequest.OUT","$(SubSys):Arc:Request:Status.VAL")
#! Field("$(SubSys):Arc:OffRequest.FLNK",16777215,1,"$(SubSys):Arc:OffRequest.FLNK")
#! Link("$(SubSys):Arc:OffRequest.FLNK","$(SubSys):Arc:OffRequest:SO")
#! Record("$(SubSys):Arc:Off:Pulse:Low",2620,4015,0,0,"$(SubSys):Arc:Off:Pulse:Low")
#! Field("$(SubSys):Arc:Off:Pulse:Low.OUT",16777215,1,"$(SubSys):Arc:Off:Pulse:Low.OUT")
#! Field("$(SubSys):Arc:Off:Pulse:Low.FLNK",16777215,1,"$(SubSys):Arc:Off:Pulse:Low.FLNK")
#! Link("$(SubSys):Arc:Off:Pulse:Low.FLNK","$(SubSys):Arc:Off:Pulse:High")
#! Record("$(SubSys):Arc:Off:Pulse:High",2940,4021,0,0,"$(SubSys):Arc:Off:Pulse:High")
#! Field("$(SubSys):Arc:Off:Pulse:High.OUT",16777215,1,"$(SubSys):Arc:Off:Pulse:High.OUT")
#! Record("$(SubSys):Arc:Request:Status",980,2923,0,1,"$(SubSys):Arc:Request:Status")
#! Field("$(SubSys):Arc:Request:Status.VAL",16777215,1,"$(SubSys):Arc:Request:Status.VAL")
#! Record("$(SubSys):Arc:Off:Timeout:FO",4680,4475,0,0,"$(SubSys):Arc:Off:Timeout:FO")
#! Field("$(SubSys):Arc:Off:Timeout:FO.FLNK",16777215,1,"$(SubSys):Arc:Off:Timeout:FO.FLNK")
#! Link("$(SubSys):Arc:Off:Timeout:FO.FLNK","$(SubSys):Arc:Condition:SDSetFalse")
#! Field("$(SubSys):Arc:Off:Timeout:FO.LNK1",16777215,0,"$(SubSys):Arc:Off:Timeout:FO.LNK1")
#! Link("$(SubSys):Arc:Off:Timeout:FO.LNK1","$(SubSys):Arc:Off:Failed")
#! Record("$(SubSys):Arc:OnReq:ShutDownAbort:Fan",2020,2435,0,1,"$(SubSys):Arc:OnReq:ShutDownAbort:Fan")
#! Field("$(SubSys):Arc:OnReq:ShutDownAbort:Fan.PROC",16777215,0,"$(SubSys):Arc:OnReq:ShutDownAbort:Fan.PROC")
#! Field("$(SubSys):Arc:OnReq:ShutDownAbort:Fan.LNK1",16777215,1,"$(SubSys):Arc:OnReq:ShutDownAbort:Fan.LNK1")
#! Link("$(SubSys):Arc:OnReq:ShutDownAbort:Fan.LNK1","$(SubSys):Arc:OnReqi:ShutDownAbort:Log")
#! Field("$(SubSys):Arc:OnReq:ShutDownAbort:Fan.LNK2",16777215,1,"$(SubSys):Arc:OnReq:ShutDownAbort:Fan.LNK2")
#! Link("$(SubSys):Arc:OnReq:ShutDownAbort:Fan.LNK2","$(SubSys):Arc:Condition:SDSetFalse")
#! Record("$(SubSys):Arc:UpperFlow:String",4500,75,0,1,"$(SubSys):Arc:UpperFlow:String")
#! Field("$(SubSys):Arc:UpperFlow:String.OUT",16777215,1,"$(SubSys):Arc:UpperFlow:String.OUT")
#! Field("$(SubSys):Arc:UpperFlow:String.PROC",16777215,0,"$(SubSys):Arc:UpperFlow:String.PROC")
#! Record("$(SubSys):Arc:LowerFlow:String",4520,215,0,1,"$(SubSys):Arc:LowerFlow:String")
#! Field("$(SubSys):Arc:LowerFlow:String.OUT",16777215,1,"$(SubSys):Arc:LowerFlow:String.OUT")
#! Field("$(SubSys):Arc:LowerFlow:String.PROC",16777215,0,"$(SubSys):Arc:LowerFlow:String.PROC")
#! Record("$(SubSys):Arc:UpperCathodePos:String",4540,375,0,1,"$(SubSys):Arc:UpperCathodePos:String")
#! Field("$(SubSys):Arc:UpperCathodePos:String.OUT",16777215,1,"$(SubSys):Arc:UpperCathodePos:String.OUT")
#! Field("$(SubSys):Arc:UpperCathodePos:String.PROC",16777215,0,"$(SubSys):Arc:UpperCathodePos:String.PROC")
#! Record("$(SubSys):Arc:LowewCathode:String",4540,555,0,1,"$(SubSys):Arc:LowewCathode:String")
#! Field("$(SubSys):Arc:LowewCathode:String.OUT",16777215,1,"$(SubSys):Arc:LowewCathode:String.OUT")
#! Field("$(SubSys):Arc:LowewCathode:String.PROC",16777215,0,"$(SubSys):Arc:LowewCathode:String.PROC")
#! Record("$(SubSys):Arc:ResistorBoxPos:String",4540,735,0,1,"$(SubSys):Arc:ResistorBoxPos:String")
#! Field("$(SubSys):Arc:ResistorBoxPos:String.OUT",16777215,1,"$(SubSys):Arc:ResistorBoxPos:String.OUT")
#! Field("$(SubSys):Arc:ResistorBoxPos:String.VAL",16777215,0,"$(SubSys):Arc:ResistorBoxPos:String.VAL")
#! Record("$(SubSys):Arc:TherapyELoop:String",4520,915,0,1,"$(SubSys):Arc:TherapyELoop:String")
#! Field("$(SubSys):Arc:TherapyELoop:String.OUT",16777215,1,"$(SubSys):Arc:TherapyELoop:String.OUT")
#! Field("$(SubSys):Arc:TherapyELoop:String.VAL",16777215,0,"$(SubSys):Arc:TherapyELoop:String.VAL")
#! Record("$(SubSys):Arc:Device:Interlock:LogSeq2",3900,342,0,0,"$(SubSys):Arc:Device:Interlock:LogSeq2")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK1",16777215,1,"$(SubSys):Arc:Device:Interlock:LogSeq2.LNK1")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK1","$(SubSys):Arc:UpperFlow:String.PROC")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK2",16777215,1,"$(SubSys):Arc:Device:Interlock:LogSeq2.LNK2")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK2","$(SubSys):Arc:LowerFlow:String.PROC")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK3",16777215,1,"$(SubSys):Arc:Device:Interlock:LogSeq2.LNK3")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK3","$(SubSys):Arc:UpperCathodePos:String.PROC")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK4",16777215,1,"$(SubSys):Arc:Device:Interlock:LogSeq2.LNK4")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK4","$(SubSys):Arc:LowewCathode:String.PROC")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK5",16777215,1,"$(SubSys):Arc:Device:Interlock:LogSeq2.LNK5")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK5","$(SubSys):Arc:ResistorBoxPos:String.VAL")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK6",16777215,1,"$(SubSys):Arc:Device:Interlock:LogSeq2.LNK6")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.LNK6","$(SubSys):Arc:TherapyELoop:String.VAL")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.PROC",16777215,0,"$(SubSys):Arc:Device:Interlock:LogSeq2.PROC")
#! Field("$(SubSys):Arc:Device:Interlock:LogSeq2.SELL",16777215,0,"$(SubSys):Arc:Device:Interlock:LogSeq2.SELL")
#! Link("$(SubSys):Arc:Device:Interlock:LogSeq2.SELL","$(SubSys):Arc:Device:Interlock:Log2.VAL")
#! Record("$(SubSys):Arc:Device:Interlock:Log2",3520,224,0,1,"$(SubSys):Arc:Device:Interlock:Log2")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.INPA",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.INPA")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.INPB",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.INPB")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.INPC",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.INPC")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.INPD",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.INPD")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.INPE",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.INPE")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.INPF",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.INPF")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.OUT",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.OUT")
#! Link("$(SubSys):Arc:Device:Interlock:Log2.OUT","$(SubSys):Arc:Device:Interlock:LogSeq2.PROC")
#! Field("$(SubSys):Arc:Device:Interlock:Log2.VAL",16777215,1,"$(SubSys):Arc:Device:Interlock:Log2.VAL")
#! TextBox(TB4,1400,3980,1400,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB3,980,3980,1000,3980,0,"Dialog",12,1,16711731,"",null)
#! TextBox(TB2,400,3720,720,3780,0,"Dialog",28,1,16711731,"PSHV Off Sequence",null)
#! TextBox(TB1,540,1780,880,1840,0,"Dialog",28,1,16711731,"PSHV On Sequence",null)
#! TextBox(TB0,2640,440,3500,540,0,"Dialog",28,1,16711731,"Log Device Interlock Preventing PSARC from turning On",null)
#! TextBox(TB8,1320,1091,2180,1191,0,"Dialog",24,1,16711731,"Initialize PSARC On and Off Modicon Coils",null)
#! TextBox(TB7,3320,2880,4180,2980,0,"Dialog",24,1,16711731,"Check for PSHV Turning on, Begin Initialization when it comes on",null)
#! TextBox(TB6,3580,3940,4440,4040,0,"Dialog",24,1,16711731,"ShutDown Timeout",null)
#! TextBox(TB5,1400,3460,2260,3560,0,"Dialog",24,1,16711731,"Turn PSHV Off if Shutting Down, Off Requested and not Failed,\nand Voltage < 10 V",null)
