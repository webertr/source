#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("/users/hicksmj/epics/opsDisplay/db/bar.dbd")
#! DBDEND


# Read PSHV Current from PSHV acromag via asyn
# Asyn polls device and creates I/O interrupt
# whenever value changes
record(ai, "$(SubSys):Arc:Curr:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(SourceRead, 7, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):Arc:Curr:ConvRead")
  field(PREC, "2")
  field(EGU, "mA")
}

# Convert Raw data to reading in volts
record(calcout, "$(SubSys):Arc:Curr:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A<10?0:A*-.0212937*B*2")
  field(INPA, "$(SubSys):Arc:Curr:GetRead.VAL")
  field(OUT, "$(SubSys):Arc:Curr:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "mA")
  field(PREC, "2")
  field(INPB, "$(SubSys):Arc:On:Status")
}

# PSHV Voltage PREAD
record(ai, "$(SubSys):Arc:Curr:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "0")
  field(EGU, "mA")
  field(FLNK, "$(SubSys):Arc:Volt:GetRead")
}

# ead EMC Voltage
# from EMC acromag via asyn
# Asyn polls device and creates I/O interrupt
# whenever value changes
record(ai, "$(SubSys):Arc:Volt:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(SourceRead, 6, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):Arc:Volt:ConvRead")
  field(PREC, "2")
  field(EGU, "kV")
}

# Convert Raw data to reading in KV
record(calcout, "$(SubSys):Arc:Volt:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A<10?0:A*-0.00012621*B*2")
  field(INPA, "$(SubSys):Arc:Volt:GetRead.VAL")
  field(OUT, "$(SubSys):Arc:Volt:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(EGU, "KV")
  field(PREC, "2")
  field(INPB, "$(SubSys):Arc:On:Status")
}

# EMC Current PREAD
record(ai, "$(SubSys):Arc:Volt:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(EGU, "kV")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(FLNK, "$(SubSys):Gas:Flow:SetDevice")
}

# Read BMG Current from BMG acromag via asyn
# Asyn polls device and creates I/O interrupt
# whenever value changes
record(ai, "$(SubSys):Gas:Flow:GetRead") {
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(SourceRead, 8, -16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):Gas:Flow:ConvRead")
}

# BMG Current PREAD
record(ai, "$(SubSys):Gas:Flow:Read") {
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
  field(PREC, "2")
  field(FLNK, "$(SubSys):Gas:Flow:PSETChanged:Calc")
  field(EGU, "CCM")
}

# Converted 0-5 volts, to 0 full scale
# output for the Horner Device. The write
# is a 0-20000 for a 0-10V signal. Don't want to
# go higher then 5 V. Don't know why it is 4.75
# and not 5.
record(calc, "$(SubSys):Gas:Flow:SetDeviceCalc") {
  field(SCAN, "Passive")
  field(FLNK, "$(SubSys):Gas:Flow:SendSet")
  field(CALC, "A/5*20000")
  field(INPA, "$(SubSys):Gas:Flow:SetDevice.VAL PP")
  field(PREC, "1")
}

# This actually writes the output to the Horner Device. It sends a 0-5V signal
# to a driver that outputs a 0-120 mA signal to the leak valve.
record(ao, "$(SubSys):Gas:Flow:SendSet") {
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(OUT, "@asynMask(GasFlowWrite, 0, 16, 1000)MODBUS_DATA")
  field(PREC, "1")
  field(FLNK, "$(SubSys):Gas:Flow:GetRead")
  field(DOL, "$(SubSys):Gas:Flow:SetDeviceCalc.VAL")
  field(OMSL, "closed_loop")
  field(OIF, "Full")
  field(DRVH, "20000")
  field(DRVL, "0")
}

# Checks to see if value loaded by user has the write Chimney selected
# for on the PS Arc HV switch. Used as a particle beam interlock.
record(calcout, "$(SubSys):CathodeSwitchWrong:Status") {
  field(CALC, "(A=1)&(B#1)|(A#1)&(C#1)|(B=C)")
  field(INPA, "CCC:SR:ParticleType")
  field(INPB, "Source:Arc:CathodeN1Select:Status")
  field(OUT, "$(SubSys):CathodeSwitchPositionWrong:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(SubSys):GasValveWrong:Status")
  field(INPC, "Source:Arc:CathodeN2Select:Status")
}

# Let's user know what happened if the cathode switch is
# in the wrong position.
record(stringout, "$(SubSys):CathodeSwitchPositionWrong:String") {
  field(VAL, "Cathode Switch Wrong Posn")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Let's the user know if the gas manifold as the wrong valve selected.
record(stringout, "$(SubSys):GasValveWrong:String") {
  field(VAL, "Source Gas Valve Wrong")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks to see if the gas type selected by the user has the correct
# valve open on gas manifold. Read in as a particle beam interlock.
record(calcout, "$(SubSys):GasValveWrong:Status") {
  field(CALC, "!((A&G)|(A&H)|(B&I)|(C&J)|(D&K)|E|F)")
  field(INPA, "Source:SourceGas:HydrogenValveOpen:CMD")
  field(INPB, "Source:SourceGas:DeuteriumValveOpen:CMD ")
  field(OUT, "$(SubSys):GasValveWrong:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(SubSys):ChimneyValveWrong:Status")
  field(INPC, "Source:SourceGas:3HEValveOpen:CMD")
  field(INPD, "Source:SourceGas:4HEValveOpen:CMD")
  field(INPE, "Source:SourceGas:AirValveOpen:CMD")
  field(INPF, "Source:Cath:ServicePumpManifoldValveOpen:CMD")
  field(INPG, "ParticleType:Protons:Write")
  field(INPH, "ParticleType:H2:Write")
  field(INPI, "ParticleType:DEUT:Write")
  field(INPJ, "ParticleType:3He:Write")
  field(INPK, "ParticleType:Alpha:Write")
}

# Used to see if the gas selected by the user has the correct chimney
# valve selected for on the gas manifold. Used as a particle bema interlock.
# This records flinks to the record that checks all the particle
# beam interocks, then writes to the modicon.
record(calcout, "$(SubSys):ChimneyValveWrong:Status") {
  field(CALC, "(G&!A)|(!G&!B)")
  field(INPA, "Source:SourceChimney:N1:CMD")
  field(INPB, "Source:SourceChimney:N2:CMD")
  field(OUT, "$(SubSys):ChimneyValveWrong:String.PROC")
  field(OOPT, "Transition To Non-zero")
  field(FLNK, "$(SubSys):ParticleBeam:Interlock:Status.PROC")
  field(INPG, "ParticleType:Protons:Write")
  field(INPH, "ParticleType:H2:Write")
  field(INPI, "ParticleType:DEUT:Write")
  field(INPJ, "ParticleType:3He:Write")
  field(INPK, "ParticleType:Alpha:Write")
}

# Let's the user know if the gas manifold as the wrong valve selected.
record(stringout, "$(SubSys):ChimneyValveWrong:String") {
  field(VAL, "Chimney Gas Valve Wrong")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# This AI record has the final value,
# in a 0-5V range, written to it that
# will go on the actual control valve.
record(ai, "$(SubSys):Gas:Flow:SetDevice") {
  field(FLNK, "$(SubSys):Gas:Flow:SetDeviceCalc")
  field(PREC, "3")
}

# Log pdiff interlock
record(stringout, "$(SubSys):Gas:Flow:ReadPDIFF:Report") {
  field(VAL, "Gas Flow PDIFF Error")
  field(OUT, "CCC:OpsDisplay:System:Write PP")
}

# Checks Pread less than or equal to PLow.
# 
# This is read in BeamInterlockCondition.vdb
# and used to set an interlock.
record(calcout, "$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc") {
  field(FLNK, "$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc")
  field(CALC, "(A<B)|(A=B)")
  field(INPA, "$(SubSys):Gas:Flow:Read.VAL")
  field(INPB, "$(SubSys):Gas:Flow:PLOW")
  field(OUT, "$(SubSys):Gas:Flow:PLow:Error:String.PROC PP")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
}

# Checks Pread greater than or equal to PHigh.
# 
# This is read in BeamInterlockCondition.vdb
# and used to set an interlock.
# 
# There is an FLINK that initiates the record in
# beaminterlockcondition.vdb to process and check
# the particle beam interlocks.
record(calcout, "$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc") {
  field(INPA, "$(SubSys):Gas:Flow:Read.VAL")
  field(INPB, "$(SubSys):Gas:Flow:PHIGH")
  field(OUT, "$(SubSys):Gas:Flow:PHigh:Error:String.PROC PP")
  field(CALC, "(A>B)|(A=B)")
  field(OOPT, "Transition To Non-zero")
  field(DOPT, "Use CALC")
  field(FLNK, "$(SubSys):Curr:ModuleStatus")
}

# Logs Pread less than or equal to PLow Interlock
record(stringout, "$(SubSys):Gas:Flow:PLow:Error:String") {
  field(VAL, "Gas Flow < PLow ")
  field(OUT, "CCC:OpsDisplay:System:Write CC PP")
}

# Logs Pread greater than or equal to PHigh Interlock
record(stringout, "$(SubSys):Gas:Flow:PHigh:Error:String") {
  field(VAL, "Gas Flow > PHigh")
  field(OUT, "CCC:OpsDisplay:System:Write CC PP")
}

# This compares the current pset to the previous pset. if there is a difference,
# it sets the val to 6, then starts subtracting. once 1 is hit, the diff will
# allowed to be processes. This allows the user to change the setting, and
# not get the rf turning off.
record(calcout, "$(SubSys):Gas:Flow:PSETChanged:Calc") {
  field(FLNK, "$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc")
  field(CALC, "A#B?15:ABS(C-1)")
  field(INPA, "$(SubSys):Gas:Flow:Set")
  field(INPB, "$(SubSys):Gas:Flow:PSETChanged:Calc.LA")
  field(INPC, "$(SubSys):Gas:Flow:PSETChanged:Calc.VAL")
}

# This only returns a true pdiff if, from the previous record, the pset hasn't
# changed for more then 10 clock cycles.
record(calcout, "$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc") {
  field(CALC, "((ABS(A-B))>C)&(D<2)")
  field(INPA, "$(SubSys):Gas:Flow:Read.VAL")
  field(INPB, "$(SubSys):Gas:Flow:Set")
  field(INPC, "$(SubSys):Gas:Flow:PDIFF.VAL")
  field(OUT, "$(SubSys):Gas:Flow:ReadPDIFF:Report.PROC NPP")
  field(FLNK, "$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2")
  field(OOPT, "Transition To Non-zero")
  field(INPD, "$(SubSys):Gas:Flow:PSETChanged:Calc.VAL")
}

# This basically provides the yellow warning light for the user to see if the pdiff
# gets to close. Also, requiers that at least 10 seconds have past since the pset
# has been changed.
record(calcout, "$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2") {
  field(CALC, "((ABS(A-B))>(.5*C))&(D<2)")
  field(INPA, "$(SubSys):Gas:Flow:Read.VAL")
  field(INPB, "$(SubSys):Gas:Flow:Set")
  field(INPC, "$(SubSys):Gas:Flow:PDIFF.VAL")
  field(FLNK, "$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc")
  field(INPD, "$(SubSys):Gas:Flow:PSETChanged:Calc")
}

# Convert Raw data to reading in Amps. This record is setup such that it cannot go below 0. It is done so to prevent
# erratic voltage flucatations around 0 amps that occur, most likely b/c of the acromag (needs to be investigated).
record(calcout, "$(SubSys):Gas:Flow:ConvRead") {
  field(SCAN, "Passive")
  field(CALC, "A*0.0010")
  field(INPA, "$(SubSys):Gas:Flow:GetRead.VAL")
  field(OUT, "$(SubSys):Gas:Flow:Read.VAL PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(PREC, "2")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "0.01")
  field(LOLO, "0")
  field(LLSV, "INVALID")
}

record(ai, "$(SubSys):Curr:ModuleStatus") {
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(INP, "@asynMask(SourceRead, 0, 16, 1000)MODBUS_DATA")
  field(FLNK, "$(SubSys):ReadAcromagAIError:Check")
}

record(calcout, "$(SubSys):ReadAcromagAIError:Check") {
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):Curr:ModuleStatus.STAT")
  field(OUT, "$(SubSys):CommError:Status PP")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
  field(FLNK, "$(SubSys):ReadAcromagStatus:Check")
}

record(calcout, "$(SubSys):ReadAcromagStatus:Check") {
  field(CALC, "!(A=0)")
  field(INPA, "$(SubSys):Curr:ModuleStatus.VAL")
  field(OUT, "$(SubSys):HardwareError:Status PP")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "1")
  field(FLNK, "$(SubSys):CathodeSwitchWrong:Status")
}

#! Further lines contain data used by VisualDCT
#! View(1068,2192,1.0)
#! Record("$(SubSys):Arc:Curr:GetRead",320,94,0,1,"$(SubSys):Arc:Curr:GetRead")
#! Field("$(SubSys):Arc:Curr:GetRead.FLNK",16777215,1,"$(SubSys):Arc:Curr:GetRead.FLNK")
#! Link("$(SubSys):Arc:Curr:GetRead.FLNK","$(SubSys):Arc:Curr:ConvRead")
#! Field("$(SubSys):Arc:Curr:GetRead.VAL",16777215,1,"$(SubSys):Arc:Curr:GetRead.VAL")
#! Record("$(SubSys):Arc:Curr:ConvRead",720,119,0,0,"$(SubSys):Arc:Curr:ConvRead")
#! Field("$(SubSys):Arc:Curr:ConvRead.INPA",16777215,0,"$(SubSys):Arc:Curr:ConvRead.INPA")
#! Link("$(SubSys):Arc:Curr:ConvRead.INPA","$(SubSys):Arc:Curr:GetRead.VAL")
#! Field("$(SubSys):Arc:Curr:ConvRead.OUT",16777215,1,"$(SubSys):Arc:Curr:ConvRead.OUT")
#! Link("$(SubSys):Arc:Curr:ConvRead.OUT","$(SubSys):Arc:Curr:Read.VAL")
#! Field("$(SubSys):Arc:Curr:ConvRead.INPB",16777215,1,"$(SubSys):Arc:Curr:ConvRead.INPB")
#! Record("$(SubSys):Arc:Curr:Read",1060,254,0,1,"$(SubSys):Arc:Curr:Read")
#! Field("$(SubSys):Arc:Curr:Read.VAL",16777215,0,"$(SubSys):Arc:Curr:Read.VAL")
#! Field("$(SubSys):Arc:Curr:Read.FLNK",16777215,0,"$(SubSys):Arc:Curr:Read.FLNK")
#! Link("$(SubSys):Arc:Curr:Read.FLNK","$(SubSys):Arc:Volt:GetRead")
#! Record("$(SubSys):Arc:Volt:GetRead",340,474,0,1,"$(SubSys):Arc:Volt:GetRead")
#! Field("$(SubSys):Arc:Volt:GetRead.FLNK",16777215,1,"$(SubSys):Arc:Volt:GetRead.FLNK")
#! Link("$(SubSys):Arc:Volt:GetRead.FLNK","$(SubSys):Arc:Volt:ConvRead")
#! Field("$(SubSys):Arc:Volt:GetRead.VAL",16777215,1,"$(SubSys):Arc:Volt:GetRead.VAL")
#! Record("$(SubSys):Arc:Volt:ConvRead",620,459,0,0,"$(SubSys):Arc:Volt:ConvRead")
#! Field("$(SubSys):Arc:Volt:ConvRead.INPA",16777215,0,"$(SubSys):Arc:Volt:ConvRead.INPA")
#! Link("$(SubSys):Arc:Volt:ConvRead.INPA","$(SubSys):Arc:Volt:GetRead.VAL")
#! Field("$(SubSys):Arc:Volt:ConvRead.OUT",16777215,1,"$(SubSys):Arc:Volt:ConvRead.OUT")
#! Link("$(SubSys):Arc:Volt:ConvRead.OUT","$(SubSys):Arc:Volt:Read.VAL")
#! Field("$(SubSys):Arc:Volt:ConvRead.INPB",16777215,1,"$(SubSys):Arc:Volt:ConvRead.INPB")
#! Record("$(SubSys):Arc:Volt:Read",1020,539,0,1,"$(SubSys):Arc:Volt:Read")
#! Field("$(SubSys):Arc:Volt:Read.VAL",16777215,0,"$(SubSys):Arc:Volt:Read.VAL")
#! Field("$(SubSys):Arc:Volt:Read.FLNK",16777215,0,"$(SubSys):Arc:Volt:Read.FLNK")
#! Link("$(SubSys):Arc:Volt:Read.FLNK","$(SubSys):Gas:Flow:SetDevice")
#! Record("$(SubSys):Gas:Flow:GetRead",140,1422,0,1,"$(SubSys):Gas:Flow:GetRead")
#! Field("$(SubSys):Gas:Flow:GetRead.FLNK",16777215,1,"$(SubSys):Gas:Flow:GetRead.FLNK")
#! Link("$(SubSys):Gas:Flow:GetRead.FLNK","$(SubSys):Gas:Flow:ConvRead")
#! Field("$(SubSys):Gas:Flow:GetRead.VAL",16777215,1,"$(SubSys):Gas:Flow:GetRead.VAL")
#! Record("$(SubSys):Gas:Flow:Read",1000,1394,0,1,"$(SubSys):Gas:Flow:Read")
#! Field("$(SubSys):Gas:Flow:Read.FLNK",16777215,1,"$(SubSys):Gas:Flow:Read.FLNK")
#! Link("$(SubSys):Gas:Flow:Read.FLNK","$(SubSys):Gas:Flow:PSETChanged:Calc")
#! Field("$(SubSys):Gas:Flow:Read.VAL",16777215,1,"$(SubSys):Gas:Flow:Read.VAL")
#! Record("$(SubSys):Gas:Flow:SetDeviceCalc",700,894,0,0,"$(SubSys):Gas:Flow:SetDeviceCalc")
#! Field("$(SubSys):Gas:Flow:SetDeviceCalc.FLNK",16777215,1,"$(SubSys):Gas:Flow:SetDeviceCalc.FLNK")
#! Link("$(SubSys):Gas:Flow:SetDeviceCalc.FLNK","$(SubSys):Gas:Flow:SendSet")
#! Field("$(SubSys):Gas:Flow:SetDeviceCalc.INPA",16777215,0,"$(SubSys):Gas:Flow:SetDeviceCalc.INPA")
#! Link("$(SubSys):Gas:Flow:SetDeviceCalc.INPA","$(SubSys):Gas:Flow:SetDevice.VAL")
#! Field("$(SubSys):Gas:Flow:SetDeviceCalc.VAL",16777215,1,"$(SubSys):Gas:Flow:SetDeviceCalc.VAL")
#! Record("$(SubSys):Gas:Flow:SendSet",1020,965,0,0,"$(SubSys):Gas:Flow:SendSet")
#! Field("$(SubSys):Gas:Flow:SendSet.DOL",16777215,0,"$(SubSys):Gas:Flow:SendSet.DOL")
#! Link("$(SubSys):Gas:Flow:SendSet.DOL","$(SubSys):Gas:Flow:SetDeviceCalc.VAL")
#! Field("$(SubSys):Gas:Flow:SendSet.FLNK",16777215,0,"$(SubSys):Gas:Flow:SendSet.FLNK")
#! Link("$(SubSys):Gas:Flow:SendSet.FLNK","$(SubSys):Gas:Flow:GetRead")
#! Record("$(SubSys):CathodeSwitchWrong:Status",2300,2586,0,0,"$(SubSys):CathodeSwitchWrong:Status")
#! Field("$(SubSys):CathodeSwitchWrong:Status.INPA",16777215,1,"$(SubSys):CathodeSwitchWrong:Status.INPA")
#! Field("$(SubSys):CathodeSwitchWrong:Status.INPB",16777215,1,"$(SubSys):CathodeSwitchWrong:Status.INPB")
#! Field("$(SubSys):CathodeSwitchWrong:Status.FLNK",16777215,1,"$(SubSys):CathodeSwitchWrong:Status.FLNK")
#! Link("$(SubSys):CathodeSwitchWrong:Status.FLNK","$(SubSys):GasValveWrong:Status")
#! Field("$(SubSys):CathodeSwitchWrong:Status.INPC",16777215,1,"$(SubSys):CathodeSwitchWrong:Status.INPC")
#! Field("$(SubSys):CathodeSwitchWrong:Status.OUT",16777215,1,"$(SubSys):CathodeSwitchWrong:Status.OUT")
#! Link("$(SubSys):CathodeSwitchWrong:Status.OUT","$(SubSys):CathodeSwitchPositionWrong:String.PROC")
#! Record("$(SubSys):CathodeSwitchPositionWrong:String",2600,2856,0,1,"$(SubSys):CathodeSwitchPositionWrong:String")
#! Field("$(SubSys):CathodeSwitchPositionWrong:String.OUT",16777215,1,"$(SubSys):CathodeSwitchPositionWrong:String.OUT")
#! Field("$(SubSys):CathodeSwitchPositionWrong:String.PROC",16777215,0,"$(SubSys):CathodeSwitchPositionWrong:String.PROC")
#! Record("$(SubSys):GasValveWrong:String",3400,2936,0,1,"$(SubSys):GasValveWrong:String")
#! Field("$(SubSys):GasValveWrong:String.OUT",16777215,1,"$(SubSys):GasValveWrong:String.OUT")
#! Field("$(SubSys):GasValveWrong:String.PROC",16777215,0,"$(SubSys):GasValveWrong:String.PROC")
#! Record("$(SubSys):GasValveWrong:Status",3100,2515,0,0,"$(SubSys):GasValveWrong:Status")
#! Field("$(SubSys):GasValveWrong:Status.INPA",16777215,1,"$(SubSys):GasValveWrong:Status.INPA")
#! Field("$(SubSys):GasValveWrong:Status.INPB",16777215,1,"$(SubSys):GasValveWrong:Status.INPB")
#! Field("$(SubSys):GasValveWrong:Status.FLNK",16777215,1,"$(SubSys):GasValveWrong:Status.FLNK")
#! Link("$(SubSys):GasValveWrong:Status.FLNK","$(SubSys):ChimneyValveWrong:Status")
#! Field("$(SubSys):GasValveWrong:Status.INPC",16777215,1,"$(SubSys):GasValveWrong:Status.INPC")
#! Field("$(SubSys):GasValveWrong:Status.INPD",16777215,1,"$(SubSys):GasValveWrong:Status.INPD")
#! Field("$(SubSys):GasValveWrong:Status.OUT",16777215,1,"$(SubSys):GasValveWrong:Status.OUT")
#! Link("$(SubSys):GasValveWrong:Status.OUT","$(SubSys):GasValveWrong:String.PROC")
#! Field("$(SubSys):GasValveWrong:Status.INPE",16777215,1,"$(SubSys):GasValveWrong:Status.INPE")
#! Field("$(SubSys):GasValveWrong:Status.INPF",16777215,1,"$(SubSys):GasValveWrong:Status.INPF")
#! Field("$(SubSys):GasValveWrong:Status.INPG",16777215,1,"$(SubSys):GasValveWrong:Status.INPG")
#! Field("$(SubSys):GasValveWrong:Status.INPH",16777215,1,"$(SubSys):GasValveWrong:Status.INPH")
#! Field("$(SubSys):GasValveWrong:Status.INPI",16777215,1,"$(SubSys):GasValveWrong:Status.INPI")
#! Field("$(SubSys):GasValveWrong:Status.INPJ",16777215,1,"$(SubSys):GasValveWrong:Status.INPJ")
#! Field("$(SubSys):GasValveWrong:Status.INPK",16777215,1,"$(SubSys):GasValveWrong:Status.INPK")
#! Record("$(SubSys):ChimneyValveWrong:Status",3680,2611,0,0,"$(SubSys):ChimneyValveWrong:Status")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPA",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPA")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPB",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPB")
#! Field("$(SubSys):ChimneyValveWrong:Status.OUT",16777215,1,"$(SubSys):ChimneyValveWrong:Status.OUT")
#! Link("$(SubSys):ChimneyValveWrong:Status.OUT","$(SubSys):ChimneyValveWrong:String.PROC")
#! Field("$(SubSys):ChimneyValveWrong:Status.FLNK",16777215,1,"$(SubSys):ChimneyValveWrong:Status.FLNK")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPG",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPG")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPH",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPH")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPI",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPI")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPJ",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPJ")
#! Field("$(SubSys):ChimneyValveWrong:Status.INPK",16777215,1,"$(SubSys):ChimneyValveWrong:Status.INPK")
#! Record("$(SubSys):ChimneyValveWrong:String",4020,2996,0,1,"$(SubSys):ChimneyValveWrong:String")
#! Field("$(SubSys):ChimneyValveWrong:String.OUT",16777215,1,"$(SubSys):ChimneyValveWrong:String.OUT")
#! Field("$(SubSys):ChimneyValveWrong:String.PROC",16777215,0,"$(SubSys):ChimneyValveWrong:String.PROC")
#! Record("$(SubSys):Gas:Flow:SetDevice",180,916,0,1,"$(SubSys):Gas:Flow:SetDevice")
#! Field("$(SubSys):Gas:Flow:SetDevice.FLNK",16777215,1,"$(SubSys):Gas:Flow:SetDevice.FLNK")
#! Link("$(SubSys):Gas:Flow:SetDevice.FLNK","$(SubSys):Gas:Flow:SetDeviceCalc")
#! Field("$(SubSys):Gas:Flow:SetDevice.VAL",16777215,1,"$(SubSys):Gas:Flow:SetDevice.VAL")
#! Record("$(SubSys):Gas:Flow:ReadPDIFF:Report",2560,1296,0,1,"$(SubSys):Gas:Flow:ReadPDIFF:Report")
#! Field("$(SubSys):Gas:Flow:ReadPDIFF:Report.OUT",16777215,1,"$(SubSys):Gas:Flow:ReadPDIFF:Report.OUT")
#! Field("$(SubSys):Gas:Flow:ReadPDIFF:Report.PROC",16777215,0,"$(SubSys):Gas:Flow:ReadPDIFF:Report.PROC")
#! Record("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc",3060,1726,0,0,"$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc")
#! Field("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.OUT",16777215,1,"$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.OUT")
#! Link("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.OUT","$(SubSys):Gas:Flow:PLow:Error:String.PROC")
#! Field("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.INPA",16777215,0,"$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.INPA")
#! Link("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.INPA","$(SubSys):Gas:Flow:Read.VAL")
#! Field("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.FLNK",16777215,1,"$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.FLNK")
#! Link("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.FLNK","$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc")
#! Field("$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.INPB",16777215,1,"$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc.INPB")
#! Record("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc",3400,1906,0,0,"$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc")
#! Field("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.INPA",16777215,0,"$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.INPA")
#! Link("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.INPA","$(SubSys):Gas:Flow:Read.VAL")
#! Field("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.INPB",16777215,1,"$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.INPB")
#! Field("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.OUT",16777215,1,"$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.OUT")
#! Link("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.OUT","$(SubSys):Gas:Flow:PHigh:Error:String.PROC")
#! Field("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.FLNK",16777215,0,"$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.FLNK")
#! Link("$(SubSys):Gas:Flow:PREAD:GTOE:PHIGH:Calc.FLNK","$(SubSys):Curr:ModuleStatus")
#! Record("$(SubSys):Gas:Flow:PLow:Error:String",3400,1596,0,1,"$(SubSys):Gas:Flow:PLow:Error:String")
#! Field("$(SubSys):Gas:Flow:PLow:Error:String.OUT",16777215,1,"$(SubSys):Gas:Flow:PLow:Error:String.OUT")
#! Field("$(SubSys):Gas:Flow:PLow:Error:String.PROC",16777215,0,"$(SubSys):Gas:Flow:PLow:Error:String.PROC")
#! Record("$(SubSys):Gas:Flow:PHigh:Error:String",3720,1856,0,1,"$(SubSys):Gas:Flow:PHigh:Error:String")
#! Field("$(SubSys):Gas:Flow:PHigh:Error:String.OUT",16777215,1,"$(SubSys):Gas:Flow:PHigh:Error:String.OUT")
#! Field("$(SubSys):Gas:Flow:PHigh:Error:String.PROC",16777215,0,"$(SubSys):Gas:Flow:PHigh:Error:String.PROC")
#! Record("$(SubSys):Gas:Flow:PSETChanged:Calc",1700,1234,0,0,"$(SubSys):Gas:Flow:PSETChanged:Calc")
#! Field("$(SubSys):Gas:Flow:PSETChanged:Calc.FLNK",16777215,1,"$(SubSys):Gas:Flow:PSETChanged:Calc.FLNK")
#! Link("$(SubSys):Gas:Flow:PSETChanged:Calc.FLNK","$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc")
#! Field("$(SubSys):Gas:Flow:PSETChanged:Calc.INPA",16777215,1,"$(SubSys):Gas:Flow:PSETChanged:Calc.INPA")
#! Field("$(SubSys):Gas:Flow:PSETChanged:Calc.LA",16777215,0,"$(SubSys):Gas:Flow:PSETChanged:Calc.LA")
#! Field("$(SubSys):Gas:Flow:PSETChanged:Calc.INPB",16777215,0,"$(SubSys):Gas:Flow:PSETChanged:Calc.INPB")
#! Link("$(SubSys):Gas:Flow:PSETChanged:Calc.INPB","$(SubSys):Gas:Flow:PSETChanged:Calc.LA")
#! Field("$(SubSys):Gas:Flow:PSETChanged:Calc.VAL",16777215,1,"$(SubSys):Gas:Flow:PSETChanged:Calc.VAL")
#! Field("$(SubSys):Gas:Flow:PSETChanged:Calc.INPC",16777215,0,"$(SubSys):Gas:Flow:PSETChanged:Calc.INPC")
#! Link("$(SubSys):Gas:Flow:PSETChanged:Calc.INPC","$(SubSys):Gas:Flow:PSETChanged:Calc.VAL")
#! Record("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc",2200,1332,0,0,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPD",16777215,0,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPD")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPD","$(SubSys):Gas:Flow:PSETChanged:Calc.VAL")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPB",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPB")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPC",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPC")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.OUT",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.OUT")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.OUT","$(SubSys):Gas:Flow:ReadPDIFF:Report.PROC")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.FLNK",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.FLNK")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.FLNK","$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPA",16777215,0,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPA")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc.INPA","$(SubSys):Gas:Flow:Read.VAL")
#! Record("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2",2660,1560,0,0,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPA",16777215,0,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPA")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPA","$(SubSys):Gas:Flow:Read.VAL")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPB",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPB")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPC",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPC")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.FLNK",16777215,1,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.FLNK")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.FLNK","$(SubSys):Gas:Flow:PREAD:LTOE:PLOW:Calc")
#! Field("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPD",16777215,0,"$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPD")
#! Link("$(SubSys):Gas:Flow:PREADPSET:PDIFF:Calc2.INPD","$(SubSys):Gas:Flow:PSETChanged:Calc.VAL")
#! Record("$(SubSys):Gas:Flow:ConvRead",720,1351,0,0,"$(SubSys):Gas:Flow:ConvRead")
#! Field("$(SubSys):Gas:Flow:ConvRead.INPA",16777215,0,"$(SubSys):Gas:Flow:ConvRead.INPA")
#! Link("$(SubSys):Gas:Flow:ConvRead.INPA","$(SubSys):Gas:Flow:GetRead.VAL")
#! Field("$(SubSys):Gas:Flow:ConvRead.OUT",16777215,1,"$(SubSys):Gas:Flow:ConvRead.OUT")
#! Link("$(SubSys):Gas:Flow:ConvRead.OUT","$(SubSys):Gas:Flow:Read.VAL")
#! Record("$(SubSys):Curr:ModuleStatus",1200,2608,0,1,"$(SubSys):Curr:ModuleStatus")
#! Field("$(SubSys):Curr:ModuleStatus.FLNK",16777215,1,"$(SubSys):Curr:ModuleStatus.FLNK")
#! Link("$(SubSys):Curr:ModuleStatus.FLNK","$(SubSys):ReadAcromagAIError:Check")
#! Field("$(SubSys):Curr:ModuleStatus.STAT",16777215,1,"$(SubSys):Curr:ModuleStatus.STAT")
#! Field("$(SubSys):Curr:ModuleStatus.VAL",16777215,1,"$(SubSys):Curr:ModuleStatus.VAL")
#! Record("$(SubSys):ReadAcromagAIError:Check",1580,2586,0,0,"$(SubSys):ReadAcromagAIError:Check")
#! Field("$(SubSys):ReadAcromagAIError:Check.INPA",16777215,0,"$(SubSys):ReadAcromagAIError:Check.INPA")
#! Link("$(SubSys):ReadAcromagAIError:Check.INPA","$(SubSys):Curr:ModuleStatus.STAT")
#! Field("$(SubSys):ReadAcromagAIError:Check.OUT",16777215,1,"$(SubSys):ReadAcromagAIError:Check.OUT")
#! Field("$(SubSys):ReadAcromagAIError:Check.FLNK",16777215,1,"$(SubSys):ReadAcromagAIError:Check.FLNK")
#! Link("$(SubSys):ReadAcromagAIError:Check.FLNK","$(SubSys):ReadAcromagStatus:Check")
#! Record("$(SubSys):ReadAcromagStatus:Check",1880,2666,0,0,"$(SubSys):ReadAcromagStatus:Check")
#! Field("$(SubSys):ReadAcromagStatus:Check.INPA",16777215,0,"$(SubSys):ReadAcromagStatus:Check.INPA")
#! Link("$(SubSys):ReadAcromagStatus:Check.INPA","$(SubSys):Curr:ModuleStatus.VAL")
#! Field("$(SubSys):ReadAcromagStatus:Check.OUT",16777215,1,"$(SubSys):ReadAcromagStatus:Check.OUT")
#! Field("$(SubSys):ReadAcromagStatus:Check.FLNK",16777215,1,"$(SubSys):ReadAcromagStatus:Check.FLNK")
#! Link("$(SubSys):ReadAcromagStatus:Check.FLNK","$(SubSys):CathodeSwitchWrong:Status")
#! Box(Box0,1260,40,40,1660,0,16724787,null)
#! Box(Box2,4420,2400,640,3280,0,16724787,null)
#! Box(Box1,4100,1100,1420,2160,0,16724787,null)
#! TextBox(TB3,1400,1060,1660,900,0,"Dialog",26,1,13369344,"Checks PDIFF/PLOW\nPHIGH On Gas FLOW",null)
#! TextBox(TB2,720,2520,980,2440,0,"Dialog",14,1,13369344,"Loop that Checks the\nAcromag Communiation\nand the Gas and Chimney\nSelection Consistency",null)
#! TextBox(TB1,60,220,320,60,0,"Dialog",28,1,13369344,"Read PSHV/Gas Manifold\nand Write Gas Manifold",null)
